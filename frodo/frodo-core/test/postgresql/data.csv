LOG,DB,TID,USER,USER_IP,FAIL,CHECK_ROWS,UPDATE_ROWS,LATENCY,TS,ORIGIN_TIME
"execute <unnamed>: SET extra_float_digits = 3","postgres",23112,"polar_test","100.104.175.250","00000",0,0,31,2023-07-26 14:31:00,1690353060000000
"execute <unnamed>: SELECT pg_catalog.set_config(name,'YYYY-MM-DD HH24:MI:SS','f') FROM pg_catalog.pg_settings WHERE name = 'nls_date_format'","postgres",23112,"polar_test","100.104.175.250","00000",0,0,1683,2023-07-26 14:31:00,1690353060000000
"execute <unnamed>: SELECT pg_catalog.set_config(name,'YYYY-MM-DD HH24:MI:SS.FF','f') FROM pg_catalog.pg_settings WHERE name = 'nls_timestamp_format'","postgres",23112,"polar_test","100.104.175.250","00000",0,0,1452,2023-07-26 14:31:00,1690353060000000
"execute <unnamed>: SELECT pg_catalog.set_config(name,'YYYY-MM-DD HH24:MI:SS.FFOF','f') FROM pg_catalog.pg_settings WHERE name = 'nls_timestamp_tz_format'","postgres",23112,"polar_test","100.104.175.250","00000",0,0,1466,2023-07-26 14:31:00,1690353060000000
"execute <unnamed>: SET application_name = 'PolarDB2 JDBC Driver'","postgres",23112,"polar_test","100.104.175.250","00000",0,0,12,2023-07-26 14:31:00,1690353060000000
"execute <unnamed>: select 1","postgres",23112,"polar_test","100.104.175.250","00000",0,0,13,2023-07-26 14:31:00,1690353060000000
"execute <unnamed>: select version()","polardb",23116,"polar_test","100.104.175.250","00000",0,0,31,2023-07-26 14:31:00,1690353060000000
"execute <unnamed>: SELECT pg_catalog.set_config(name,boot_val,'f') FROM pg_catalog.pg_settings WHERE name = 'nls_date_format'","polardb",23116,"polar_test","100.104.175.250","00000",0,0,1685,2023-07-26 14:31:01,1690353061000000
"execute <unnamed>: SELECT pg_catalog.set_config(name,boot_val,'f') FROM pg_catalog.pg_settings WHERE name = 'nls_timestamp_format'","polardb",23116,"polar_test","100.104.175.250","00000",0,0,1393,2023-07-26 14:31:01,1690353061000000
"execute <unnamed>: SELECT pg_catalog.set_config(name,boot_val,'f') FROM pg_catalog.pg_settings WHERE name = 'nls_timestamp_tz_format'","polardb",23116,"polar_test","100.104.175.250","00000",0,0,1402,2023-07-26 14:31:01,1690353061000000
"execute <unnamed>: SET extra_float_digits = 3","polardb",23116,"polar_test","100.104.175.250","00000",0,0,12,2023-07-26 14:31:01,1690353061000000
"execute <unnamed>: SET application_name = 'PolarDB JDBC Driver'","polardb",23116,"polar_test","100.104.175.250","00000",0,0,14,2023-07-26 14:31:01,1690353061000000
"execute <unnamed>: select version()","postgres",23099,"polar_test","100.104.175.10","00000",0,0,34,2023-07-26 14:31:00,1690353060000000
"execute <unnamed>: SELECT pg_catalog.set_config(name,boot_val,'f') FROM pg_catalog.pg_settings WHERE name = 'nls_date_format'","postgres",23099,"polar_test","100.104.175.10","00000",0,0,1827,2023-07-26 14:31:00,1690353060000000
"execute <unnamed>: SELECT pg_catalog.set_config(name,boot_val,'f') FROM pg_catalog.pg_settings WHERE name = 'nls_timestamp_format'","postgres",23099,"polar_test","100.104.175.10","00000",0,0,1457,2023-07-26 14:31:00,1690353060000000
"execute <unnamed>: SELECT pg_catalog.set_config(name,boot_val,'f') FROM pg_catalog.pg_settings WHERE name = 'nls_timestamp_tz_format'","postgres",23099,"polar_test","100.104.175.10","00000",0,0,1418,2023-07-26 14:31:00,1690353060000000
"execute <unnamed>: SET extra_float_digits = 3","postgres",23099,"polar_test","100.104.175.10","00000",0,0,14,2023-07-26 14:31:00,1690353060000000
"execute <unnamed>: SET application_name = 'PolarDB JDBC Driver'","postgres",23099,"polar_test","100.104.175.10","00000",0,0,15,2023-07-26 14:31:00,1690353060000000
"execute <unnamed>: select version()","postgres",23113,"polar_test","100.104.175.252","00000",0,0,39,2023-07-26 14:31:00,1690353060000000
"execute <unnamed>: SELECT pg_catalog.set_config(name,boot_val,'f') FROM pg_catalog.pg_settings WHERE name = 'nls_date_format'","postgres",23113,"polar_test","100.104.175.252","00000",0,0,1967,2023-07-26 14:31:00,1690353060000000
"execute <unnamed>: SELECT pg_catalog.set_config(name,boot_val,'f') FROM pg_catalog.pg_settings WHERE name = 'nls_timestamp_format'","postgres",23113,"polar_test","100.104.175.252","00000",0,0,1659,2023-07-26 14:31:00,1690353060000000
"execute <unnamed>: SELECT pg_catalog.set_config(name,boot_val,'f') FROM pg_catalog.pg_settings WHERE name = 'nls_timestamp_tz_format'","postgres",23113,"polar_test","100.104.175.252","00000",0,0,1654,2023-07-26 14:31:00,1690353060000000
"execute <unnamed>: SET extra_float_digits = 3","postgres",23113,"polar_test","100.104.175.252","00000",0,0,16,2023-07-26 14:31:00,1690353060000000
"execute <unnamed>: SET application_name = 'PolarDB JDBC Driver'","postgres",23113,"polar_test","100.104.175.252","00000",0,0,12,2023-07-26 14:31:00,1690353060000000
"execute <unnamed>: SET extra_float_digits = 3","postgres",23115,"polar_test","100.104.175.252","00000",0,0,33,2023-07-26 14:31:00,1690353060000000
"execute <unnamed>: SELECT pg_catalog.set_config(name,'YYYY-MM-DD HH24:MI:SS','f') FROM pg_catalog.pg_settings WHERE name = 'nls_date_format'","postgres",23115,"polar_test","100.104.175.252","00000",0,0,1626,2023-07-26 14:31:00,1690353060000000
"execute <unnamed>: SELECT pg_catalog.set_config(name,'YYYY-MM-DD HH24:MI:SS.FF','f') FROM pg_catalog.pg_settings WHERE name = 'nls_timestamp_format'","postgres",23115,"polar_test","100.104.175.252","00000",0,0,1390,2023-07-26 14:31:00,1690353060000000
"execute <unnamed>: SELECT pg_catalog.set_config(name,'YYYY-MM-DD HH24:MI:SS.FFOF','f') FROM pg_catalog.pg_settings WHERE name = 'nls_timestamp_tz_format'","postgres",23115,"polar_test","100.104.175.252","00000",0,0,1374,2023-07-26 14:31:00,1690353060000000
"execute <unnamed>: SET application_name = 'PolarDB2 JDBC Driver'","postgres",23115,"polar_test","100.104.175.252","00000",0,0,12,2023-07-26 14:31:00,1690353060000000
"execute <unnamed>: select 1","postgres",23115,"polar_test","100.104.175.252","00000",0,0,12,2023-07-26 14:31:00,1690353060000000
"execute <unnamed>: select datname,datdba,encoding, pg_encoding_to_char(encoding) datcollate,pg_encoding_to_char(encoding) datctype,dattablespace,datacl  from pg_database WHERE ( datistemplate = false or datname = 'postgres' ) order by datname asc","postgres",23115,"polar_test","100.104.175.252","00000",7,0,51,2023-07-26 14:31:00,1690353060000000
"execute <unnamed>: SET extra_float_digits = 3","polardb",23117,"polar_test","100.104.175.250","00000",0,0,30,2023-07-26 14:31:01,1690353061000000
"execute <unnamed>: SELECT pg_catalog.set_config(name,'YYYY-MM-DD HH24:MI:SS','f') FROM pg_catalog.pg_settings WHERE name = 'nls_date_format'","polardb",23117,"polar_test","100.104.175.250","00000",0,0,1806,2023-07-26 14:31:01,1690353061000000
"execute <unnamed>: SELECT pg_catalog.set_config(name,'YYYY-MM-DD HH24:MI:SS.FF','f') FROM pg_catalog.pg_settings WHERE name = 'nls_timestamp_format'","polardb",23117,"polar_test","100.104.175.250","00000",0,0,1501,2023-07-26 14:31:01,1690353061000000
"execute <unnamed>: SELECT pg_catalog.set_config(name,'YYYY-MM-DD HH24:MI:SS.FFOF','f') FROM pg_catalog.pg_settings WHERE name = 'nls_timestamp_tz_format'","polardb",23117,"polar_test","100.104.175.250","00000",0,0,1472,2023-07-26 14:31:01,1690353061000000
"execute <unnamed>: SET application_name = 'PolarDB2 JDBC Driver'","polardb",23117,"polar_test","100.104.175.250","00000",0,0,12,2023-07-26 14:31:01,1690353061000000
"execute <unnamed>: select 1","polardb",23117,"polar_test","100.104.175.250","00000",0,0,12,2023-07-26 14:31:01,1690353061000000
"execute <unnamed>: select version()","polardb",23117,"polar_test","100.104.175.250","00000",0,0,13,2023-07-26 14:31:01,1690353061000000
"execute <unnamed>: select nspname as schema_name, current_setting('server_encoding')::varchar as encoding, current_database() as catalog_name from pg_namespace nsp where nspname not like 'pg\_temp\_%' and nspname not like 'pg\_toast%' and not (nspname like '_%' and exists(select 1 from pg_proc where proname = 'slonyversion' and pronamespace = nsp.oid)) order by nspname","polardb",23117,"polar_test","100.104.175.250","00000",22,0,80,2023-07-26 14:31:01,1690353061000000
"execute <unnamed>: SELECT c.oid, a.attnum, a.attname, c.relname, n.nspname, a.attnotnull OR (t.typtype = 'd' AND t.typnotnull), a.attidentity is not null OR pg_catalog.pg_get_expr(d.adbin, d.adrelid) LIKE '%nextval(%' FROM pg_catalog.pg_class c JOIN pg_catalog.pg_namespace n ON (c.relnamespace = n.oid) JOIN pg_catalog.pg_attribute a ON (c.oid = a.attrelid) JOIN pg_catalog.pg_type t ON (a.atttypid = t.oid) LEFT JOIN pg_catalog.pg_attrdef d ON (d.adrelid = a.attrelid AND d.adnum = a.attnum) JOIN (SELECT 2615 AS oid , 2 AS attnum) vals ON (c.oid = vals.oid AND a.attnum = vals.attnum)","polardb",23117,"polar_test","100.104.175.250","00000",8,0,53,2023-07-26 14:31:01,1690353061000000
"execute <unnamed>: select version()","postgres",23119,"polar_test","100.104.175.251","00000",0,0,36,2023-07-26 14:31:01,1690353061000000
"execute <unnamed>: SELECT pg_catalog.set_config(name,boot_val,'f') FROM pg_catalog.pg_settings WHERE name = 'nls_date_format'","postgres",23119,"polar_test","100.104.175.251","00000",0,0,1640,2023-07-26 14:31:01,1690353061000000
"execute <unnamed>: SELECT pg_catalog.set_config(name,boot_val,'f') FROM pg_catalog.pg_settings WHERE name = 'nls_timestamp_format'","postgres",23119,"polar_test","100.104.175.251","00000",0,0,1540,2023-07-26 14:31:01,1690353061000000
"execute <unnamed>: SELECT pg_catalog.set_config(name,boot_val,'f') FROM pg_catalog.pg_settings WHERE name = 'nls_timestamp_tz_format'","postgres",23119,"polar_test","100.104.175.251","00000",0,0,1400,2023-07-26 14:31:01,1690353061000000
"execute <unnamed>: SET extra_float_digits = 3","postgres",23119,"polar_test","100.104.175.251","00000",0,0,16,2023-07-26 14:31:01,1690353061000000
"execute <unnamed>: SET application_name = 'PolarDB JDBC Driver'","postgres",23119,"polar_test","100.104.175.251","00000",0,0,13,2023-07-26 14:31:01,1690353061000000
"execute <unnamed>: select version()","test1111",23135,"polar_test","100.104.175.250","00000",0,0,37,2023-07-26 14:31:01,1690353061000000
"execute <unnamed>: SELECT pg_catalog.set_config(name,boot_val,'f') FROM pg_catalog.pg_settings WHERE name = 'nls_date_format'","test1111",23135,"polar_test","100.104.175.250","00000",0,0,1974,2023-07-26 14:31:01,1690353061000000
"execute <unnamed>: SELECT pg_catalog.set_config(name,boot_val,'f') FROM pg_catalog.pg_settings WHERE name = 'nls_timestamp_format'","test1111",23135,"polar_test","100.104.175.250","00000",0,0,1663,2023-07-26 14:31:01,1690353061000000
"execute <unnamed>: SELECT pg_catalog.set_config(name,boot_val,'f') FROM pg_catalog.pg_settings WHERE name = 'nls_timestamp_tz_format'","test1111",23135,"polar_test","100.104.175.250","00000",0,0,1645,2023-07-26 14:31:01,1690353061000000
"execute <unnamed>: SET extra_float_digits = 3","test1111",23135,"polar_test","100.104.175.250","00000",0,0,14,2023-07-26 14:31:01,1690353061000000
"execute <unnamed>: SET application_name = 'PolarDB JDBC Driver'","test1111",23135,"polar_test","100.104.175.250","00000",0,0,10,2023-07-26 14:31:01,1690353061000000
"execute <unnamed>: SET extra_float_digits = 3","test1111",23137,"polar_test","100.104.175.10","00000",0,0,30,2023-07-26 14:31:01,1690353061000000
"execute <unnamed>: SELECT pg_catalog.set_config(name,'YYYY-MM-DD HH24:MI:SS','f') FROM pg_catalog.pg_settings WHERE name = 'nls_date_format'","test1111",23137,"polar_test","100.104.175.10","00000",0,0,1554,2023-07-26 14:31:01,1690353061000000
"execute <unnamed>: SELECT pg_catalog.set_config(name,'YYYY-MM-DD HH24:MI:SS.FF','f') FROM pg_catalog.pg_settings WHERE name = 'nls_timestamp_format'","test1111",23137,"polar_test","100.104.175.10","00000",0,0,1338,2023-07-26 14:31:01,1690353061000000
"execute <unnamed>: SELECT pg_catalog.set_config(name,'YYYY-MM-DD HH24:MI:SS.FFOF','f') FROM pg_catalog.pg_settings WHERE name = 'nls_timestamp_tz_format'","test1111",23137,"polar_test","100.104.175.10","00000",0,0,1316,2023-07-26 14:31:01,1690353061000000
"execute <unnamed>: SET application_name = 'PolarDB2 JDBC Driver'","test1111",23137,"polar_test","100.104.175.10","00000",0,0,12,2023-07-26 14:31:01,1690353061000000
"execute <unnamed>: select 1","test1111",23137,"polar_test","100.104.175.10","00000",0,0,12,2023-07-26 14:31:01,1690353061000000
"execute <unnamed>: select version()","test1111",23137,"polar_test","100.104.175.10","00000",0,0,20,2023-07-26 14:31:01,1690353061000000
"execute <unnamed>: select nspname as schema_name, current_setting('server_encoding')::varchar as encoding, current_database() as catalog_name from pg_namespace nsp where nspname not like 'pg\_temp\_%' and nspname not like 'pg\_toast%' and not (nspname like '_%' and exists(select 1 from pg_proc where proname = 'slonyversion' and pronamespace = nsp.oid)) order by nspname","test1111",23137,"polar_test","100.104.175.10","00000",19,0,78,2023-07-26 14:31:01,1690353061000000
"execute <unnamed>: SELECT c.oid, a.attnum, a.attname, c.relname, n.nspname, a.attnotnull OR (t.typtype = 'd' AND t.typnotnull), a.attidentity is not null OR pg_catalog.pg_get_expr(d.adbin, d.adrelid) LIKE '%nextval(%' FROM pg_catalog.pg_class c JOIN pg_catalog.pg_namespace n ON (c.relnamespace = n.oid) JOIN pg_catalog.pg_attribute a ON (c.oid = a.attrelid) JOIN pg_catalog.pg_type t ON (a.atttypid = t.oid) LEFT JOIN pg_catalog.pg_attrdef d ON (d.adrelid = a.attrelid AND d.adnum = a.attnum) JOIN (SELECT 2615 AS oid , 2 AS attnum) vals ON (c.oid = vals.oid AND a.attnum = vals.attnum)","test1111",23137,"polar_test","100.104.175.10","00000",8,0,75,2023-07-26 14:31:01,1690353061000000
"execute <unnamed>: SET extra_float_digits = 3","test222",23141,"polar_test","100.104.175.250","00000",0,0,33,2023-07-26 14:31:02,1690353062000000
"execute <unnamed>: SELECT pg_catalog.set_config(name,'YYYY-MM-DD HH24:MI:SS','f') FROM pg_catalog.pg_settings WHERE name = 'nls_date_format'","test222",23141,"polar_test","100.104.175.250","00000",0,0,1963,2023-07-26 14:31:02,1690353062000000
"execute <unnamed>: SELECT pg_catalog.set_config(name,'YYYY-MM-DD HH24:MI:SS.FF','f') FROM pg_catalog.pg_settings WHERE name = 'nls_timestamp_format'","test222",23141,"polar_test","100.104.175.250","00000",0,0,1666,2023-07-26 14:31:02,1690353062000000
"execute <unnamed>: SELECT pg_catalog.set_config(name,'YYYY-MM-DD HH24:MI:SS.FFOF','f') FROM pg_catalog.pg_settings WHERE name = 'nls_timestamp_tz_format'","test222",23141,"polar_test","100.104.175.250","00000",0,0,1671,2023-07-26 14:31:02,1690353062000000
"execute <unnamed>: SET application_name = 'PolarDB2 JDBC Driver'","test222",23141,"polar_test","100.104.175.250","00000",0,0,12,2023-07-26 14:31:02,1690353062000000
"execute <unnamed>: select 1","test222",23141,"polar_test","100.104.175.250","00000",0,0,14,2023-07-26 14:31:02,1690353062000000
"execute <unnamed>: select version()","test222",23141,"polar_test","100.104.175.250","00000",0,0,15,2023-07-26 14:31:02,1690353062000000
"execute <unnamed>: select nspname as schema_name, current_setting('server_encoding')::varchar as encoding, current_database() as catalog_name from pg_namespace nsp where nspname not like 'pg\_temp\_%' and nspname not like 'pg\_toast%' and not (nspname like '_%' and exists(select 1 from pg_proc where proname = 'slonyversion' and pronamespace = nsp.oid)) order by nspname","test222",23141,"polar_test","100.104.175.250","00000",19,0,114,2023-07-26 14:31:02,1690353062000000
"execute <unnamed>: SELECT c.oid, a.attnum, a.attname, c.relname, n.nspname, a.attnotnull OR (t.typtype = 'd' AND t.typnotnull), a.attidentity is not null OR pg_catalog.pg_get_expr(d.adbin, d.adrelid) LIKE '%nextval(%' FROM pg_catalog.pg_class c JOIN pg_catalog.pg_namespace n ON (c.relnamespace = n.oid) JOIN pg_catalog.pg_attribute a ON (c.oid = a.attrelid) JOIN pg_catalog.pg_type t ON (a.atttypid = t.oid) LEFT JOIN pg_catalog.pg_attrdef d ON (d.adrelid = a.attrelid AND d.adnum = a.attnum) JOIN (SELECT 2615 AS oid , 2 AS attnum) vals ON (c.oid = vals.oid AND a.attnum = vals.attnum)","test222",23141,"polar_test","100.104.175.250","00000",8,0,52,2023-07-26 14:31:02,1690353062000000
"execute <unnamed>: select version()","test1111",23187,"polar_test","100.104.175.250","00000",0,0,40,2023-07-26 14:31:05,1690353065000000
"execute <unnamed>: SELECT pg_catalog.set_config(name,boot_val,'f') FROM pg_catalog.pg_settings WHERE name = 'nls_date_format'","test1111",23187,"polar_test","100.104.175.250","00000",0,0,1789,2023-07-26 14:31:05,1690353065000000
"execute <unnamed>: SELECT pg_catalog.set_config(name,boot_val,'f') FROM pg_catalog.pg_settings WHERE name = 'nls_timestamp_format'","test1111",23187,"polar_test","100.104.175.250","00000",0,0,1506,2023-07-26 14:31:05,1690353065000000
"execute <unnamed>: SELECT pg_catalog.set_config(name,boot_val,'f') FROM pg_catalog.pg_settings WHERE name = 'nls_timestamp_tz_format'","test1111",23187,"polar_test","100.104.175.250","00000",0,0,1408,2023-07-26 14:31:05,1690353065000000
"execute <unnamed>: SET extra_float_digits = 3","test1111",23187,"polar_test","100.104.175.250","00000",0,0,21,2023-07-26 14:31:05,1690353065000000
"execute <unnamed>: SET application_name = 'PolarDB JDBC Driver'","test1111",23187,"polar_test","100.104.175.250","00000",0,0,12,2023-07-26 14:31:05,1690353065000000
"execute <unnamed>: SET extra_float_digits = 3","postgres",23132,"polar_test","100.104.175.251","00000",0,0,35,2023-07-26 14:31:01,1690353061000000
"execute <unnamed>: SELECT pg_catalog.set_config(name,'YYYY-MM-DD HH24:MI:SS','f') FROM pg_catalog.pg_settings WHERE name = 'nls_date_format'","postgres",23132,"polar_test","100.104.175.251","00000",0,0,2059,2023-07-26 14:31:01,1690353061000000
"execute <unnamed>: SELECT pg_catalog.set_config(name,'YYYY-MM-DD HH24:MI:SS.FF','f') FROM pg_catalog.pg_settings WHERE name = 'nls_timestamp_format'","postgres",23132,"polar_test","100.104.175.251","00000",0,0,1583,2023-07-26 14:31:01,1690353061000000
"execute <unnamed>: SELECT pg_catalog.set_config(name,'YYYY-MM-DD HH24:MI:SS.FFOF','f') FROM pg_catalog.pg_settings WHERE name = 'nls_timestamp_tz_format'","postgres",23132,"polar_test","100.104.175.251","00000",0,0,1551,2023-07-26 14:31:01,1690353061000000
"execute <unnamed>: SET application_name = 'PolarDB2 JDBC Driver'","postgres",23132,"polar_test","100.104.175.251","00000",0,0,19,2023-07-26 14:31:01,1690353061000000
"execute <unnamed>: select 1","postgres",23132,"polar_test","100.104.175.251","00000",0,0,15,2023-07-26 14:31:01,1690353061000000
"execute <unnamed>: select version()","postgres",23132,"polar_test","100.104.175.251","00000",0,0,20,2023-07-26 14:31:01,1690353061000000
"execute <unnamed>: select nspname as schema_name, current_setting('server_encoding')::varchar as encoding, current_database() as catalog_name from pg_namespace nsp where nspname not like 'pg\_temp\_%' and nspname not like 'pg\_toast%' and not (nspname like '_%' and exists(select 1 from pg_proc where proname = 'slonyversion' and pronamespace = nsp.oid)) order by nspname","postgres",23132,"polar_test","100.104.175.251","00000",21,0,101,2023-07-26 14:31:01,1690353061000000
"execute <unnamed>: SELECT c.oid, a.attnum, a.attname, c.relname, n.nspname, a.attnotnull OR (t.typtype = 'd' AND t.typnotnull), a.attidentity is not null OR pg_catalog.pg_get_expr(d.adbin, d.adrelid) LIKE '%nextval(%' FROM pg_catalog.pg_class c JOIN pg_catalog.pg_namespace n ON (c.relnamespace = n.oid) JOIN pg_catalog.pg_attribute a ON (c.oid = a.attrelid) JOIN pg_catalog.pg_type t ON (a.atttypid = t.oid) LEFT JOIN pg_catalog.pg_attrdef d ON (d.adrelid = a.attrelid AND d.adnum = a.attnum) JOIN (SELECT 2615 AS oid , 2 AS attnum) vals ON (c.oid = vals.oid AND a.attnum = vals.attnum)","postgres",23132,"polar_test","100.104.175.251","00000",8,0,53,2023-07-26 14:31:01,1690353061000000
"execute <unnamed>: select version()","test222",23138,"polar_test","100.104.175.10","00000",0,0,32,2023-07-26 14:31:02,1690353062000000
"execute <unnamed>: SELECT pg_catalog.set_config(name,boot_val,'f') FROM pg_catalog.pg_settings WHERE name = 'nls_date_format'","test222",23138,"polar_test","100.104.175.10","00000",0,0,1835,2023-07-26 14:31:02,1690353062000000
"execute <unnamed>: SELECT pg_catalog.set_config(name,boot_val,'f') FROM pg_catalog.pg_settings WHERE name = 'nls_timestamp_format'","test222",23138,"polar_test","100.104.175.10","00000",0,0,1584,2023-07-26 14:31:02,1690353062000000
"execute <unnamed>: SELECT pg_catalog.set_config(name,boot_val,'f') FROM pg_catalog.pg_settings WHERE name = 'nls_timestamp_tz_format'","test222",23138,"polar_test","100.104.175.10","00000",0,0,1412,2023-07-26 14:31:02,1690353062000000
"execute <unnamed>: SET extra_float_digits = 3","test222",23138,"polar_test","100.104.175.10","00000",0,0,16,2023-07-26 14:31:02,1690353062000000
"execute <unnamed>: SET application_name = 'PolarDB JDBC Driver'","test222",23138,"polar_test","100.104.175.10","00000",0,0,13,2023-07-26 14:31:02,1690353062000000
"execute <unnamed>: select version()","test1111",23238,"polar_test","100.104.175.250","00000",0,0,33,2023-07-26 14:31:08,1690353068000000
"execute <unnamed>: SELECT pg_catalog.set_config(name,boot_val,'f') FROM pg_catalog.pg_settings WHERE name = 'nls_date_format'","test1111",23238,"polar_test","100.104.175.250","00000",0,0,1677,2023-07-26 14:31:08,1690353068000000
"execute <unnamed>: SELECT pg_catalog.set_config(name,boot_val,'f') FROM pg_catalog.pg_settings WHERE name = 'nls_timestamp_format'","test1111",23238,"polar_test","100.104.175.250","00000",0,0,1457,2023-07-26 14:31:08,1690353068000000
"execute <unnamed>: SELECT pg_catalog.set_config(name,boot_val,'f') FROM pg_catalog.pg_settings WHERE name = 'nls_timestamp_tz_format'","test1111",23238,"polar_test","100.104.175.250","00000",0,0,1493,2023-07-26 14:31:08,1690353068000000
"execute <unnamed>: SET extra_float_digits = 3","test1111",23238,"polar_test","100.104.175.250","00000",0,0,19,2023-07-26 14:31:08,1690353068000000
"execute <unnamed>: SET application_name = 'PolarDB JDBC Driver'","test1111",23238,"polar_test","100.104.175.250","00000",0,0,11,2023-07-26 14:31:08,1690353068000000
"execute <unnamed>: select version()","test1111",23201,"polar_test","100.104.175.250","00000",0,0,35,2023-07-26 14:31:05,1690353065000000
"execute <unnamed>: SELECT pg_catalog.set_config(name,boot_val,'f') FROM pg_catalog.pg_settings WHERE name = 'nls_date_format'","test1111",23201,"polar_test","100.104.175.250","00000",0,0,2117,2023-07-26 14:31:05,1690353065000000
"execute <unnamed>: SELECT pg_catalog.set_config(name,boot_val,'f') FROM pg_catalog.pg_settings WHERE name = 'nls_timestamp_format'","test1111",23201,"polar_test","100.104.175.250","00000",0,0,1717,2023-07-26 14:31:05,1690353065000000
"execute <unnamed>: SELECT pg_catalog.set_config(name,boot_val,'f') FROM pg_catalog.pg_settings WHERE name = 'nls_timestamp_tz_format'","test1111",23201,"polar_test","100.104.175.250","00000",0,0,1482,2023-07-26 14:31:05,1690353065000000
"execute <unnamed>: SET extra_float_digits = 3","test1111",23201,"polar_test","100.104.175.250","00000",0,0,16,2023-07-26 14:31:05,1690353065000000
"execute <unnamed>: SET application_name = 'PolarDB JDBC Driver'","test1111",23201,"polar_test","100.104.175.250","00000",0,0,15,2023-07-26 14:31:05,1690353065000000
"execute <unnamed>: SET extra_float_digits = 3","test1111",23239,"polar_test","100.104.175.251","00000",0,0,35,2023-07-26 14:31:08,1690353068000000
"execute <unnamed>: SELECT pg_catalog.set_config(name,'YYYY-MM-DD HH24:MI:SS','f') FROM pg_catalog.pg_settings WHERE name = 'nls_date_format'","test1111",23239,"polar_test","100.104.175.251","00000",0,0,1753,2023-07-26 14:31:08,1690353068000000
"execute <unnamed>: SELECT pg_catalog.set_config(name,'YYYY-MM-DD HH24:MI:SS.FF','f') FROM pg_catalog.pg_settings WHERE name = 'nls_timestamp_format'","test1111",23239,"polar_test","100.104.175.251","00000",0,0,1495,2023-07-26 14:31:08,1690353068000000
"execute <unnamed>: SELECT pg_catalog.set_config(name,'YYYY-MM-DD HH24:MI:SS.FFOF','f') FROM pg_catalog.pg_settings WHERE name = 'nls_timestamp_tz_format'","test1111",23239,"polar_test","100.104.175.251","00000",0,0,1577,2023-07-26 14:31:08,1690353068000000
"execute <unnamed>: SET application_name = 'PolarDB2 JDBC Driver'","test1111",23239,"polar_test","100.104.175.251","00000",0,0,15,2023-07-26 14:31:08,1690353068000000
"execute <unnamed>: select 1","test1111",23239,"polar_test","100.104.175.251","00000",0,0,18,2023-07-26 14:31:08,1690353068000000
"execute <unnamed>: set search_path = "public"","test1111",23239,"polar_test","100.104.175.251","00000",0,0,16,2023-07-26 14:31:08,1690353068000000
"execute <unnamed>: /* Query from DMS-WEBSQL-0-Qid_9039351503480245e by user 1086270528945027 */ CREATE OR REPLACE FUNCTION before_insert_stmt()
RETURNS TRIGGER AS 
DECLARE
    i INT := random() * 1000;
BEGIN
    -- we better NOT use before trigger to modify other rows in t1
    -- so INSERT INTO t2
    INSERT INTO t2
        SELECT
            i, i, i, i,
            i,
            current_date - make_interval(hours => i),
            current_timestamp - make_interval(hours => i),
            random(),
            i;
    RETURN new;
END;","test1111",23239,"polar_test","100.104.175.251","00000",176,0,5486,2023-07-26 14:31:08,1690353068000000
"execute <unnamed>: select version()","test1111",23869,"polar_test","100.104.175.251","00000",0,0,31,2023-07-26 14:31:52,1690353112000000
"execute <unnamed>: SELECT pg_catalog.set_config(name,boot_val,'f') FROM pg_catalog.pg_settings WHERE name = 'nls_date_format'","test1111",23869,"polar_test","100.104.175.251","00000",0,0,1956,2023-07-26 14:31:52,1690353112000000
"execute <unnamed>: SELECT pg_catalog.set_config(name,boot_val,'f') FROM pg_catalog.pg_settings WHERE name = 'nls_timestamp_format'","test1111",23869,"polar_test","100.104.175.251","00000",0,0,1673,2023-07-26 14:31:52,1690353112000000
"execute <unnamed>: SELECT pg_catalog.set_config(name,boot_val,'f') FROM pg_catalog.pg_settings WHERE name = 'nls_timestamp_tz_format'","test1111",23869,"polar_test","100.104.175.251","00000",0,0,1605,2023-07-26 14:31:52,1690353112000000
"execute <unnamed>: SET extra_float_digits = 3","test1111",23869,"polar_test","100.104.175.251","00000",0,0,14,2023-07-26 14:31:52,1690353112000000
"execute <unnamed>: SET application_name = 'PolarDB JDBC Driver'","test1111",23869,"polar_test","100.104.175.251","00000",0,0,12,2023-07-26 14:31:52,1690353112000000
"execute <unnamed>: SET extra_float_digits = 3","test1111",23881,"polar_test","100.104.175.250","00000",0,0,41,2023-07-26 14:31:52,1690353112000000
"execute <unnamed>: SELECT pg_catalog.set_config(name,'YYYY-MM-DD HH24:MI:SS','f') FROM pg_catalog.pg_settings WHERE name = 'nls_date_format'","test1111",23881,"polar_test","100.104.175.250","00000",0,0,1712,2023-07-26 14:31:52,1690353112000000
"execute <unnamed>: SELECT pg_catalog.set_config(name,'YYYY-MM-DD HH24:MI:SS.FF','f') FROM pg_catalog.pg_settings WHERE name = 'nls_timestamp_format'","test1111",23881,"polar_test","100.104.175.250","00000",0,0,2317,2023-07-26 14:31:52,1690353112000000
"execute <unnamed>: SELECT pg_catalog.set_config(name,'YYYY-MM-DD HH24:MI:SS.FFOF','f') FROM pg_catalog.pg_settings WHERE name = 'nls_timestamp_tz_format'","test1111",23881,"polar_test","100.104.175.250","00000",0,0,2365,2023-07-26 14:31:52,1690353112000000
"execute <unnamed>: SET application_name = 'PolarDB2 JDBC Driver'","test1111",23881,"polar_test","100.104.175.250","00000",0,0,24,2023-07-26 14:31:52,1690353112000000
"execute <unnamed>: select 1","test1111",23881,"polar_test","100.104.175.250","00000",0,0,20,2023-07-26 14:31:52,1690353112000000
"execute <unnamed>: set search_path = "public"","test1111",23881,"polar_test","100.104.175.250","00000",0,0,24,2023-07-26 14:31:52,1690353112000000
"execute <unnamed>: select  c.relname table_name, 
   nsp.nspname schema_name,        cmt.description as description,
       c.reltuples::bigint num_rows,
       pg_total_relation_size(c.oid) / 1048576 storeCapacity,
       coalesce(pg_stat_get_last_analyze_time(c.oid),
                pg_stat_get_last_autoanalyze_time(c.oid)) createTime,
       coalesce(pg_stat_get_last_vacuum_time(c.oid),
                pg_stat_get_last_autovacuum_time(c.oid)) last_ddl_time,
       current_setting('server_encoding')::varchar  as encoding,
       CASE WHEN c.relkind = 'f' THEN 'FOREIGN' ELSE 'NORMAL' END as tableType
  from pg_namespace nsp, pg_class c
  left join pg_description cmt
    on c.oid = cmt.objoid
   and cmt.objsubid = 0
 where c.relkind in ('r', 'p', 'f')
   and c.relnamespace = nsp.oid
   and nsp.nspname = 'public'
   order by c.relname","test1111",23881,"polar_test","100.104.175.250","00000",889,0,17189,2023-07-26 14:31:52,1690353112000000
"execute <unnamed>: SELECT c.oid, a.attnum, a.attname, c.relname, n.nspname, a.attnotnull OR (t.typtype = 'd' AND t.typnotnull), a.attidentity is not null OR pg_catalog.pg_get_expr(d.adbin, d.adrelid) LIKE '%nextval(%' FROM pg_catalog.pg_class c JOIN pg_catalog.pg_namespace n ON (c.relnamespace = n.oid) JOIN pg_catalog.pg_attribute a ON (c.oid = a.attrelid) JOIN pg_catalog.pg_type t ON (a.atttypid = t.oid) LEFT JOIN pg_catalog.pg_attrdef d ON (d.adrelid = a.attrelid AND d.adnum = a.attnum) JOIN (SELECT 1259 AS oid , 2 AS attnum UNION ALL SELECT 2615, 2 UNION ALL SELECT 2609, 4) vals ON (c.oid = vals.oid AND a.attnum = vals.attnum)","test1111",23881,"polar_test","100.104.175.250","00000",24,0,102,2023-07-26 14:31:52,1690353112000000
"execute <unnamed>: select schemaname,tablename,tableowner,tablespace from pg_tables where schemaname = 'public' and tablename = 'range_partitions_sales'","test1111",23881,"polar_test","100.104.175.250","00000",7,0,58,2023-07-26 14:31:52,1690353112000000
"execute <unnamed>: select version()","test1111",23881,"polar_test","100.104.175.250","00000",0,0,14,2023-07-26 14:31:52,1690353112000000
"execute <unnamed>: SELECT c.oid, c.relhasrules,c.relhastriggers,c.relpersistence,c.reloptions, com.description from pg_class c INNER JOIN pg_namespace n ON c.relnamespace = n.oid left join pg_description com on objsubid = 0 and com.objoid = c.oid where  n.nspname = 'public' and c.relname = 'range_partitions_sales'","test1111",23881,"polar_test","100.104.175.250","00000",5,0,41,2023-07-26 14:31:52,1690353112000000
"execute <unnamed>: select distinct ordinal_position,pg_catalog.col_description(b.oid,ordinal_position)  as column_comment,table_catalog,table_schema,table_name,column_name,attinhcount,data_type,udt_name,is_nullable,column_default,numeric_scale,numeric_precision,collation_schema,collation_name, format_type(a.atttypid, a.atttypmod) as view_type,indisprimary from information_schema.Columns c inner join  pg_attribute a ON (a.attname = c.column_name) left JOIN pg_class b ON (a.attrelid = b.oid and b.relname = c.table_name) left jOIN pg_namespace n ON (n.oid = b.relnamespace and n.nspname = c.table_schema) left join pg_index i on a.attnum = any(i.indkey) and i.indrelid = b.oid where table_schema = 'public' and table_name = 'range_partitions_sales' and attrelid = $$range_partitions_sales$$::regclass::oid order by ordinal_position","test1111",23881,"polar_test","100.104.175.250","00000",375,0,1622,2023-07-26 14:31:52,1690353112000000
"execute <unnamed>: select c.column_name from information_schema.table_constraints s left join  information_schema.constraint_column_usage c on s.constraint_name = c.constraint_name and s.constraint_schema = c.constraint_schema where s.table_schema = 'public' and s.table_name =  'range_partitions_sales' and s.constraint_type = 'PRIMARY KEY'","test1111",23881,"polar_test","100.104.175.250","00000",2,0,33,2023-07-26 14:31:52,1690353112000000
"execute <unnamed>: SELECT c1.relnamespace as childnamespaceoid,inh.inhrelid as childoid,n1.nspname as childnamespacename,c1.relname AS childname, c2.relnamespace as parentnamespaceoid,inh.inhparent as parentoid,n2.nspname as paretnamespacename,c2.relname AS parentname FROM pg_inherits inh JOIN pg_class c1 ON (inh.inhrelid=c1.oid) JOIN pg_class  c2 ON (inh.inhparent=c2.oid) join pg_namespace n1 on c1.relnamespace = n1.oid join pg_namespace n2 on c2.relnamespace = n2.oid where n1.nspname = 'public' and c1.relname = 'range_partitions_sales'","test1111",23881,"polar_test","100.104.175.250","00000",6,0,88,2023-07-26 14:31:52,1690353112000000
"execute <unnamed>: select version()","test1111",23881,"polar_test","100.104.175.250","00000",0,0,13,2023-07-26 14:31:52,1690353112000000
"execute <unnamed>: select con.conname as "constraint_name",con.nspname as "child_schema",con.relname as "child_table",att2.attname as "child_column",ns.nspname as "parent_schema",cl.relname as "parent_table",att.attname as "parent_column", con.confdeltype,con.confupdtype,con.condeferrable,con.condeferred,con.convalidated,con.confmatchtype,des.description from (select unnest(con1.conkey) as "parent",unnest(con1.confkey) as "child", con1.oid as "constranit_oid" ,con1.confdeltype,con1.confupdtype,con1.condeferrable,con1.condeferred,con1.convalidated,con1.confmatchtype,con1.confrelid,con1.conrelid,cl.relname,cl.relnamespace,ns.nspname,con1.conname from pg_class cl join pg_namespace ns on cl.relnamespace = ns.oid join pg_constraint con1 on con1.conrelid = cl.oid where ns.nspname = 'public' and cl.relname ='range_partitions_sales' and con1.contype = 'f') con join pg_attribute att on att.attrelid = con.confrelid and att.attnum = con.child join pg_class cl on cl.oid = con.confrelid join pg_namespace ns on cl.relnamespace = ns.oid join pg_attribute att2 on att2.attrelid = con.conrelid and att2.attnum = con.parent left join pg_description des on con.constranit_oid = des.objoid order by con.conname","test1111",23881,"polar_test","100.104.175.250","00000",5,0,49,2023-07-26 14:31:52,1690353112000000
"execute <unnamed>: SELECT DISTINCT ON(cls.relname) cls.oid, cls.relname as idxname, indrelid, indkey, indisclustered, indisvalid, indisunique, indisprimary, n.nspname,indnatts, cls.reltablespace AS spcoid, spcname, tab.relname as tabname, indclass, con.oid AS conoid,desp.description,pg_get_expr(indpred, indrelid, true) as indconstraint, contype, condeferrable, condeferred, amname, substring(array_to_string(cls.reloptions, ',') from 'fillfactor=([0-9]*)') AS fillfactor FROM pg_index idx JOIN pg_class cls ON cls.oid=indexrelid JOIN pg_class tab ON tab.oid=indrelid LEFT OUTER JOIN pg_tablespace ta on ta.oid=cls.reltablespace JOIN pg_namespace n ON n.oid=tab.relnamespace JOIN pg_am am ON am.oid=cls.relam LEFT JOIN pg_depend dep ON (dep.classid = cls.tableoid AND dep.objid = cls.oid AND dep.refobjsubid = '0' AND dep.refclassid=(SELECT oid FROM pg_class WHERE relname='pg_constraint') AND dep.deptype='i') LEFT OUTER JOIN pg_constraint con ON (con.tableoid = dep.refclassid AND con.oid = dep.refobjid) LEFT OUTER JOIN pg_description des ON (des.objoid=cls.oid AND des.classoid='pg_class'::regclass) LEFT OUTER JOIN pg_description desp ON (desp.objoid=con.oid AND desp.objsubid = 0 AND desp.classoid='pg_constraint'::regclass) WHERE n.nspname = 'public'  and tab.relname ='range_partitions_sales'  AND contype='x' ORDER BY cls.relname","test1111",23881,"polar_test","100.104.175.250","00000",2,0,46,2023-07-26 14:31:53,1690353113000000
"execute <unnamed>: SELECT DISTINCT ON(cls.relname) cls.oid, cls.relname as idxname, indrelid, indkey, indisclustered, indisvalid, indisunique, indisprimary, n.nspname,indnatts, cls.reltablespace AS spcoid, spcname, tab.relname as tabname, indclass, con.oid AS conoid, desp.description  AS description,pg_get_expr(indpred, indrelid, true) as indconstraint, contype, condeferrable, condeferred, amname, substring(array_to_string(cls.reloptions, ',') from 'fillfactor=([0-9]*)') AS fillfactor  FROM pg_index idx JOIN pg_class cls ON cls.oid=indexrelid JOIN pg_class tab ON tab.oid=indrelid LEFT OUTER JOIN pg_tablespace ta on ta.oid=cls.reltablespace JOIN pg_namespace n ON n.oid=tab.relnamespace JOIN pg_am am ON am.oid=cls.relam LEFT JOIN pg_depend dep ON (dep.classid = cls.tableoid AND dep.objid = cls.oid AND dep.refobjsubid = '0' AND dep.refclassid=(SELECT oid FROM pg_class WHERE relname='pg_constraint') AND dep.deptype='i') LEFT OUTER JOIN pg_constraint con ON (con.tableoid = dep.refclassid AND con.oid = dep.refobjid) LEFT OUTER JOIN pg_description desp ON (desp.objoid=con.oid AND desp.objsubid = 0 AND desp.classoid='pg_constraint'::regclass) WHERE n.nspname ='public' and tab.relname = 'range_partitions_sales'  AND contype='u' ORDER BY cls.relname","test1111",23881,"polar_test","100.104.175.250","00000",2,0,48,2023-07-26 14:31:53,1690353113000000
"execute <unnamed>: select version()","test1111",23881,"polar_test","100.104.175.250","00000",0,0,10,2023-07-26 14:31:53,1690353113000000
"execute <unnamed>: SELECT 'TABLE' AS objectkind, c.oid, conname, relname, nspname, description, pg_get_expr(conbin, conrelid, true) as consrc , connoinherit, convalidated  FROM pg_constraint c  JOIN pg_class cl ON cl.oid=conrelid JOIN pg_namespace nl ON nl.oid=relnamespace LEFT OUTER JOIN pg_description des ON (des.objoid=c.oid AND des.classoid='pg_constraint'::regclass) WHERE contype = 'c' AND nspname = 'public' and relname = 'range_partitions_sales' UNION SELECT 'DOMAIN' AS objectkind, c.oid, conname, typname as relname, nspname, description,      regexp_replace(pg_get_constraintdef(c.oid, true), E'CHECK \((.*)\).*', E'\1') as consrc, connoinherit, convalidated  FROM pg_constraint c  JOIN pg_type t ON t.oid=contypid  JOIN pg_namespace nl ON nl.oid=typnamespace  LEFT OUTER JOIN pg_description des ON (des.objoid=t.oid AND des.classoid='pg_constraint'::regclass) WHERE contype = 'c' AND nspname = 'public' and typname = 'range_partitions_sales' ORDER BY conname","test1111",23881,"polar_test","100.104.175.250","00000",28,0,108,2023-07-26 14:31:53,1690353113000000
"execute <unnamed>: select pg_constraint.conname as pk_name,pg_attribute.attname as colname,pg_type.typname as typename from pg_constraint  inner join pg_class on pg_constraint.conrelid = pg_class.oid inner join pg_attribute on pg_attribute.attrelid = pg_class.oid  and  pg_attribute.attnum = pg_constraint.conkey[1] inner join pg_type on pg_type.oid = pg_attribute.atttypid where pg_class.oid = $$range_partitions_sales$$::regclass::oid and pg_constraint.contype='p' and pg_table_is_visible(pg_class.oid)","test1111",23881,"polar_test","100.104.175.250","00000",0,0,41,2023-07-26 14:31:53,1690353113000000
"execute <unnamed>: select i.relname as indname,i.relowner as indowner,idx.indrelid::regclass,am.amname as indam,idx.indkey,ARRAY(SELECT pg_get_indexdef(idx.indexrelid, k + 1, true) FROM generate_subscripts(idx.indkey, 1) as k ORDER BY k) as indkey_names, idx.indexprs IS NOT NULL as indexprs,idx.indpred IS NOT NULL as indpred  from pg_index as idx JOIN pg_class as i ON i.oid = idx.indexrelid JOIN pg_am as am ON i.relam = am.oid where idx.indrelid::regclass = $$range_partitions_sales$$::regclass and idx.indisprimary = false order by indname","test1111",23881,"polar_test","100.104.175.250","00000",0,0,44,2023-07-26 14:31:53,1690353113000000
"execute <unnamed>: SELECT current_database()","test1111",23881,"polar_test","100.104.175.250","00000",0,0,12,2023-07-26 14:31:53,1690353113000000
"execute <unnamed>: select schemaname,tablename,tableowner,tablespace from pg_tables where schemaname = 'public' and tablename = 'range_partitions_sales_sales_q1_2006'","test1111",23881,"polar_test","100.104.175.250","00000",7,0,37,2023-07-26 14:31:53,1690353113000000
"execute <unnamed>: select version()","test1111",23881,"polar_test","100.104.175.250","00000",0,0,12,2023-07-26 14:31:53,1690353113000000
"execute <unnamed>: SELECT c.oid, c.relhasrules,c.relhastriggers,c.relpersistence,c.reloptions, com.description from pg_class c INNER JOIN pg_namespace n ON c.relnamespace = n.oid left join pg_description com on objsubid = 0 and com.objoid = c.oid where  n.nspname = 'public' and c.relname = 'range_partitions_sales_sales_q1_2006'","test1111",23881,"polar_test","100.104.175.250","00000",5,0,36,2023-07-26 14:31:53,1690353113000000
"execute <unnamed>: select distinct ordinal_position,pg_catalog.col_description(b.oid,ordinal_position)  as column_comment,table_catalog,table_schema,table_name,column_name,attinhcount,data_type,udt_name,is_nullable,column_default,numeric_scale,numeric_precision,collation_schema,collation_name, format_type(a.atttypid, a.atttypmod) as view_type,indisprimary from information_schema.Columns c inner join  pg_attribute a ON (a.attname = c.column_name) left JOIN pg_class b ON (a.attrelid = b.oid and b.relname = c.table_name) left jOIN pg_namespace n ON (n.oid = b.relnamespace and n.nspname = c.table_schema) left join pg_index i on a.attnum = any(i.indkey) and i.indrelid = b.oid where table_schema = 'public' and table_name = 'range_partitions_sales_sales_q1_2006' and attrelid = $$range_partitions_sales_sales_q1_2006$$::regclass::oid order by ordinal_position","test1111",23881,"polar_test","100.104.175.250","00000",209,0,910,2023-07-26 14:31:53,1690353113000000
"execute <unnamed>: select c.column_name from information_schema.table_constraints s left join  information_schema.constraint_column_usage c on s.constraint_name = c.constraint_name and s.constraint_schema = c.constraint_schema where s.table_schema = 'public' and s.table_name =  'range_partitions_sales_sales_q1_2006' and s.constraint_type = 'PRIMARY KEY'","test1111",23881,"polar_test","100.104.175.250","00000",2,0,29,2023-07-26 14:31:53,1690353113000000
"execute <unnamed>: SELECT c1.relnamespace as childnamespaceoid,inh.inhrelid as childoid,n1.nspname as childnamespacename,c1.relname AS childname, c2.relnamespace as parentnamespaceoid,inh.inhparent as parentoid,n2.nspname as paretnamespacename,c2.relname AS parentname FROM pg_inherits inh JOIN pg_class c1 ON (inh.inhrelid=c1.oid) JOIN pg_class  c2 ON (inh.inhparent=c2.oid) join pg_namespace n1 on c1.relnamespace = n1.oid join pg_namespace n2 on c2.relnamespace = n2.oid where n1.nspname = 'public' and c1.relname = 'range_partitions_sales_sales_q1_2006'","test1111",23881,"polar_test","100.104.175.250","00000",13,0,65,2023-07-26 14:31:53,1690353113000000
"execute <unnamed>: select version()","test1111",23881,"polar_test","100.104.175.250","00000",0,0,10,2023-07-26 14:31:53,1690353113000000
"execute <unnamed>: select con.conname as "constraint_name",con.nspname as "child_schema",con.relname as "child_table",att2.attname as "child_column",ns.nspname as "parent_schema",cl.relname as "parent_table",att.attname as "parent_column", con.confdeltype,con.confupdtype,con.condeferrable,con.condeferred,con.convalidated,con.confmatchtype,des.description from (select unnest(con1.conkey) as "parent",unnest(con1.confkey) as "child", con1.oid as "constranit_oid" ,con1.confdeltype,con1.confupdtype,con1.condeferrable,con1.condeferred,con1.convalidated,con1.confmatchtype,con1.confrelid,con1.conrelid,cl.relname,cl.relnamespace,ns.nspname,con1.conname from pg_class cl join pg_namespace ns on cl.relnamespace = ns.oid join pg_constraint con1 on con1.conrelid = cl.oid where ns.nspname = 'public' and cl.relname ='range_partitions_sales_sales_q1_2006' and con1.contype = 'f') con join pg_attribute att on att.attrelid = con.confrelid and att.attnum = con.child join pg_class cl on cl.oid = con.confrelid join pg_namespace ns on cl.relnamespace = ns.oid join pg_attribute att2 on att2.attrelid = con.conrelid and att2.attnum = con.parent left join pg_description des on con.constranit_oid = des.objoid order by con.conname","test1111",23881,"polar_test","100.104.175.250","00000",5,0,45,2023-07-26 14:31:53,1690353113000000
"execute <unnamed>: SELECT DISTINCT ON(cls.relname) cls.oid, cls.relname as idxname, indrelid, indkey, indisclustered, indisvalid, indisunique, indisprimary, n.nspname,indnatts, cls.reltablespace AS spcoid, spcname, tab.relname as tabname, indclass, con.oid AS conoid,desp.description,pg_get_expr(indpred, indrelid, true) as indconstraint, contype, condeferrable, condeferred, amname, substring(array_to_string(cls.reloptions, ',') from 'fillfactor=([0-9]*)') AS fillfactor FROM pg_index idx JOIN pg_class cls ON cls.oid=indexrelid JOIN pg_class tab ON tab.oid=indrelid LEFT OUTER JOIN pg_tablespace ta on ta.oid=cls.reltablespace JOIN pg_namespace n ON n.oid=tab.relnamespace JOIN pg_am am ON am.oid=cls.relam LEFT JOIN pg_depend dep ON (dep.classid = cls.tableoid AND dep.objid = cls.oid AND dep.refobjsubid = '0' AND dep.refclassid=(SELECT oid FROM pg_class WHERE relname='pg_constraint') AND dep.deptype='i') LEFT OUTER JOIN pg_constraint con ON (con.tableoid = dep.refclassid AND con.oid = dep.refobjid) LEFT OUTER JOIN pg_description des ON (des.objoid=cls.oid AND des.classoid='pg_class'::regclass) LEFT OUTER JOIN pg_description desp ON (desp.objoid=con.oid AND desp.objsubid = 0 AND desp.classoid='pg_constraint'::regclass) WHERE n.nspname = 'public'  and tab.relname ='range_partitions_sales_sales_q1_2006'  AND contype='x' ORDER BY cls.relname","test1111",23881,"polar_test","100.104.175.250","00000",13,0,87,2023-07-26 14:31:53,1690353113000000
"execute <unnamed>: SELECT DISTINCT ON(cls.relname) cls.oid, cls.relname as idxname, indrelid, indkey, indisclustered, indisvalid, indisunique, indisprimary, n.nspname,indnatts, cls.reltablespace AS spcoid, spcname, tab.relname as tabname, indclass, con.oid AS conoid, desp.description  AS description,pg_get_expr(indpred, indrelid, true) as indconstraint, contype, condeferrable, condeferred, amname, substring(array_to_string(cls.reloptions, ',') from 'fillfactor=([0-9]*)') AS fillfactor  FROM pg_index idx JOIN pg_class cls ON cls.oid=indexrelid JOIN pg_class tab ON tab.oid=indrelid LEFT OUTER JOIN pg_tablespace ta on ta.oid=cls.reltablespace JOIN pg_namespace n ON n.oid=tab.relnamespace JOIN pg_am am ON am.oid=cls.relam LEFT JOIN pg_depend dep ON (dep.classid = cls.tableoid AND dep.objid = cls.oid AND dep.refobjsubid = '0' AND dep.refclassid=(SELECT oid FROM pg_class WHERE relname='pg_constraint') AND dep.deptype='i') LEFT OUTER JOIN pg_constraint con ON (con.tableoid = dep.refclassid AND con.oid = dep.refobjid) LEFT OUTER JOIN pg_description desp ON (desp.objoid=con.oid AND desp.objsubid = 0 AND desp.classoid='pg_constraint'::regclass) WHERE n.nspname ='public' and tab.relname = 'range_partitions_sales_sales_q1_2006'  AND contype='u' ORDER BY cls.relname","test1111",23881,"polar_test","100.104.175.250","00000",13,0,71,2023-07-26 14:31:53,1690353113000000
"execute <unnamed>: select version()","test1111",23881,"polar_test","100.104.175.250","00000",0,0,11,2023-07-26 14:31:53,1690353113000000
"execute <unnamed>: SELECT 'TABLE' AS objectkind, c.oid, conname, relname, nspname, description, pg_get_expr(conbin, conrelid, true) as consrc , connoinherit, convalidated  FROM pg_constraint c  JOIN pg_class cl ON cl.oid=conrelid JOIN pg_namespace nl ON nl.oid=relnamespace LEFT OUTER JOIN pg_description des ON (des.objoid=c.oid AND des.classoid='pg_constraint'::regclass) WHERE contype = 'c' AND nspname = 'public' and relname = 'range_partitions_sales_sales_q1_2006' UNION SELECT 'DOMAIN' AS objectkind, c.oid, conname, typname as relname, nspname, description,      regexp_replace(pg_get_constraintdef(c.oid, true), E'CHECK \((.*)\).*', E'\1') as consrc, connoinherit, convalidated  FROM pg_constraint c  JOIN pg_type t ON t.oid=contypid  JOIN pg_namespace nl ON nl.oid=typnamespace  LEFT OUTER JOIN pg_description des ON (des.objoid=t.oid AND des.classoid='pg_constraint'::regclass) WHERE contype = 'c' AND nspname = 'public' and typname = 'range_partitions_sales_sales_q1_2006' ORDER BY conname","test1111",23881,"polar_test","100.104.175.250","00000",26,0,77,2023-07-26 14:31:53,1690353113000000
"execute <unnamed>: select pg_constraint.conname as pk_name,pg_attribute.attname as colname,pg_type.typname as typename from pg_constraint  inner join pg_class on pg_constraint.conrelid = pg_class.oid inner join pg_attribute on pg_attribute.attrelid = pg_class.oid  and  pg_attribute.attnum = pg_constraint.conkey[1] inner join pg_type on pg_type.oid = pg_attribute.atttypid where pg_class.oid = $$range_partitions_sales_sales_q1_2006$$::regclass::oid and pg_constraint.contype='p' and pg_table_is_visible(pg_class.oid)","test1111",23881,"polar_test","100.104.175.250","00000",0,0,18,2023-07-26 14:31:53,1690353113000000
"execute <unnamed>: select i.relname as indname,i.relowner as indowner,idx.indrelid::regclass,am.amname as indam,idx.indkey,ARRAY(SELECT pg_get_indexdef(idx.indexrelid, k + 1, true) FROM generate_subscripts(idx.indkey, 1) as k ORDER BY k) as indkey_names, idx.indexprs IS NOT NULL as indexprs,idx.indpred IS NOT NULL as indpred  from pg_index as idx JOIN pg_class as i ON i.oid = idx.indexrelid JOIN pg_am as am ON i.relam = am.oid where idx.indrelid::regclass = $$range_partitions_sales_sales_q1_2006$$::regclass and idx.indisprimary = false order by indname","test1111",23881,"polar_test","100.104.175.250","00000",18,0,123,2023-07-26 14:31:53,1690353113000000
"execute <unnamed>: SELECT DISTINCT ON(cls.relname) cls.oid, cls.relname as idxname, indrelid, indkey, indisclustered, indisvalid, indisunique, indisprimary, n.nspname, indnatts, cls.reltablespace AS spcoid, spcname, tab.relname as tabname, indclass, con.oid AS conoid, CASE contype WHEN 'p' THEN desp.description WHEN 'u' THEN desp.description WHEN 'x' THEN desp.description ELSE des.description END AS description, pg_get_expr(indpred, indrelid, true) as indconstraint, contype, condeferrable, condeferred, amname , substring(array_to_string(cls.reloptions, ',') from 'fillfactor=([0-9]*)') AS fillfactor  FROM pg_index idx  JOIN pg_class cls ON cls.oid=indexrelid JOIN pg_class tab ON tab.oid=indrelid LEFT OUTER JOIN pg_tablespace ta on ta.oid=cls.reltablespace JOIN pg_namespace n ON n.oid=tab.relnamespace JOIN pg_am am ON am.oid=cls.relam LEFT JOIN pg_depend dep ON (dep.classid = cls.tableoid AND dep.objid = cls.oid AND dep.refobjsubid = '0' AND dep.refclassid=(SELECT oid FROM pg_class WHERE relname='pg_constraint') AND dep.deptype='i') LEFT OUTER JOIN pg_constraint con ON (con.tableoid = dep.refclassid AND con.oid = dep.refobjid)  LEFT OUTER JOIN pg_description des ON (des.objoid=cls.oid AND des.classoid='pg_class'::regclass) LEFT OUTER JOIN pg_description desp ON (desp.objoid=con.oid AND desp.objsubid = 0 AND desp.classoid='pg_constraint'::regclass) WHERE n.nspname = 'public' AND cls.relname  =  'polar_rowid_42365_index'","test1111",23881,"polar_test","100.104.175.250","00000",18,0,90,2023-07-26 14:31:53,1690353113000000
"execute <unnamed>: SELECT pg_get_indexdef(i.indexrelid, 1, true) AS coldef, op.oprname,CASE WHEN (o.opcdefault = FALSE) THEN o.opcname ELSE null END AS opcname,coll.collname, nspc.nspname as collnspname FROM pg_index i JOIN pg_attribute a ON (a.attrelid = i.indexrelid AND attnum =1) LEFT OUTER JOIN pg_opclass o ON (o.oid = i.indclass[0]) LEFT OUTER JOIN pg_constraint c ON (c.conindid = i.indexrelid) LEFT OUTER JOIN pg_operator op ON (op.oid = c.conexclop[1]) LEFT OUTER JOIN pg_collation coll ON a.attcollation=coll.oid LEFT OUTER JOIN pg_namespace nspc ON coll.collnamespace=nspc.oid WHERE i.indexrelid = '42369'","test1111",23881,"polar_test","100.104.175.250","00000",131,0,97,2023-07-26 14:31:53,1690353113000000
"execute <unnamed>: SELECT current_database()","test1111",23881,"polar_test","100.104.175.250","00000",0,0,9,2023-07-26 14:31:53,1690353113000000
"execute <unnamed>: select schemaname,tablename,tableowner,tablespace from pg_tables where schemaname = 'public' and tablename = 'range_partitions_sales_sales_q2_2006'","test1111",23881,"polar_test","100.104.175.250","00000",7,0,31,2023-07-26 14:31:53,1690353113000000
"execute <unnamed>: select version()","test1111",23881,"polar_test","100.104.175.250","00000",0,0,10,2023-07-26 14:31:53,1690353113000000
"execute <unnamed>: SELECT c.oid, c.relhasrules,c.relhastriggers,c.relpersistence,c.reloptions, com.description from pg_class c INNER JOIN pg_namespace n ON c.relnamespace = n.oid left join pg_description com on objsubid = 0 and com.objoid = c.oid where  n.nspname = 'public' and c.relname = 'range_partitions_sales_sales_q2_2006'","test1111",23881,"polar_test","100.104.175.250","00000",5,0,35,2023-07-26 14:31:53,1690353113000000
"execute <unnamed>: select distinct ordinal_position,pg_catalog.col_description(b.oid,ordinal_position)  as column_comment,table_catalog,table_schema,table_name,column_name,attinhcount,data_type,udt_name,is_nullable,column_default,numeric_scale,numeric_precision,collation_schema,collation_name, format_type(a.atttypid, a.atttypmod) as view_type,indisprimary from information_schema.Columns c inner join  pg_attribute a ON (a.attname = c.column_name) left JOIN pg_class b ON (a.attrelid = b.oid and b.relname = c.table_name) left jOIN pg_namespace n ON (n.oid = b.relnamespace and n.nspname = c.table_schema) left join pg_index i on a.attnum = any(i.indkey) and i.indrelid = b.oid where table_schema = 'public' and table_name = 'range_partitions_sales_sales_q2_2006' and attrelid = $$range_partitions_sales_sales_q2_2006$$::regclass::oid order by ordinal_position","test1111",23881,"polar_test","100.104.175.250","00000",209,0,876,2023-07-26 14:31:53,1690353113000000
"execute <unnamed>: select c.column_name from information_schema.table_constraints s left join  information_schema.constraint_column_usage c on s.constraint_name = c.constraint_name and s.constraint_schema = c.constraint_schema where s.table_schema = 'public' and s.table_name =  'range_partitions_sales_sales_q2_2006' and s.constraint_type = 'PRIMARY KEY'","test1111",23881,"polar_test","100.104.175.250","00000",2,0,28,2023-07-26 14:31:53,1690353113000000
"execute <unnamed>: SELECT c1.relnamespace as childnamespaceoid,inh.inhrelid as childoid,n1.nspname as childnamespacename,c1.relname AS childname, c2.relnamespace as parentnamespaceoid,inh.inhparent as parentoid,n2.nspname as paretnamespacename,c2.relname AS parentname FROM pg_inherits inh JOIN pg_class c1 ON (inh.inhrelid=c1.oid) JOIN pg_class  c2 ON (inh.inhparent=c2.oid) join pg_namespace n1 on c1.relnamespace = n1.oid join pg_namespace n2 on c2.relnamespace = n2.oid where n1.nspname = 'public' and c1.relname = 'range_partitions_sales_sales_q2_2006'","test1111",23881,"polar_test","100.104.175.250","00000",13,0,53,2023-07-26 14:31:53,1690353113000000
"execute <unnamed>: select version()","test1111",23881,"polar_test","100.104.175.250","00000",0,0,11,2023-07-26 14:31:53,1690353113000000
"execute <unnamed>: select con.conname as "constraint_name",con.nspname as "child_schema",con.relname as "child_table",att2.attname as "child_column",ns.nspname as "parent_schema",cl.relname as "parent_table",att.attname as "parent_column", con.confdeltype,con.confupdtype,con.condeferrable,con.condeferred,con.convalidated,con.confmatchtype,des.description from (select unnest(con1.conkey) as "parent",unnest(con1.confkey) as "child", con1.oid as "constranit_oid" ,con1.confdeltype,con1.confupdtype,con1.condeferrable,con1.condeferred,con1.convalidated,con1.confmatchtype,con1.confrelid,con1.conrelid,cl.relname,cl.relnamespace,ns.nspname,con1.conname from pg_class cl join pg_namespace ns on cl.relnamespace = ns.oid join pg_constraint con1 on con1.conrelid = cl.oid where ns.nspname = 'public' and cl.relname ='range_partitions_sales_sales_q2_2006' and con1.contype = 'f') con join pg_attribute att on att.attrelid = con.confrelid and att.attnum = con.child join pg_class cl on cl.oid = con.confrelid join pg_namespace ns on cl.relnamespace = ns.oid join pg_attribute att2 on att2.attrelid = con.conrelid and att2.attnum = con.parent left join pg_description des on con.constranit_oid = des.objoid order by con.conname","test1111",23881,"polar_test","100.104.175.250","00000",5,0,41,2023-07-26 14:31:53,1690353113000000
"execute <unnamed>: SELECT DISTINCT ON(cls.relname) cls.oid, cls.relname as idxname, indrelid, indkey, indisclustered, indisvalid, indisunique, indisprimary, n.nspname,indnatts, cls.reltablespace AS spcoid, spcname, tab.relname as tabname, indclass, con.oid AS conoid,desp.description,pg_get_expr(indpred, indrelid, true) as indconstraint, contype, condeferrable, condeferred, amname, substring(array_to_string(cls.reloptions, ',') from 'fillfactor=([0-9]*)') AS fillfactor FROM pg_index idx JOIN pg_class cls ON cls.oid=indexrelid JOIN pg_class tab ON tab.oid=indrelid LEFT OUTER JOIN pg_tablespace ta on ta.oid=cls.reltablespace JOIN pg_namespace n ON n.oid=tab.relnamespace JOIN pg_am am ON am.oid=cls.relam LEFT JOIN pg_depend dep ON (dep.classid = cls.tableoid AND dep.objid = cls.oid AND dep.refobjsubid = '0' AND dep.refclassid=(SELECT oid FROM pg_class WHERE relname='pg_constraint') AND dep.deptype='i') LEFT OUTER JOIN pg_constraint con ON (con.tableoid = dep.refclassid AND con.oid = dep.refobjid) LEFT OUTER JOIN pg_description des ON (des.objoid=cls.oid AND des.classoid='pg_class'::regclass) LEFT OUTER JOIN pg_description desp ON (desp.objoid=con.oid AND desp.objsubid = 0 AND desp.classoid='pg_constraint'::regclass) WHERE n.nspname = 'public'  and tab.relname ='range_partitions_sales_sales_q2_2006'  AND contype='x' ORDER BY cls.relname","test1111",23881,"polar_test","100.104.175.250","00000",13,0,68,2023-07-26 14:31:53,1690353113000000
"execute <unnamed>: SELECT DISTINCT ON(cls.relname) cls.oid, cls.relname as idxname, indrelid, indkey, indisclustered, indisvalid, indisunique, indisprimary, n.nspname,indnatts, cls.reltablespace AS spcoid, spcname, tab.relname as tabname, indclass, con.oid AS conoid, desp.description  AS description,pg_get_expr(indpred, indrelid, true) as indconstraint, contype, condeferrable, condeferred, amname, substring(array_to_string(cls.reloptions, ',') from 'fillfactor=([0-9]*)') AS fillfactor  FROM pg_index idx JOIN pg_class cls ON cls.oid=indexrelid JOIN pg_class tab ON tab.oid=indrelid LEFT OUTER JOIN pg_tablespace ta on ta.oid=cls.reltablespace JOIN pg_namespace n ON n.oid=tab.relnamespace JOIN pg_am am ON am.oid=cls.relam LEFT JOIN pg_depend dep ON (dep.classid = cls.tableoid AND dep.objid = cls.oid AND dep.refobjsubid = '0' AND dep.refclassid=(SELECT oid FROM pg_class WHERE relname='pg_constraint') AND dep.deptype='i') LEFT OUTER JOIN pg_constraint con ON (con.tableoid = dep.refclassid AND con.oid = dep.refobjid) LEFT OUTER JOIN pg_description desp ON (desp.objoid=con.oid AND desp.objsubid = 0 AND desp.classoid='pg_constraint'::regclass) WHERE n.nspname ='public' and tab.relname = 'range_partitions_sales_sales_q2_2006'  AND contype='u' ORDER BY cls.relname","test1111",23881,"polar_test","100.104.175.250","00000",13,0,65,2023-07-26 14:31:53,1690353113000000
"execute <unnamed>: select version()","test1111",23881,"polar_test","100.104.175.250","00000",0,0,12,2023-07-26 14:31:53,1690353113000000
"execute <unnamed>: SELECT 'TABLE' AS objectkind, c.oid, conname, relname, nspname, description, pg_get_expr(conbin, conrelid, true) as consrc , connoinherit, convalidated  FROM pg_constraint c  JOIN pg_class cl ON cl.oid=conrelid JOIN pg_namespace nl ON nl.oid=relnamespace LEFT OUTER JOIN pg_description des ON (des.objoid=c.oid AND des.classoid='pg_constraint'::regclass) WHERE contype = 'c' AND nspname = 'public' and relname = 'range_partitions_sales_sales_q2_2006' UNION SELECT 'DOMAIN' AS objectkind, c.oid, conname, typname as relname, nspname, description,      regexp_replace(pg_get_constraintdef(c.oid, true), E'CHECK \((.*)\).*', E'\1') as consrc, connoinherit, convalidated  FROM pg_constraint c  JOIN pg_type t ON t.oid=contypid  JOIN pg_namespace nl ON nl.oid=typnamespace  LEFT OUTER JOIN pg_description des ON (des.objoid=t.oid AND des.classoid='pg_constraint'::regclass) WHERE contype = 'c' AND nspname = 'public' and typname = 'range_partitions_sales_sales_q2_2006' ORDER BY conname","test1111",23881,"polar_test","100.104.175.250","00000",26,0,79,2023-07-26 14:31:53,1690353113000000
"execute <unnamed>: select pg_constraint.conname as pk_name,pg_attribute.attname as colname,pg_type.typname as typename from pg_constraint  inner join pg_class on pg_constraint.conrelid = pg_class.oid inner join pg_attribute on pg_attribute.attrelid = pg_class.oid  and  pg_attribute.attnum = pg_constraint.conkey[1] inner join pg_type on pg_type.oid = pg_attribute.atttypid where pg_class.oid = $$range_partitions_sales_sales_q2_2006$$::regclass::oid and pg_constraint.contype='p' and pg_table_is_visible(pg_class.oid)","test1111",23881,"polar_test","100.104.175.250","00000",0,0,36,2023-07-26 14:31:53,1690353113000000
"execute <unnamed>: select i.relname as indname,i.relowner as indowner,idx.indrelid::regclass,am.amname as indam,idx.indkey,ARRAY(SELECT pg_get_indexdef(idx.indexrelid, k + 1, true) FROM generate_subscripts(idx.indkey, 1) as k ORDER BY k) as indkey_names, idx.indexprs IS NOT NULL as indexprs,idx.indpred IS NOT NULL as indpred  from pg_index as idx JOIN pg_class as i ON i.oid = idx.indexrelid JOIN pg_am as am ON i.relam = am.oid where idx.indrelid::regclass = $$range_partitions_sales_sales_q2_2006$$::regclass and idx.indisprimary = false order by indname","test1111",23881,"polar_test","100.104.175.250","00000",16,0,109,2023-07-26 14:31:53,1690353113000000
"execute <unnamed>: SELECT DISTINCT ON(cls.relname) cls.oid, cls.relname as idxname, indrelid, indkey, indisclustered, indisvalid, indisunique, indisprimary, n.nspname, indnatts, cls.reltablespace AS spcoid, spcname, tab.relname as tabname, indclass, con.oid AS conoid, CASE contype WHEN 'p' THEN desp.description WHEN 'u' THEN desp.description WHEN 'x' THEN desp.description ELSE des.description END AS description, pg_get_expr(indpred, indrelid, true) as indconstraint, contype, condeferrable, condeferred, amname , substring(array_to_string(cls.reloptions, ',') from 'fillfactor=([0-9]*)') AS fillfactor  FROM pg_index idx  JOIN pg_class cls ON cls.oid=indexrelid JOIN pg_class tab ON tab.oid=indrelid LEFT OUTER JOIN pg_tablespace ta on ta.oid=cls.reltablespace JOIN pg_namespace n ON n.oid=tab.relnamespace JOIN pg_am am ON am.oid=cls.relam LEFT JOIN pg_depend dep ON (dep.classid = cls.tableoid AND dep.objid = cls.oid AND dep.refobjsubid = '0' AND dep.refclassid=(SELECT oid FROM pg_class WHERE relname='pg_constraint') AND dep.deptype='i') LEFT OUTER JOIN pg_constraint con ON (con.tableoid = dep.refclassid AND con.oid = dep.refobjid)  LEFT OUTER JOIN pg_description des ON (des.objoid=cls.oid AND des.classoid='pg_class'::regclass) LEFT OUTER JOIN pg_description desp ON (desp.objoid=con.oid AND desp.objsubid = 0 AND desp.classoid='pg_constraint'::regclass) WHERE n.nspname = 'public' AND cls.relname  =  'polar_rowid_42372_index'","test1111",23881,"polar_test","100.104.175.250","00000",18,0,83,2023-07-26 14:31:53,1690353113000000
"execute <unnamed>: SELECT pg_get_indexdef(i.indexrelid, 1, true) AS coldef, op.oprname,CASE WHEN (o.opcdefault = FALSE) THEN o.opcname ELSE null END AS opcname,coll.collname, nspc.nspname as collnspname FROM pg_index i JOIN pg_attribute a ON (a.attrelid = i.indexrelid AND attnum =1) LEFT OUTER JOIN pg_opclass o ON (o.oid = i.indclass[0]) LEFT OUTER JOIN pg_constraint c ON (c.conindid = i.indexrelid) LEFT OUTER JOIN pg_operator op ON (op.oid = c.conexclop[1]) LEFT OUTER JOIN pg_collation coll ON a.attcollation=coll.oid LEFT OUTER JOIN pg_namespace nspc ON coll.collnamespace=nspc.oid WHERE i.indexrelid = '42376'","test1111",23881,"polar_test","100.104.175.250","00000",131,0,89,2023-07-26 14:31:53,1690353113000000
"execute <unnamed>: SELECT current_database()","test1111",23881,"polar_test","100.104.175.250","00000",0,0,9,2023-07-26 14:31:53,1690353113000000
"execute <unnamed>: select schemaname,tablename,tableowner,tablespace from pg_tables where schemaname = 'public' and tablename = 'range_partitions_sales_sales_q3_2006'","test1111",23881,"polar_test","100.104.175.250","00000",8,0,32,2023-07-26 14:31:53,1690353113000000
"execute <unnamed>: select version()","test1111",23881,"polar_test","100.104.175.250","00000",0,0,11,2023-07-26 14:31:53,1690353113000000
"execute <unnamed>: SELECT c.oid, c.relhasrules,c.relhastriggers,c.relpersistence,c.reloptions, com.description from pg_class c INNER JOIN pg_namespace n ON c.relnamespace = n.oid left join pg_description com on objsubid = 0 and com.objoid = c.oid where  n.nspname = 'public' and c.relname = 'range_partitions_sales_sales_q3_2006'","test1111",23881,"polar_test","100.104.175.250","00000",6,0,33,2023-07-26 14:31:53,1690353113000000
"execute <unnamed>: select distinct ordinal_position,pg_catalog.col_description(b.oid,ordinal_position)  as column_comment,table_catalog,table_schema,table_name,column_name,attinhcount,data_type,udt_name,is_nullable,column_default,numeric_scale,numeric_precision,collation_schema,collation_name, format_type(a.atttypid, a.atttypmod) as view_type,indisprimary from information_schema.Columns c inner join  pg_attribute a ON (a.attname = c.column_name) left JOIN pg_class b ON (a.attrelid = b.oid and b.relname = c.table_name) left jOIN pg_namespace n ON (n.oid = b.relnamespace and n.nspname = c.table_schema) left join pg_index i on a.attnum = any(i.indkey) and i.indrelid = b.oid where table_schema = 'public' and table_name = 'range_partitions_sales_sales_q3_2006' and attrelid = $$range_partitions_sales_sales_q3_2006$$::regclass::oid order by ordinal_position","test1111",23881,"polar_test","100.104.175.250","00000",217,0,881,2023-07-26 14:31:53,1690353113000000
"execute <unnamed>: select c.column_name from information_schema.table_constraints s left join  information_schema.constraint_column_usage c on s.constraint_name = c.constraint_name and s.constraint_schema = c.constraint_schema where s.table_schema = 'public' and s.table_name =  'range_partitions_sales_sales_q3_2006' and s.constraint_type = 'PRIMARY KEY'","test1111",23881,"polar_test","100.104.175.250","00000",3,0,26,2023-07-26 14:31:53,1690353113000000
"execute <unnamed>: SELECT c1.relnamespace as childnamespaceoid,inh.inhrelid as childoid,n1.nspname as childnamespacename,c1.relname AS childname, c2.relnamespace as parentnamespaceoid,inh.inhparent as parentoid,n2.nspname as paretnamespacename,c2.relname AS parentname FROM pg_inherits inh JOIN pg_class c1 ON (inh.inhrelid=c1.oid) JOIN pg_class  c2 ON (inh.inhparent=c2.oid) join pg_namespace n1 on c1.relnamespace = n1.oid join pg_namespace n2 on c2.relnamespace = n2.oid where n1.nspname = 'public' and c1.relname = 'range_partitions_sales_sales_q3_2006'","test1111",23881,"polar_test","100.104.175.250","00000",14,0,54,2023-07-26 14:31:53,1690353113000000
"execute <unnamed>: select version()","test1111",23881,"polar_test","100.104.175.250","00000",0,0,13,2023-07-26 14:31:53,1690353113000000
"execute <unnamed>: select con.conname as "constraint_name",con.nspname as "child_schema",con.relname as "child_table",att2.attname as "child_column",ns.nspname as "parent_schema",cl.relname as "parent_table",att.attname as "parent_column", con.confdeltype,con.confupdtype,con.condeferrable,con.condeferred,con.convalidated,con.confmatchtype,des.description from (select unnest(con1.conkey) as "parent",unnest(con1.confkey) as "child", con1.oid as "constranit_oid" ,con1.confdeltype,con1.confupdtype,con1.condeferrable,con1.condeferred,con1.convalidated,con1.confmatchtype,con1.confrelid,con1.conrelid,cl.relname,cl.relnamespace,ns.nspname,con1.conname from pg_class cl join pg_namespace ns on cl.relnamespace = ns.oid join pg_constraint con1 on con1.conrelid = cl.oid where ns.nspname = 'public' and cl.relname ='range_partitions_sales_sales_q3_2006' and con1.contype = 'f') con join pg_attribute att on att.attrelid = con.confrelid and att.attnum = con.child join pg_class cl on cl.oid = con.confrelid join pg_namespace ns on cl.relnamespace = ns.oid join pg_attribute att2 on att2.attrelid = con.conrelid and att2.attnum = con.parent left join pg_description des on con.constranit_oid = des.objoid order by con.conname","test1111",23881,"polar_test","100.104.175.250","00000",6,0,43,2023-07-26 14:31:53,1690353113000000
"execute <unnamed>: SELECT DISTINCT ON(cls.relname) cls.oid, cls.relname as idxname, indrelid, indkey, indisclustered, indisvalid, indisunique, indisprimary, n.nspname,indnatts, cls.reltablespace AS spcoid, spcname, tab.relname as tabname, indclass, con.oid AS conoid,desp.description,pg_get_expr(indpred, indrelid, true) as indconstraint, contype, condeferrable, condeferred, amname, substring(array_to_string(cls.reloptions, ',') from 'fillfactor=([0-9]*)') AS fillfactor FROM pg_index idx JOIN pg_class cls ON cls.oid=indexrelid JOIN pg_class tab ON tab.oid=indrelid LEFT OUTER JOIN pg_tablespace ta on ta.oid=cls.reltablespace JOIN pg_namespace n ON n.oid=tab.relnamespace JOIN pg_am am ON am.oid=cls.relam LEFT JOIN pg_depend dep ON (dep.classid = cls.tableoid AND dep.objid = cls.oid AND dep.refobjsubid = '0' AND dep.refclassid=(SELECT oid FROM pg_class WHERE relname='pg_constraint') AND dep.deptype='i') LEFT OUTER JOIN pg_constraint con ON (con.tableoid = dep.refclassid AND con.oid = dep.refobjid) LEFT OUTER JOIN pg_description des ON (des.objoid=cls.oid AND des.classoid='pg_class'::regclass) LEFT OUTER JOIN pg_description desp ON (desp.objoid=con.oid AND desp.objsubid = 0 AND desp.classoid='pg_constraint'::regclass) WHERE n.nspname = 'public'  and tab.relname ='range_partitions_sales_sales_q3_2006'  AND contype='x' ORDER BY cls.relname","test1111",23881,"polar_test","100.104.175.250","00000",14,0,63,2023-07-26 14:31:53,1690353113000000
"execute <unnamed>: SELECT DISTINCT ON(cls.relname) cls.oid, cls.relname as idxname, indrelid, indkey, indisclustered, indisvalid, indisunique, indisprimary, n.nspname,indnatts, cls.reltablespace AS spcoid, spcname, tab.relname as tabname, indclass, con.oid AS conoid, desp.description  AS description,pg_get_expr(indpred, indrelid, true) as indconstraint, contype, condeferrable, condeferred, amname, substring(array_to_string(cls.reloptions, ',') from 'fillfactor=([0-9]*)') AS fillfactor  FROM pg_index idx JOIN pg_class cls ON cls.oid=indexrelid JOIN pg_class tab ON tab.oid=indrelid LEFT OUTER JOIN pg_tablespace ta on ta.oid=cls.reltablespace JOIN pg_namespace n ON n.oid=tab.relnamespace JOIN pg_am am ON am.oid=cls.relam LEFT JOIN pg_depend dep ON (dep.classid = cls.tableoid AND dep.objid = cls.oid AND dep.refobjsubid = '0' AND dep.refclassid=(SELECT oid FROM pg_class WHERE relname='pg_constraint') AND dep.deptype='i') LEFT OUTER JOIN pg_constraint con ON (con.tableoid = dep.refclassid AND con.oid = dep.refobjid) LEFT OUTER JOIN pg_description desp ON (desp.objoid=con.oid AND desp.objsubid = 0 AND desp.classoid='pg_constraint'::regclass) WHERE n.nspname ='public' and tab.relname = 'range_partitions_sales_sales_q3_2006'  AND contype='u' ORDER BY cls.relname","test1111",23881,"polar_test","100.104.175.250","00000",14,0,65,2023-07-26 14:31:53,1690353113000000
"execute <unnamed>: select version()","test1111",23881,"polar_test","100.104.175.250","00000",0,0,11,2023-07-26 14:31:53,1690353113000000
"execute <unnamed>: SELECT 'TABLE' AS objectkind, c.oid, conname, relname, nspname, description, pg_get_expr(conbin, conrelid, true) as consrc , connoinherit, convalidated  FROM pg_constraint c  JOIN pg_class cl ON cl.oid=conrelid JOIN pg_namespace nl ON nl.oid=relnamespace LEFT OUTER JOIN pg_description des ON (des.objoid=c.oid AND des.classoid='pg_constraint'::regclass) WHERE contype = 'c' AND nspname = 'public' and relname = 'range_partitions_sales_sales_q3_2006' UNION SELECT 'DOMAIN' AS objectkind, c.oid, conname, typname as relname, nspname, description,      regexp_replace(pg_get_constraintdef(c.oid, true), E'CHECK \((.*)\).*', E'\1') as consrc, connoinherit, convalidated  FROM pg_constraint c  JOIN pg_type t ON t.oid=contypid  JOIN pg_namespace nl ON nl.oid=typnamespace  LEFT OUTER JOIN pg_description des ON (des.objoid=t.oid AND des.classoid='pg_constraint'::regclass) WHERE contype = 'c' AND nspname = 'public' and typname = 'range_partitions_sales_sales_q3_2006' ORDER BY conname","test1111",23881,"polar_test","100.104.175.250","00000",27,0,79,2023-07-26 14:31:53,1690353113000000
"execute <unnamed>: select pg_constraint.conname as pk_name,pg_attribute.attname as colname,pg_type.typname as typename from pg_constraint  inner join pg_class on pg_constraint.conrelid = pg_class.oid inner join pg_attribute on pg_attribute.attrelid = pg_class.oid  and  pg_attribute.attnum = pg_constraint.conkey[1] inner join pg_type on pg_type.oid = pg_attribute.atttypid where pg_class.oid = $$range_partitions_sales_sales_q3_2006$$::regclass::oid and pg_constraint.contype='p' and pg_table_is_visible(pg_class.oid)","test1111",23881,"polar_test","100.104.175.250","00000",0,0,18,2023-07-26 14:31:53,1690353113000000
"execute <unnamed>: select i.relname as indname,i.relowner as indowner,idx.indrelid::regclass,am.amname as indam,idx.indkey,ARRAY(SELECT pg_get_indexdef(idx.indexrelid, k + 1, true) FROM generate_subscripts(idx.indkey, 1) as k ORDER BY k) as indkey_names, idx.indexprs IS NOT NULL as indexprs,idx.indpred IS NOT NULL as indpred  from pg_index as idx JOIN pg_class as i ON i.oid = idx.indexrelid JOIN pg_am as am ON i.relam = am.oid where idx.indrelid::regclass = $$range_partitions_sales_sales_q3_2006$$::regclass and idx.indisprimary = false order by indname","test1111",23881,"polar_test","100.104.175.250","00000",18,0,102,2023-07-26 14:31:53,1690353113000000
"execute <unnamed>: SELECT DISTINCT ON(cls.relname) cls.oid, cls.relname as idxname, indrelid, indkey, indisclustered, indisvalid, indisunique, indisprimary, n.nspname, indnatts, cls.reltablespace AS spcoid, spcname, tab.relname as tabname, indclass, con.oid AS conoid, CASE contype WHEN 'p' THEN desp.description WHEN 'u' THEN desp.description WHEN 'x' THEN desp.description ELSE des.description END AS description, pg_get_expr(indpred, indrelid, true) as indconstraint, contype, condeferrable, condeferred, amname , substring(array_to_string(cls.reloptions, ',') from 'fillfactor=([0-9]*)') AS fillfactor  FROM pg_index idx  JOIN pg_class cls ON cls.oid=indexrelid JOIN pg_class tab ON tab.oid=indrelid LEFT OUTER JOIN pg_tablespace ta on ta.oid=cls.reltablespace JOIN pg_namespace n ON n.oid=tab.relnamespace JOIN pg_am am ON am.oid=cls.relam LEFT JOIN pg_depend dep ON (dep.classid = cls.tableoid AND dep.objid = cls.oid AND dep.refobjsubid = '0' AND dep.refclassid=(SELECT oid FROM pg_class WHERE relname='pg_constraint') AND dep.deptype='i') LEFT OUTER JOIN pg_constraint con ON (con.tableoid = dep.refclassid AND con.oid = dep.refobjid)  LEFT OUTER JOIN pg_description des ON (des.objoid=cls.oid AND des.classoid='pg_class'::regclass) LEFT OUTER JOIN pg_description desp ON (desp.objoid=con.oid AND desp.objsubid = 0 AND desp.classoid='pg_constraint'::regclass) WHERE n.nspname = 'public' AND cls.relname  =  'polar_rowid_42379_index'","test1111",23881,"polar_test","100.104.175.250","00000",19,0,93,2023-07-26 14:31:53,1690353113000000
"execute <unnamed>: SELECT pg_get_indexdef(i.indexrelid, 1, true) AS coldef, op.oprname,CASE WHEN (o.opcdefault = FALSE) THEN o.opcname ELSE null END AS opcname,coll.collname, nspc.nspname as collnspname FROM pg_index i JOIN pg_attribute a ON (a.attrelid = i.indexrelid AND attnum =1) LEFT OUTER JOIN pg_opclass o ON (o.oid = i.indclass[0]) LEFT OUTER JOIN pg_constraint c ON (c.conindid = i.indexrelid) LEFT OUTER JOIN pg_operator op ON (op.oid = c.conexclop[1]) LEFT OUTER JOIN pg_collation coll ON a.attcollation=coll.oid LEFT OUTER JOIN pg_namespace nspc ON coll.collnamespace=nspc.oid WHERE i.indexrelid = '42383'","test1111",23881,"polar_test","100.104.175.250","00000",131,0,94,2023-07-26 14:31:53,1690353113000000
"execute <unnamed>: SELECT current_database()","test1111",23881,"polar_test","100.104.175.250","00000",0,0,10,2023-07-26 14:31:53,1690353113000000
"execute S_1: select schemaname,tablename,tableowner,tablespace from pg_tables where schemaname = 'public' and tablename = 'range_partitions_sales_sales_q4_2006'","test1111",23881,"polar_test","100.104.175.250","00000",7,0,36,2023-07-26 14:31:53,1690353113000000
"execute <unnamed>: select version()","test1111",23881,"polar_test","100.104.175.250","00000",0,0,10,2023-07-26 14:31:53,1690353113000000
"execute S_2: SELECT c.oid, c.relhasrules,c.relhastriggers,c.relpersistence,c.reloptions, com.description from pg_class c INNER JOIN pg_namespace n ON c.relnamespace = n.oid left join pg_description com on objsubid = 0 and com.objoid = c.oid where  n.nspname = 'public' and c.relname = 'range_partitions_sales_sales_q4_2006'","test1111",23881,"polar_test","100.104.175.250","00000",5,0,36,2023-07-26 14:31:53,1690353113000000
"execute S_3: select distinct ordinal_position,pg_catalog.col_description(b.oid,ordinal_position)  as column_comment,table_catalog,table_schema,table_name,column_name,attinhcount,data_type,udt_name,is_nullable,column_default,numeric_scale,numeric_precision,collation_schema,collation_name, format_type(a.atttypid, a.atttypmod) as view_type,indisprimary from information_schema.Columns c inner join  pg_attribute a ON (a.attname = c.column_name) left JOIN pg_class b ON (a.attrelid = b.oid and b.relname = c.table_name) left jOIN pg_namespace n ON (n.oid = b.relnamespace and n.nspname = c.table_schema) left join pg_index i on a.attnum = any(i.indkey) and i.indrelid = b.oid where table_schema = 'public' and table_name = 'range_partitions_sales_sales_q4_2006' and attrelid = $$range_partitions_sales_sales_q4_2006$$::regclass::oid order by ordinal_position","test1111",23881,"polar_test","100.104.175.250","00000",209,0,874,2023-07-26 14:31:53,1690353113000000
"execute S_4: select c.column_name from information_schema.table_constraints s left join  information_schema.constraint_column_usage c on s.constraint_name = c.constraint_name and s.constraint_schema = c.constraint_schema where s.table_schema = 'public' and s.table_name =  'range_partitions_sales_sales_q4_2006' and s.constraint_type = 'PRIMARY KEY'","test1111",23881,"polar_test","100.104.175.250","00000",2,0,27,2023-07-26 14:31:53,1690353113000000
"execute S_5: SELECT c1.relnamespace as childnamespaceoid,inh.inhrelid as childoid,n1.nspname as childnamespacename,c1.relname AS childname, c2.relnamespace as parentnamespaceoid,inh.inhparent as parentoid,n2.nspname as paretnamespacename,c2.relname AS parentname FROM pg_inherits inh JOIN pg_class c1 ON (inh.inhrelid=c1.oid) JOIN pg_class  c2 ON (inh.inhparent=c2.oid) join pg_namespace n1 on c1.relnamespace = n1.oid join pg_namespace n2 on c2.relnamespace = n2.oid where n1.nspname = 'public' and c1.relname = 'range_partitions_sales_sales_q4_2006'","test1111",23881,"polar_test","100.104.175.250","00000",13,0,77,2023-07-26 14:31:54,1690353114000000
"execute <unnamed>: select version()","test1111",23881,"polar_test","100.104.175.250","00000",0,0,14,2023-07-26 14:31:54,1690353114000000
"execute S_6: select con.conname as "constraint_name",con.nspname as "child_schema",con.relname as "child_table",att2.attname as "child_column",ns.nspname as "parent_schema",cl.relname as "parent_table",att.attname as "parent_column", con.confdeltype,con.confupdtype,con.condeferrable,con.condeferred,con.convalidated,con.confmatchtype,des.description from (select unnest(con1.conkey) as "parent",unnest(con1.confkey) as "child", con1.oid as "constranit_oid" ,con1.confdeltype,con1.confupdtype,con1.condeferrable,con1.condeferred,con1.convalidated,con1.confmatchtype,con1.confrelid,con1.conrelid,cl.relname,cl.relnamespace,ns.nspname,con1.conname from pg_class cl join pg_namespace ns on cl.relnamespace = ns.oid join pg_constraint con1 on con1.conrelid = cl.oid where ns.nspname = 'public' and cl.relname ='range_partitions_sales_sales_q4_2006' and con1.contype = 'f') con join pg_attribute att on att.attrelid = con.confrelid and att.attnum = con.child join pg_class cl on cl.oid = con.confrelid join pg_namespace ns on cl.relnamespace = ns.oid join pg_attribute att2 on att2.attrelid = con.conrelid and att2.attnum = con.parent left join pg_description des on con.constranit_oid = des.objoid order by con.conname","test1111",23881,"polar_test","100.104.175.250","00000",5,0,43,2023-07-26 14:31:54,1690353114000000
"execute S_7: SELECT DISTINCT ON(cls.relname) cls.oid, cls.relname as idxname, indrelid, indkey, indisclustered, indisvalid, indisunique, indisprimary, n.nspname,indnatts, cls.reltablespace AS spcoid, spcname, tab.relname as tabname, indclass, con.oid AS conoid,desp.description,pg_get_expr(indpred, indrelid, true) as indconstraint, contype, condeferrable, condeferred, amname, substring(array_to_string(cls.reloptions, ',') from 'fillfactor=([0-9]*)') AS fillfactor FROM pg_index idx JOIN pg_class cls ON cls.oid=indexrelid JOIN pg_class tab ON tab.oid=indrelid LEFT OUTER JOIN pg_tablespace ta on ta.oid=cls.reltablespace JOIN pg_namespace n ON n.oid=tab.relnamespace JOIN pg_am am ON am.oid=cls.relam LEFT JOIN pg_depend dep ON (dep.classid = cls.tableoid AND dep.objid = cls.oid AND dep.refobjsubid = '0' AND dep.refclassid=(SELECT oid FROM pg_class WHERE relname='pg_constraint') AND dep.deptype='i') LEFT OUTER JOIN pg_constraint con ON (con.tableoid = dep.refclassid AND con.oid = dep.refobjid) LEFT OUTER JOIN pg_description des ON (des.objoid=cls.oid AND des.classoid='pg_class'::regclass) LEFT OUTER JOIN pg_description desp ON (desp.objoid=con.oid AND desp.objsubid = 0 AND desp.classoid='pg_constraint'::regclass) WHERE n.nspname = 'public'  and tab.relname ='range_partitions_sales_sales_q4_2006'  AND contype='x' ORDER BY cls.relname","test1111",23881,"polar_test","100.104.175.250","00000",13,0,80,2023-07-26 14:31:54,1690353114000000
"execute S_8: SELECT DISTINCT ON(cls.relname) cls.oid, cls.relname as idxname, indrelid, indkey, indisclustered, indisvalid, indisunique, indisprimary, n.nspname,indnatts, cls.reltablespace AS spcoid, spcname, tab.relname as tabname, indclass, con.oid AS conoid, desp.description  AS description,pg_get_expr(indpred, indrelid, true) as indconstraint, contype, condeferrable, condeferred, amname, substring(array_to_string(cls.reloptions, ',') from 'fillfactor=([0-9]*)') AS fillfactor  FROM pg_index idx JOIN pg_class cls ON cls.oid=indexrelid JOIN pg_class tab ON tab.oid=indrelid LEFT OUTER JOIN pg_tablespace ta on ta.oid=cls.reltablespace JOIN pg_namespace n ON n.oid=tab.relnamespace JOIN pg_am am ON am.oid=cls.relam LEFT JOIN pg_depend dep ON (dep.classid = cls.tableoid AND dep.objid = cls.oid AND dep.refobjsubid = '0' AND dep.refclassid=(SELECT oid FROM pg_class WHERE relname='pg_constraint') AND dep.deptype='i') LEFT OUTER JOIN pg_constraint con ON (con.tableoid = dep.refclassid AND con.oid = dep.refobjid) LEFT OUTER JOIN pg_description desp ON (desp.objoid=con.oid AND desp.objsubid = 0 AND desp.classoid='pg_constraint'::regclass) WHERE n.nspname ='public' and tab.relname = 'range_partitions_sales_sales_q4_2006'  AND contype='u' ORDER BY cls.relname","test1111",23881,"polar_test","100.104.175.250","00000",13,0,71,2023-07-26 14:31:54,1690353114000000
"execute <unnamed>: select version()","test1111",23881,"polar_test","100.104.175.250","00000",0,0,10,2023-07-26 14:31:54,1690353114000000
"execute S_9: SELECT 'TABLE' AS objectkind, c.oid, conname, relname, nspname, description, pg_get_expr(conbin, conrelid, true) as consrc , connoinherit, convalidated  FROM pg_constraint c  JOIN pg_class cl ON cl.oid=conrelid JOIN pg_namespace nl ON nl.oid=relnamespace LEFT OUTER JOIN pg_description des ON (des.objoid=c.oid AND des.classoid='pg_constraint'::regclass) WHERE contype = 'c' AND nspname = 'public' and relname = 'range_partitions_sales_sales_q4_2006' UNION SELECT 'DOMAIN' AS objectkind, c.oid, conname, typname as relname, nspname, description,      regexp_replace(pg_get_constraintdef(c.oid, true), E'CHECK \((.*)\).*', E'\1') as consrc, connoinherit, convalidated  FROM pg_constraint c  JOIN pg_type t ON t.oid=contypid  JOIN pg_namespace nl ON nl.oid=typnamespace  LEFT OUTER JOIN pg_description des ON (des.objoid=t.oid AND des.classoid='pg_constraint'::regclass) WHERE contype = 'c' AND nspname = 'public' and typname = 'range_partitions_sales_sales_q4_2006' ORDER BY conname","test1111",23881,"polar_test","100.104.175.250","00000",26,0,76,2023-07-26 14:31:54,1690353114000000
"execute S_10: select pg_constraint.conname as pk_name,pg_attribute.attname as colname,pg_type.typname as typename from pg_constraint  inner join pg_class on pg_constraint.conrelid = pg_class.oid inner join pg_attribute on pg_attribute.attrelid = pg_class.oid  and  pg_attribute.attnum = pg_constraint.conkey[1] inner join pg_type on pg_type.oid = pg_attribute.atttypid where pg_class.oid = $$range_partitions_sales_sales_q4_2006$$::regclass::oid and pg_constraint.contype='p' and pg_table_is_visible(pg_class.oid)","test1111",23881,"polar_test","100.104.175.250","00000",0,0,19,2023-07-26 14:31:54,1690353114000000
"execute S_11: select i.relname as indname,i.relowner as indowner,idx.indrelid::regclass,am.amname as indam,idx.indkey,ARRAY(SELECT pg_get_indexdef(idx.indexrelid, k + 1, true) FROM generate_subscripts(idx.indkey, 1) as k ORDER BY k) as indkey_names, idx.indexprs IS NOT NULL as indexprs,idx.indpred IS NOT NULL as indpred  from pg_index as idx JOIN pg_class as i ON i.oid = idx.indexrelid JOIN pg_am as am ON i.relam = am.oid where idx.indrelid::regclass = $$range_partitions_sales_sales_q4_2006$$::regclass and idx.indisprimary = false order by indname","test1111",23881,"polar_test","100.104.175.250","00000",18,0,109,2023-07-26 14:31:54,1690353114000000
"execute <unnamed>: SELECT DISTINCT ON(cls.relname) cls.oid, cls.relname as idxname, indrelid, indkey, indisclustered, indisvalid, indisunique, indisprimary, n.nspname, indnatts, cls.reltablespace AS spcoid, spcname, tab.relname as tabname, indclass, con.oid AS conoid, CASE contype WHEN 'p' THEN desp.description WHEN 'u' THEN desp.description WHEN 'x' THEN desp.description ELSE des.description END AS description, pg_get_expr(indpred, indrelid, true) as indconstraint, contype, condeferrable, condeferred, amname , substring(array_to_string(cls.reloptions, ',') from 'fillfactor=([0-9]*)') AS fillfactor  FROM pg_index idx  JOIN pg_class cls ON cls.oid=indexrelid JOIN pg_class tab ON tab.oid=indrelid LEFT OUTER JOIN pg_tablespace ta on ta.oid=cls.reltablespace JOIN pg_namespace n ON n.oid=tab.relnamespace JOIN pg_am am ON am.oid=cls.relam LEFT JOIN pg_depend dep ON (dep.classid = cls.tableoid AND dep.objid = cls.oid AND dep.refobjsubid = '0' AND dep.refclassid=(SELECT oid FROM pg_class WHERE relname='pg_constraint') AND dep.deptype='i') LEFT OUTER JOIN pg_constraint con ON (con.tableoid = dep.refclassid AND con.oid = dep.refobjid)  LEFT OUTER JOIN pg_description des ON (des.objoid=cls.oid AND des.classoid='pg_class'::regclass) LEFT OUTER JOIN pg_description desp ON (desp.objoid=con.oid AND desp.objsubid = 0 AND desp.classoid='pg_constraint'::regclass) WHERE n.nspname = 'public' AND cls.relname  =  'polar_rowid_42386_index'","test1111",23881,"polar_test","100.104.175.250","00000",18,0,90,2023-07-26 14:31:54,1690353114000000
"execute <unnamed>: SELECT pg_get_indexdef(i.indexrelid, 1, true) AS coldef, op.oprname,CASE WHEN (o.opcdefault = FALSE) THEN o.opcname ELSE null END AS opcname,coll.collname, nspc.nspname as collnspname FROM pg_index i JOIN pg_attribute a ON (a.attrelid = i.indexrelid AND attnum =1) LEFT OUTER JOIN pg_opclass o ON (o.oid = i.indclass[0]) LEFT OUTER JOIN pg_constraint c ON (c.conindid = i.indexrelid) LEFT OUTER JOIN pg_operator op ON (op.oid = c.conexclop[1]) LEFT OUTER JOIN pg_collation coll ON a.attcollation=coll.oid LEFT OUTER JOIN pg_namespace nspc ON coll.collnamespace=nspc.oid WHERE i.indexrelid = '42390'","test1111",23881,"polar_test","100.104.175.250","00000",131,0,90,2023-07-26 14:31:54,1690353114000000
"execute <unnamed>: SELECT current_database()","test1111",23881,"polar_test","100.104.175.250","00000",0,0,11,2023-07-26 14:31:54,1690353114000000
"execute <unnamed>: SET extra_float_digits = 3","test1111",23930,"polar_test","100.104.175.252","00000",0,0,32,2023-07-26 14:31:56,1690353116000000
"execute <unnamed>: SELECT pg_catalog.set_config(name,'YYYY-MM-DD HH24:MI:SS','f') FROM pg_catalog.pg_settings WHERE name = 'nls_date_format'","test1111",23930,"polar_test","100.104.175.252","00000",0,0,1635,2023-07-26 14:31:56,1690353116000000
"execute <unnamed>: SELECT pg_catalog.set_config(name,'YYYY-MM-DD HH24:MI:SS.FF','f') FROM pg_catalog.pg_settings WHERE name = 'nls_timestamp_format'","test1111",23930,"polar_test","100.104.175.252","00000",0,0,1358,2023-07-26 14:31:56,1690353116000000
"execute <unnamed>: SELECT pg_catalog.set_config(name,'YYYY-MM-DD HH24:MI:SS.FFOF','f') FROM pg_catalog.pg_settings WHERE name = 'nls_timestamp_tz_format'","test1111",23930,"polar_test","100.104.175.252","00000",0,0,1351,2023-07-26 14:31:56,1690353116000000
"execute <unnamed>: SET application_name = 'PolarDB2 JDBC Driver'","test1111",23930,"polar_test","100.104.175.252","00000",0,0,13,2023-07-26 14:31:56,1690353116000000
"execute <unnamed>: select 1","test1111",23930,"polar_test","100.104.175.252","00000",0,0,14,2023-07-26 14:31:56,1690353116000000
"execute <unnamed>: set search_path = "public"","test1111",23930,"polar_test","100.104.175.252","00000",0,0,18,2023-07-26 14:31:56,1690353116000000
"execute <unnamed>: select  c.relname table_name, 
   nsp.nspname schema_name,        cmt.description as description,
       c.reltuples::bigint num_rows,
       pg_total_relation_size(c.oid) / 1048576 storeCapacity,
       coalesce(pg_stat_get_last_analyze_time(c.oid),
                pg_stat_get_last_autoanalyze_time(c.oid)) createTime,
       coalesce(pg_stat_get_last_vacuum_time(c.oid),
                pg_stat_get_last_autovacuum_time(c.oid)) last_ddl_time,
       current_setting('server_encoding')::varchar  as encoding,
       CASE WHEN c.relkind = 'f' THEN 'FOREIGN' ELSE 'NORMAL' END as tableType
  from pg_namespace nsp, pg_class c
  left join pg_description cmt
    on c.oid = cmt.objoid
   and cmt.objsubid = 0
 where c.relkind in ('r', 'p', 'f')
   and c.relnamespace = nsp.oid
   and nsp.nspname = 'public'
 and c.relname in ('hash_partitions_sales')   order by c.relname","test1111",23930,"polar_test","100.104.175.252","00000",59,0,10705,2023-07-26 14:31:56,1690353116000000
"execute <unnamed>: SELECT c.oid, a.attnum, a.attname, c.relname, n.nspname, a.attnotnull OR (t.typtype = 'd' AND t.typnotnull), a.attidentity is not null OR pg_catalog.pg_get_expr(d.adbin, d.adrelid) LIKE '%nextval(%' FROM pg_catalog.pg_class c JOIN pg_catalog.pg_namespace n ON (c.relnamespace = n.oid) JOIN pg_catalog.pg_attribute a ON (c.oid = a.attrelid) JOIN pg_catalog.pg_type t ON (a.atttypid = t.oid) LEFT JOIN pg_catalog.pg_attrdef d ON (d.adrelid = a.attrelid AND d.adnum = a.attnum) JOIN (SELECT 1259 AS oid , 2 AS attnum UNION ALL SELECT 2615, 2 UNION ALL SELECT 2609, 4) vals ON (c.oid = vals.oid AND a.attnum = vals.attnum)","test1111",23930,"polar_test","100.104.175.252","00000",24,0,72,2023-07-26 14:31:56,1690353116000000
"execute <unnamed>: select schemaname,tablename,tableowner,tablespace from pg_tables where schemaname = 'public' and tablename = 'hash_partitions_sales'","test1111",23930,"polar_test","100.104.175.252","00000",7,0,30,2023-07-26 14:31:56,1690353116000000
"execute <unnamed>: select version()","test1111",23930,"polar_test","100.104.175.252","00000",0,0,10,2023-07-26 14:31:56,1690353116000000
"execute <unnamed>: SELECT c.oid, c.relhasrules,c.relhastriggers,c.relpersistence,c.reloptions, com.description from pg_class c INNER JOIN pg_namespace n ON c.relnamespace = n.oid left join pg_description com on objsubid = 0 and com.objoid = c.oid where  n.nspname = 'public' and c.relname = 'hash_partitions_sales'","test1111",23930,"polar_test","100.104.175.252","00000",5,0,26,2023-07-26 14:31:56,1690353116000000
"execute <unnamed>: select distinct ordinal_position,pg_catalog.col_description(b.oid,ordinal_position)  as column_comment,table_catalog,table_schema,table_name,column_name,attinhcount,data_type,udt_name,is_nullable,column_default,numeric_scale,numeric_precision,collation_schema,collation_name, format_type(a.atttypid, a.atttypmod) as view_type,indisprimary from information_schema.Columns c inner join  pg_attribute a ON (a.attname = c.column_name) left JOIN pg_class b ON (a.attrelid = b.oid and b.relname = c.table_name) left jOIN pg_namespace n ON (n.oid = b.relnamespace and n.nspname = c.table_schema) left join pg_index i on a.attnum = any(i.indkey) and i.indrelid = b.oid where table_schema = 'public' and table_name = 'hash_partitions_sales' and attrelid = $$hash_partitions_sales$$::regclass::oid order by ordinal_position","test1111",23930,"polar_test","100.104.175.252","00000",135,0,744,2023-07-26 14:31:56,1690353116000000
"execute <unnamed>: select c.column_name from information_schema.table_constraints s left join  information_schema.constraint_column_usage c on s.constraint_name = c.constraint_name and s.constraint_schema = c.constraint_schema where s.table_schema = 'public' and s.table_name =  'hash_partitions_sales' and s.constraint_type = 'PRIMARY KEY'","test1111",23930,"polar_test","100.104.175.252","00000",2,0,23,2023-07-26 14:31:56,1690353116000000
"execute <unnamed>: SELECT c1.relnamespace as childnamespaceoid,inh.inhrelid as childoid,n1.nspname as childnamespacename,c1.relname AS childname, c2.relnamespace as parentnamespaceoid,inh.inhparent as parentoid,n2.nspname as paretnamespacename,c2.relname AS parentname FROM pg_inherits inh JOIN pg_class c1 ON (inh.inhrelid=c1.oid) JOIN pg_class  c2 ON (inh.inhparent=c2.oid) join pg_namespace n1 on c1.relnamespace = n1.oid join pg_namespace n2 on c2.relnamespace = n2.oid where n1.nspname = 'public' and c1.relname = 'hash_partitions_sales'","test1111",23930,"polar_test","100.104.175.252","00000",16,0,40,2023-07-26 14:31:56,1690353116000000
"execute <unnamed>: select version()","test1111",23930,"polar_test","100.104.175.252","00000",0,0,9,2023-07-26 14:31:56,1690353116000000
"execute <unnamed>: select con.conname as "constraint_name",con.nspname as "child_schema",con.relname as "child_table",att2.attname as "child_column",ns.nspname as "parent_schema",cl.relname as "parent_table",att.attname as "parent_column", con.confdeltype,con.confupdtype,con.condeferrable,con.condeferred,con.convalidated,con.confmatchtype,des.description from (select unnest(con1.conkey) as "parent",unnest(con1.confkey) as "child", con1.oid as "constranit_oid" ,con1.confdeltype,con1.confupdtype,con1.condeferrable,con1.condeferred,con1.convalidated,con1.confmatchtype,con1.confrelid,con1.conrelid,cl.relname,cl.relnamespace,ns.nspname,con1.conname from pg_class cl join pg_namespace ns on cl.relnamespace = ns.oid join pg_constraint con1 on con1.conrelid = cl.oid where ns.nspname = 'public' and cl.relname ='hash_partitions_sales' and con1.contype = 'f') con join pg_attribute att on att.attrelid = con.confrelid and att.attnum = con.child join pg_class cl on cl.oid = con.confrelid join pg_namespace ns on cl.relnamespace = ns.oid join pg_attribute att2 on att2.attrelid = con.conrelid and att2.attnum = con.parent left join pg_description des on con.constranit_oid = des.objoid order by con.conname","test1111",23930,"polar_test","100.104.175.252","00000",5,0,34,2023-07-26 14:31:56,1690353116000000
"execute <unnamed>: SELECT DISTINCT ON(cls.relname) cls.oid, cls.relname as idxname, indrelid, indkey, indisclustered, indisvalid, indisunique, indisprimary, n.nspname,indnatts, cls.reltablespace AS spcoid, spcname, tab.relname as tabname, indclass, con.oid AS conoid,desp.description,pg_get_expr(indpred, indrelid, true) as indconstraint, contype, condeferrable, condeferred, amname, substring(array_to_string(cls.reloptions, ',') from 'fillfactor=([0-9]*)') AS fillfactor FROM pg_index idx JOIN pg_class cls ON cls.oid=indexrelid JOIN pg_class tab ON tab.oid=indrelid LEFT OUTER JOIN pg_tablespace ta on ta.oid=cls.reltablespace JOIN pg_namespace n ON n.oid=tab.relnamespace JOIN pg_am am ON am.oid=cls.relam LEFT JOIN pg_depend dep ON (dep.classid = cls.tableoid AND dep.objid = cls.oid AND dep.refobjsubid = '0' AND dep.refclassid=(SELECT oid FROM pg_class WHERE relname='pg_constraint') AND dep.deptype='i') LEFT OUTER JOIN pg_constraint con ON (con.tableoid = dep.refclassid AND con.oid = dep.refobjid) LEFT OUTER JOIN pg_description des ON (des.objoid=cls.oid AND des.classoid='pg_class'::regclass) LEFT OUTER JOIN pg_description desp ON (desp.objoid=con.oid AND desp.objsubid = 0 AND desp.classoid='pg_constraint'::regclass) WHERE n.nspname = 'public'  and tab.relname ='hash_partitions_sales'  AND contype='x' ORDER BY cls.relname","test1111",23930,"polar_test","100.104.175.252","00000",2,0,31,2023-07-26 14:31:56,1690353116000000
"execute <unnamed>: SELECT DISTINCT ON(cls.relname) cls.oid, cls.relname as idxname, indrelid, indkey, indisclustered, indisvalid, indisunique, indisprimary, n.nspname,indnatts, cls.reltablespace AS spcoid, spcname, tab.relname as tabname, indclass, con.oid AS conoid, desp.description  AS description,pg_get_expr(indpred, indrelid, true) as indconstraint, contype, condeferrable, condeferred, amname, substring(array_to_string(cls.reloptions, ',') from 'fillfactor=([0-9]*)') AS fillfactor  FROM pg_index idx JOIN pg_class cls ON cls.oid=indexrelid JOIN pg_class tab ON tab.oid=indrelid LEFT OUTER JOIN pg_tablespace ta on ta.oid=cls.reltablespace JOIN pg_namespace n ON n.oid=tab.relnamespace JOIN pg_am am ON am.oid=cls.relam LEFT JOIN pg_depend dep ON (dep.classid = cls.tableoid AND dep.objid = cls.oid AND dep.refobjsubid = '0' AND dep.refclassid=(SELECT oid FROM pg_class WHERE relname='pg_constraint') AND dep.deptype='i') LEFT OUTER JOIN pg_constraint con ON (con.tableoid = dep.refclassid AND con.oid = dep.refobjid) LEFT OUTER JOIN pg_description desp ON (desp.objoid=con.oid AND desp.objsubid = 0 AND desp.classoid='pg_constraint'::regclass) WHERE n.nspname ='public' and tab.relname = 'hash_partitions_sales'  AND contype='u' ORDER BY cls.relname","test1111",23930,"polar_test","100.104.175.252","00000",2,0,31,2023-07-26 14:31:56,1690353116000000
"execute <unnamed>: select version()","test1111",23930,"polar_test","100.104.175.252","00000",0,0,8,2023-07-26 14:31:56,1690353116000000
"execute <unnamed>: SELECT 'TABLE' AS objectkind, c.oid, conname, relname, nspname, description, pg_get_expr(conbin, conrelid, true) as consrc , connoinherit, convalidated  FROM pg_constraint c  JOIN pg_class cl ON cl.oid=conrelid JOIN pg_namespace nl ON nl.oid=relnamespace LEFT OUTER JOIN pg_description des ON (des.objoid=c.oid AND des.classoid='pg_constraint'::regclass) WHERE contype = 'c' AND nspname = 'public' and relname = 'hash_partitions_sales' UNION SELECT 'DOMAIN' AS objectkind, c.oid, conname, typname as relname, nspname, description,      regexp_replace(pg_get_constraintdef(c.oid, true), E'CHECK \((.*)\).*', E'\1') as consrc, connoinherit, convalidated  FROM pg_constraint c  JOIN pg_type t ON t.oid=contypid  JOIN pg_namespace nl ON nl.oid=typnamespace  LEFT OUTER JOIN pg_description des ON (des.objoid=t.oid AND des.classoid='pg_constraint'::regclass) WHERE contype = 'c' AND nspname = 'public' and typname = 'hash_partitions_sales' ORDER BY conname","test1111",23930,"polar_test","100.104.175.252","00000",26,0,77,2023-07-26 14:31:56,1690353116000000
"execute <unnamed>: select pg_constraint.conname as pk_name,pg_attribute.attname as colname,pg_type.typname as typename from pg_constraint  inner join pg_class on pg_constraint.conrelid = pg_class.oid inner join pg_attribute on pg_attribute.attrelid = pg_class.oid  and  pg_attribute.attnum = pg_constraint.conkey[1] inner join pg_type on pg_type.oid = pg_attribute.atttypid where pg_class.oid = $$hash_partitions_sales$$::regclass::oid and pg_constraint.contype='p' and pg_table_is_visible(pg_class.oid)","test1111",23930,"polar_test","100.104.175.252","00000",0,0,52,2023-07-26 14:31:56,1690353116000000
"execute <unnamed>: select i.relname as indname,i.relowner as indowner,idx.indrelid::regclass,am.amname as indam,idx.indkey,ARRAY(SELECT pg_get_indexdef(idx.indexrelid, k + 1, true) FROM generate_subscripts(idx.indkey, 1) as k ORDER BY k) as indkey_names, idx.indexprs IS NOT NULL as indexprs,idx.indpred IS NOT NULL as indpred  from pg_index as idx JOIN pg_class as i ON i.oid = idx.indexrelid JOIN pg_am as am ON i.relam = am.oid where idx.indrelid::regclass = $$hash_partitions_sales$$::regclass and idx.indisprimary = false order by indname","test1111",23930,"polar_test","100.104.175.252","00000",0,0,41,2023-07-26 14:31:56,1690353116000000
"execute <unnamed>: SELECT current_database()","test1111",23930,"polar_test","100.104.175.252","00000",0,0,13,2023-07-26 14:31:56,1690353116000000
"execute <unnamed>: select version()","test1111",23988,"polar_test","100.104.175.252","00000",0,0,38,2023-07-26 14:31:59,1690353119000000
"execute <unnamed>: SELECT pg_catalog.set_config(name,boot_val,'f') FROM pg_catalog.pg_settings WHERE name = 'nls_date_format'","test1111",23988,"polar_test","100.104.175.252","00000",0,0,1995,2023-07-26 14:31:59,1690353119000000
"execute <unnamed>: SELECT pg_catalog.set_config(name,boot_val,'f') FROM pg_catalog.pg_settings WHERE name = 'nls_timestamp_format'","test1111",23988,"polar_test","100.104.175.252","00000",0,0,1672,2023-07-26 14:31:59,1690353119000000
"execute <unnamed>: SELECT pg_catalog.set_config(name,boot_val,'f') FROM pg_catalog.pg_settings WHERE name = 'nls_timestamp_tz_format'","test1111",23988,"polar_test","100.104.175.252","00000",0,0,1610,2023-07-26 14:32:00,1690353120000000
"execute <unnamed>: SET extra_float_digits = 3","test1111",23988,"polar_test","100.104.175.252","00000",0,0,15,2023-07-26 14:32:00,1690353120000000
"execute <unnamed>: SET application_name = 'PolarDB JDBC Driver'","test1111",23988,"polar_test","100.104.175.252","00000",0,0,9,2023-07-26 14:32:00,1690353120000000
"execute <unnamed>: select version()","test1111",24008,"polar_test","100.104.175.250","00000",0,0,33,2023-07-26 14:32:01,1690353121000000
"execute <unnamed>: SELECT pg_catalog.set_config(name,boot_val,'f') FROM pg_catalog.pg_settings WHERE name = 'nls_date_format'","test1111",24008,"polar_test","100.104.175.250","00000",0,0,1669,2023-07-26 14:32:01,1690353121000000
"execute <unnamed>: SELECT pg_catalog.set_config(name,boot_val,'f') FROM pg_catalog.pg_settings WHERE name = 'nls_timestamp_format'","test1111",24008,"polar_test","100.104.175.250","00000",0,0,1413,2023-07-26 14:32:01,1690353121000000
"execute <unnamed>: SELECT pg_catalog.set_config(name,boot_val,'f') FROM pg_catalog.pg_settings WHERE name = 'nls_timestamp_tz_format'","test1111",24008,"polar_test","100.104.175.250","00000",0,0,1399,2023-07-26 14:32:01,1690353121000000
"execute <unnamed>: SET extra_float_digits = 3","test1111",24008,"polar_test","100.104.175.250","00000",0,0,20,2023-07-26 14:32:01,1690353121000000
"execute <unnamed>: SET application_name = 'PolarDB JDBC Driver'","test1111",24008,"polar_test","100.104.175.250","00000",0,0,20,2023-07-26 14:32:01,1690353121000000
"execute <unnamed>: select version()","test1111",23929,"polar_test","100.104.175.250","00000",0,0,35,2023-07-26 14:31:56,1690353116000000
"execute <unnamed>: SELECT pg_catalog.set_config(name,boot_val,'f') FROM pg_catalog.pg_settings WHERE name = 'nls_date_format'","test1111",23929,"polar_test","100.104.175.250","00000",0,0,1700,2023-07-26 14:31:56,1690353116000000
"execute <unnamed>: SELECT pg_catalog.set_config(name,boot_val,'f') FROM pg_catalog.pg_settings WHERE name = 'nls_timestamp_format'","test1111",23929,"polar_test","100.104.175.250","00000",0,0,1460,2023-07-26 14:31:56,1690353116000000
"execute <unnamed>: SELECT pg_catalog.set_config(name,boot_val,'f') FROM pg_catalog.pg_settings WHERE name = 'nls_timestamp_tz_format'","test1111",23929,"polar_test","100.104.175.250","00000",0,0,1379,2023-07-26 14:31:56,1690353116000000
"execute <unnamed>: SET extra_float_digits = 3","test1111",23929,"polar_test","100.104.175.250","00000",0,0,16,2023-07-26 14:31:56,1690353116000000
"execute <unnamed>: SET application_name = 'PolarDB JDBC Driver'","test1111",23929,"polar_test","100.104.175.250","00000",0,0,12,2023-07-26 14:31:56,1690353116000000
"execute <unnamed>: SET extra_float_digits = 3","test1111",23989,"polar_test","100.104.175.251","00000",0,0,37,2023-07-26 14:32:00,1690353120000000
"execute <unnamed>: SELECT pg_catalog.set_config(name,'YYYY-MM-DD HH24:MI:SS','f') FROM pg_catalog.pg_settings WHERE name = 'nls_date_format'","test1111",23989,"polar_test","100.104.175.251","00000",0,0,2090,2023-07-26 14:32:00,1690353120000000
"execute <unnamed>: SELECT pg_catalog.set_config(name,'YYYY-MM-DD HH24:MI:SS.FF','f') FROM pg_catalog.pg_settings WHERE name = 'nls_timestamp_format'","test1111",23989,"polar_test","100.104.175.251","00000",0,0,1467,2023-07-26 14:32:00,1690353120000000
"execute <unnamed>: SELECT pg_catalog.set_config(name,'YYYY-MM-DD HH24:MI:SS.FFOF','f') FROM pg_catalog.pg_settings WHERE name = 'nls_timestamp_tz_format'","test1111",23989,"polar_test","100.104.175.251","00000",0,0,1769,2023-07-26 14:32:00,1690353120000000
"execute <unnamed>: SET application_name = 'PolarDB2 JDBC Driver'","test1111",23989,"polar_test","100.104.175.251","00000",0,0,14,2023-07-26 14:32:00,1690353120000000
"execute <unnamed>: select 1","test1111",23989,"polar_test","100.104.175.251","00000",0,0,15,2023-07-26 14:32:00,1690353120000000
"execute <unnamed>: set search_path = "public"","test1111",23989,"polar_test","100.104.175.251","00000",0,0,16,2023-07-26 14:32:00,1690353120000000
"execute <unnamed>: select  c.relname table_name, 
   nsp.nspname schema_name,        cmt.description as description,
       c.reltuples::bigint num_rows,
       pg_total_relation_size(c.oid) / 1048576 storeCapacity,
       coalesce(pg_stat_get_last_analyze_time(c.oid),
                pg_stat_get_last_autoanalyze_time(c.oid)) createTime,
       coalesce(pg_stat_get_last_vacuum_time(c.oid),
                pg_stat_get_last_autovacuum_time(c.oid)) last_ddl_time,
       current_setting('server_encoding')::varchar  as encoding,
       CASE WHEN c.relkind = 'f' THEN 'FOREIGN' ELSE 'NORMAL' END as tableType
  from pg_namespace nsp, pg_class c
  left join pg_description cmt
    on c.oid = cmt.objoid
   and cmt.objsubid = 0
 where c.relkind in ('r', 'p', 'f')
   and c.relnamespace = nsp.oid
   and nsp.nspname = 'public'
 and c.relname in ('range_list')   order by c.relname","test1111",23989,"polar_test","100.104.175.251","00000",68,0,10711,2023-07-26 14:32:00,1690353120000000
"execute <unnamed>: SELECT c.oid, a.attnum, a.attname, c.relname, n.nspname, a.attnotnull OR (t.typtype = 'd' AND t.typnotnull), a.attidentity is not null OR pg_catalog.pg_get_expr(d.adbin, d.adrelid) LIKE '%nextval(%' FROM pg_catalog.pg_class c JOIN pg_catalog.pg_namespace n ON (c.relnamespace = n.oid) JOIN pg_catalog.pg_attribute a ON (c.oid = a.attrelid) JOIN pg_catalog.pg_type t ON (a.atttypid = t.oid) LEFT JOIN pg_catalog.pg_attrdef d ON (d.adrelid = a.attrelid AND d.adnum = a.attnum) JOIN (SELECT 1259 AS oid , 2 AS attnum UNION ALL SELECT 2615, 2 UNION ALL SELECT 2609, 4) vals ON (c.oid = vals.oid AND a.attnum = vals.attnum)","test1111",23989,"polar_test","100.104.175.251","00000",24,0,76,2023-07-26 14:32:00,1690353120000000
"execute <unnamed>: select schemaname,tablename,tableowner,tablespace from pg_tables where schemaname = 'public' and tablename = 'range_list'","test1111",23989,"polar_test","100.104.175.251","00000",8,0,55,2023-07-26 14:32:00,1690353120000000
"execute <unnamed>: select version()","test1111",23989,"polar_test","100.104.175.251","00000",0,0,15,2023-07-26 14:32:00,1690353120000000
"execute <unnamed>: SELECT c.oid, c.relhasrules,c.relhastriggers,c.relpersistence,c.reloptions, com.description from pg_class c INNER JOIN pg_namespace n ON c.relnamespace = n.oid left join pg_description com on objsubid = 0 and com.objoid = c.oid where  n.nspname = 'public' and c.relname = 'range_list'","test1111",23989,"polar_test","100.104.175.251","00000",6,0,44,2023-07-26 14:32:00,1690353120000000
"execute <unnamed>: select distinct ordinal_position,pg_catalog.col_description(b.oid,ordinal_position)  as column_comment,table_catalog,table_schema,table_name,column_name,attinhcount,data_type,udt_name,is_nullable,column_default,numeric_scale,numeric_precision,collation_schema,collation_name, format_type(a.atttypid, a.atttypmod) as view_type,indisprimary from information_schema.Columns c inner join  pg_attribute a ON (a.attname = c.column_name) left JOIN pg_class b ON (a.attrelid = b.oid and b.relname = c.table_name) left jOIN pg_namespace n ON (n.oid = b.relnamespace and n.nspname = c.table_schema) left join pg_index i on a.attnum = any(i.indkey) and i.indrelid = b.oid where table_schema = 'public' and table_name = 'range_list' and attrelid = $$range_list$$::regclass::oid order by ordinal_position","test1111",23989,"polar_test","100.104.175.251","00000",217,0,1144,2023-07-26 14:32:00,1690353120000000
"execute <unnamed>: select c.column_name from information_schema.table_constraints s left join  information_schema.constraint_column_usage c on s.constraint_name = c.constraint_name and s.constraint_schema = c.constraint_schema where s.table_schema = 'public' and s.table_name =  'range_list' and s.constraint_type = 'PRIMARY KEY'","test1111",23989,"polar_test","100.104.175.251","00000",3,0,30,2023-07-26 14:32:00,1690353120000000
"execute <unnamed>: SELECT c1.relnamespace as childnamespaceoid,inh.inhrelid as childoid,n1.nspname as childnamespacename,c1.relname AS childname, c2.relnamespace as parentnamespaceoid,inh.inhparent as parentoid,n2.nspname as paretnamespacename,c2.relname AS parentname FROM pg_inherits inh JOIN pg_class c1 ON (inh.inhrelid=c1.oid) JOIN pg_class  c2 ON (inh.inhparent=c2.oid) join pg_namespace n1 on c1.relnamespace = n1.oid join pg_namespace n2 on c2.relnamespace = n2.oid where n1.nspname = 'public' and c1.relname = 'range_list'","test1111",23989,"polar_test","100.104.175.251","00000",33,0,62,2023-07-26 14:32:00,1690353120000000
"execute <unnamed>: select version()","test1111",23989,"polar_test","100.104.175.251","00000",0,0,13,2023-07-26 14:32:00,1690353120000000
"execute <unnamed>: select con.conname as "constraint_name",con.nspname as "child_schema",con.relname as "child_table",att2.attname as "child_column",ns.nspname as "parent_schema",cl.relname as "parent_table",att.attname as "parent_column", con.confdeltype,con.confupdtype,con.condeferrable,con.condeferred,con.convalidated,con.confmatchtype,des.description from (select unnest(con1.conkey) as "parent",unnest(con1.confkey) as "child", con1.oid as "constranit_oid" ,con1.confdeltype,con1.confupdtype,con1.condeferrable,con1.condeferred,con1.convalidated,con1.confmatchtype,con1.confrelid,con1.conrelid,cl.relname,cl.relnamespace,ns.nspname,con1.conname from pg_class cl join pg_namespace ns on cl.relnamespace = ns.oid join pg_constraint con1 on con1.conrelid = cl.oid where ns.nspname = 'public' and cl.relname ='range_list' and con1.contype = 'f') con join pg_attribute att on att.attrelid = con.confrelid and att.attnum = con.child join pg_class cl on cl.oid = con.confrelid join pg_namespace ns on cl.relnamespace = ns.oid join pg_attribute att2 on att2.attrelid = con.conrelid and att2.attnum = con.parent left join pg_description des on con.constranit_oid = des.objoid order by con.conname","test1111",23989,"polar_test","100.104.175.251","00000",6,0,48,2023-07-26 14:32:00,1690353120000000
"execute <unnamed>: SELECT DISTINCT ON(cls.relname) cls.oid, cls.relname as idxname, indrelid, indkey, indisclustered, indisvalid, indisunique, indisprimary, n.nspname,indnatts, cls.reltablespace AS spcoid, spcname, tab.relname as tabname, indclass, con.oid AS conoid,desp.description,pg_get_expr(indpred, indrelid, true) as indconstraint, contype, condeferrable, condeferred, amname, substring(array_to_string(cls.reloptions, ',') from 'fillfactor=([0-9]*)') AS fillfactor FROM pg_index idx JOIN pg_class cls ON cls.oid=indexrelid JOIN pg_class tab ON tab.oid=indrelid LEFT OUTER JOIN pg_tablespace ta on ta.oid=cls.reltablespace JOIN pg_namespace n ON n.oid=tab.relnamespace JOIN pg_am am ON am.oid=cls.relam LEFT JOIN pg_depend dep ON (dep.classid = cls.tableoid AND dep.objid = cls.oid AND dep.refobjsubid = '0' AND dep.refclassid=(SELECT oid FROM pg_class WHERE relname='pg_constraint') AND dep.deptype='i') LEFT OUTER JOIN pg_constraint con ON (con.tableoid = dep.refclassid AND con.oid = dep.refobjid) LEFT OUTER JOIN pg_description des ON (des.objoid=cls.oid AND des.classoid='pg_class'::regclass) LEFT OUTER JOIN pg_description desp ON (desp.objoid=con.oid AND desp.objsubid = 0 AND desp.classoid='pg_constraint'::regclass) WHERE n.nspname = 'public'  and tab.relname ='range_list'  AND contype='x' ORDER BY cls.relname","test1111",23989,"polar_test","100.104.175.251","00000",3,0,40,2023-07-26 14:32:00,1690353120000000
"execute <unnamed>: SELECT DISTINCT ON(cls.relname) cls.oid, cls.relname as idxname, indrelid, indkey, indisclustered, indisvalid, indisunique, indisprimary, n.nspname,indnatts, cls.reltablespace AS spcoid, spcname, tab.relname as tabname, indclass, con.oid AS conoid, desp.description  AS description,pg_get_expr(indpred, indrelid, true) as indconstraint, contype, condeferrable, condeferred, amname, substring(array_to_string(cls.reloptions, ',') from 'fillfactor=([0-9]*)') AS fillfactor  FROM pg_index idx JOIN pg_class cls ON cls.oid=indexrelid JOIN pg_class tab ON tab.oid=indrelid LEFT OUTER JOIN pg_tablespace ta on ta.oid=cls.reltablespace JOIN pg_namespace n ON n.oid=tab.relnamespace JOIN pg_am am ON am.oid=cls.relam LEFT JOIN pg_depend dep ON (dep.classid = cls.tableoid AND dep.objid = cls.oid AND dep.refobjsubid = '0' AND dep.refclassid=(SELECT oid FROM pg_class WHERE relname='pg_constraint') AND dep.deptype='i') LEFT OUTER JOIN pg_constraint con ON (con.tableoid = dep.refclassid AND con.oid = dep.refobjid) LEFT OUTER JOIN pg_description desp ON (desp.objoid=con.oid AND desp.objsubid = 0 AND desp.classoid='pg_constraint'::regclass) WHERE n.nspname ='public' and tab.relname = 'range_list'  AND contype='u' ORDER BY cls.relname","test1111",23989,"polar_test","100.104.175.251","00000",3,0,38,2023-07-26 14:32:00,1690353120000000
"execute <unnamed>: select version()","test1111",23989,"polar_test","100.104.175.251","00000",0,0,13,2023-07-26 14:32:00,1690353120000000
"execute <unnamed>: SELECT 'TABLE' AS objectkind, c.oid, conname, relname, nspname, description, pg_get_expr(conbin, conrelid, true) as consrc , connoinherit, convalidated  FROM pg_constraint c  JOIN pg_class cl ON cl.oid=conrelid JOIN pg_namespace nl ON nl.oid=relnamespace LEFT OUTER JOIN pg_description des ON (des.objoid=c.oid AND des.classoid='pg_constraint'::regclass) WHERE contype = 'c' AND nspname = 'public' and relname = 'range_list' UNION SELECT 'DOMAIN' AS objectkind, c.oid, conname, typname as relname, nspname, description,      regexp_replace(pg_get_constraintdef(c.oid, true), E'CHECK \((.*)\).*', E'\1') as consrc, connoinherit, convalidated  FROM pg_constraint c  JOIN pg_type t ON t.oid=contypid  JOIN pg_namespace nl ON nl.oid=typnamespace  LEFT OUTER JOIN pg_description des ON (des.objoid=t.oid AND des.classoid='pg_constraint'::regclass) WHERE contype = 'c' AND nspname = 'public' and typname = 'range_list' ORDER BY conname","test1111",23989,"polar_test","100.104.175.251","00000",27,0,91,2023-07-26 14:32:00,1690353120000000
"execute <unnamed>: select pg_constraint.conname as pk_name,pg_attribute.attname as colname,pg_type.typname as typename from pg_constraint  inner join pg_class on pg_constraint.conrelid = pg_class.oid inner join pg_attribute on pg_attribute.attrelid = pg_class.oid  and  pg_attribute.attnum = pg_constraint.conkey[1] inner join pg_type on pg_type.oid = pg_attribute.atttypid where pg_class.oid = $$range_list$$::regclass::oid and pg_constraint.contype='p' and pg_table_is_visible(pg_class.oid)","test1111",23989,"polar_test","100.104.175.251","00000",0,0,47,2023-07-26 14:32:00,1690353120000000
"execute <unnamed>: select i.relname as indname,i.relowner as indowner,idx.indrelid::regclass,am.amname as indam,idx.indkey,ARRAY(SELECT pg_get_indexdef(idx.indexrelid, k + 1, true) FROM generate_subscripts(idx.indkey, 1) as k ORDER BY k) as indkey_names, idx.indexprs IS NOT NULL as indexprs,idx.indpred IS NOT NULL as indpred  from pg_index as idx JOIN pg_class as i ON i.oid = idx.indexrelid JOIN pg_am as am ON i.relam = am.oid where idx.indrelid::regclass = $$range_list$$::regclass and idx.indisprimary = false order by indname","test1111",23989,"polar_test","100.104.175.251","00000",0,0,57,2023-07-26 14:32:00,1690353120000000
"execute <unnamed>: SELECT current_database()","test1111",23989,"polar_test","100.104.175.251","00000",0,0,13,2023-07-26 14:32:00,1690353120000000
"execute <unnamed>: SET extra_float_digits = 3","test1111",24009,"polar_test","100.104.175.250","00000",0,0,36,2023-07-26 14:32:01,1690353121000000
"execute <unnamed>: SELECT pg_catalog.set_config(name,'YYYY-MM-DD HH24:MI:SS','f') FROM pg_catalog.pg_settings WHERE name = 'nls_date_format'","test1111",24009,"polar_test","100.104.175.250","00000",0,0,1766,2023-07-26 14:32:01,1690353121000000
"execute <unnamed>: SELECT pg_catalog.set_config(name,'YYYY-MM-DD HH24:MI:SS.FF','f') FROM pg_catalog.pg_settings WHERE name = 'nls_timestamp_format'","test1111",24009,"polar_test","100.104.175.250","00000",0,0,1383,2023-07-26 14:32:01,1690353121000000
"execute <unnamed>: SELECT pg_catalog.set_config(name,'YYYY-MM-DD HH24:MI:SS.FFOF','f') FROM pg_catalog.pg_settings WHERE name = 'nls_timestamp_tz_format'","test1111",24009,"polar_test","100.104.175.250","00000",0,0,1816,2023-07-26 14:32:01,1690353121000000
"execute <unnamed>: SET application_name = 'PolarDB2 JDBC Driver'","test1111",24009,"polar_test","100.104.175.250","00000",0,0,12,2023-07-26 14:32:01,1690353121000000
"execute <unnamed>: select 1","test1111",24009,"polar_test","100.104.175.250","00000",0,0,14,2023-07-26 14:32:01,1690353121000000
"execute <unnamed>: set search_path = "public"","test1111",24009,"polar_test","100.104.175.250","00000",0,0,19,2023-07-26 14:32:01,1690353121000000
"execute <unnamed>: select  c.relname table_name, 
   nsp.nspname schema_name,        cmt.description as description,
       c.reltuples::bigint num_rows,
       pg_total_relation_size(c.oid) / 1048576 storeCapacity,
       coalesce(pg_stat_get_last_analyze_time(c.oid),
                pg_stat_get_last_autoanalyze_time(c.oid)) createTime,
       coalesce(pg_stat_get_last_vacuum_time(c.oid),
                pg_stat_get_last_autovacuum_time(c.oid)) last_ddl_time,
       current_setting('server_encoding')::varchar  as encoding,
       CASE WHEN c.relkind = 'f' THEN 'FOREIGN' ELSE 'NORMAL' END as tableType
  from pg_namespace nsp, pg_class c
  left join pg_description cmt
    on c.oid = cmt.objoid
   and cmt.objsubid = 0
 where c.relkind in ('r', 'p', 'f')
   and c.relnamespace = nsp.oid
   and nsp.nspname = 'public'
 and c.relname in ('range_range')   order by c.relname","test1111",24009,"polar_test","100.104.175.250","00000",68,0,10659,2023-07-26 14:32:01,1690353121000000
"execute <unnamed>: SELECT c.oid, a.attnum, a.attname, c.relname, n.nspname, a.attnotnull OR (t.typtype = 'd' AND t.typnotnull), a.attidentity is not null OR pg_catalog.pg_get_expr(d.adbin, d.adrelid) LIKE '%nextval(%' FROM pg_catalog.pg_class c JOIN pg_catalog.pg_namespace n ON (c.relnamespace = n.oid) JOIN pg_catalog.pg_attribute a ON (c.oid = a.attrelid) JOIN pg_catalog.pg_type t ON (a.atttypid = t.oid) LEFT JOIN pg_catalog.pg_attrdef d ON (d.adrelid = a.attrelid AND d.adnum = a.attnum) JOIN (SELECT 1259 AS oid , 2 AS attnum UNION ALL SELECT 2615, 2 UNION ALL SELECT 2609, 4) vals ON (c.oid = vals.oid AND a.attnum = vals.attnum)","test1111",24009,"polar_test","100.104.175.250","00000",24,0,66,2023-07-26 14:32:01,1690353121000000
"execute <unnamed>: select schemaname,tablename,tableowner,tablespace from pg_tables where schemaname = 'public' and tablename = 'range_range'","test1111",24009,"polar_test","100.104.175.250","00000",8,0,30,2023-07-26 14:32:01,1690353121000000
"execute <unnamed>: select version()","test1111",24009,"polar_test","100.104.175.250","00000",0,0,12,2023-07-26 14:32:01,1690353121000000
"execute <unnamed>: SELECT c.oid, c.relhasrules,c.relhastriggers,c.relpersistence,c.reloptions, com.description from pg_class c INNER JOIN pg_namespace n ON c.relnamespace = n.oid left join pg_description com on objsubid = 0 and com.objoid = c.oid where  n.nspname = 'public' and c.relname = 'range_range'","test1111",24009,"polar_test","100.104.175.250","00000",6,0,35,2023-07-26 14:32:01,1690353121000000
"execute <unnamed>: select distinct ordinal_position,pg_catalog.col_description(b.oid,ordinal_position)  as column_comment,table_catalog,table_schema,table_name,column_name,attinhcount,data_type,udt_name,is_nullable,column_default,numeric_scale,numeric_precision,collation_schema,collation_name, format_type(a.atttypid, a.atttypmod) as view_type,indisprimary from information_schema.Columns c inner join  pg_attribute a ON (a.attname = c.column_name) left JOIN pg_class b ON (a.attrelid = b.oid and b.relname = c.table_name) left jOIN pg_namespace n ON (n.oid = b.relnamespace and n.nspname = c.table_schema) left join pg_index i on a.attnum = any(i.indkey) and i.indrelid = b.oid where table_schema = 'public' and table_name = 'range_range' and attrelid = $$range_range$$::regclass::oid order by ordinal_position","test1111",24009,"polar_test","100.104.175.250","00000",229,0,1043,2023-07-26 14:32:01,1690353121000000
"execute <unnamed>: select c.column_name from information_schema.table_constraints s left join  information_schema.constraint_column_usage c on s.constraint_name = c.constraint_name and s.constraint_schema = c.constraint_schema where s.table_schema = 'public' and s.table_name =  'range_range' and s.constraint_type = 'PRIMARY KEY'","test1111",24009,"polar_test","100.104.175.250","00000",3,0,24,2023-07-26 14:32:01,1690353121000000
"execute <unnamed>: SELECT c1.relnamespace as childnamespaceoid,inh.inhrelid as childoid,n1.nspname as childnamespacename,c1.relname AS childname, c2.relnamespace as parentnamespaceoid,inh.inhparent as parentoid,n2.nspname as paretnamespacename,c2.relname AS parentname FROM pg_inherits inh JOIN pg_class c1 ON (inh.inhrelid=c1.oid) JOIN pg_class  c2 ON (inh.inhparent=c2.oid) join pg_namespace n1 on c1.relnamespace = n1.oid join pg_namespace n2 on c2.relnamespace = n2.oid where n1.nspname = 'public' and c1.relname = 'range_range'","test1111",24009,"polar_test","100.104.175.250","00000",57,0,82,2023-07-26 14:32:02,1690353122000000
"execute <unnamed>: select version()","test1111",24009,"polar_test","100.104.175.250","00000",0,0,10,2023-07-26 14:32:02,1690353122000000
"execute <unnamed>: select con.conname as "constraint_name",con.nspname as "child_schema",con.relname as "child_table",att2.attname as "child_column",ns.nspname as "parent_schema",cl.relname as "parent_table",att.attname as "parent_column", con.confdeltype,con.confupdtype,con.condeferrable,con.condeferred,con.convalidated,con.confmatchtype,des.description from (select unnest(con1.conkey) as "parent",unnest(con1.confkey) as "child", con1.oid as "constranit_oid" ,con1.confdeltype,con1.confupdtype,con1.condeferrable,con1.condeferred,con1.convalidated,con1.confmatchtype,con1.confrelid,con1.conrelid,cl.relname,cl.relnamespace,ns.nspname,con1.conname from pg_class cl join pg_namespace ns on cl.relnamespace = ns.oid join pg_constraint con1 on con1.conrelid = cl.oid where ns.nspname = 'public' and cl.relname ='range_range' and con1.contype = 'f') con join pg_attribute att on att.attrelid = con.confrelid and att.attnum = con.child join pg_class cl on cl.oid = con.confrelid join pg_namespace ns on cl.relnamespace = ns.oid join pg_attribute att2 on att2.attrelid = con.conrelid and att2.attnum = con.parent left join pg_description des on con.constranit_oid = des.objoid order by con.conname","test1111",24009,"polar_test","100.104.175.250","00000",6,0,35,2023-07-26 14:32:02,1690353122000000
"execute <unnamed>: SELECT DISTINCT ON(cls.relname) cls.oid, cls.relname as idxname, indrelid, indkey, indisclustered, indisvalid, indisunique, indisprimary, n.nspname,indnatts, cls.reltablespace AS spcoid, spcname, tab.relname as tabname, indclass, con.oid AS conoid,desp.description,pg_get_expr(indpred, indrelid, true) as indconstraint, contype, condeferrable, condeferred, amname, substring(array_to_string(cls.reloptions, ',') from 'fillfactor=([0-9]*)') AS fillfactor FROM pg_index idx JOIN pg_class cls ON cls.oid=indexrelid JOIN pg_class tab ON tab.oid=indrelid LEFT OUTER JOIN pg_tablespace ta on ta.oid=cls.reltablespace JOIN pg_namespace n ON n.oid=tab.relnamespace JOIN pg_am am ON am.oid=cls.relam LEFT JOIN pg_depend dep ON (dep.classid = cls.tableoid AND dep.objid = cls.oid AND dep.refobjsubid = '0' AND dep.refclassid=(SELECT oid FROM pg_class WHERE relname='pg_constraint') AND dep.deptype='i') LEFT OUTER JOIN pg_constraint con ON (con.tableoid = dep.refclassid AND con.oid = dep.refobjid) LEFT OUTER JOIN pg_description des ON (des.objoid=cls.oid AND des.classoid='pg_class'::regclass) LEFT OUTER JOIN pg_description desp ON (desp.objoid=con.oid AND desp.objsubid = 0 AND desp.classoid='pg_constraint'::regclass) WHERE n.nspname = 'public'  and tab.relname ='range_range'  AND contype='x' ORDER BY cls.relname","test1111",24009,"polar_test","100.104.175.250","00000",3,0,34,2023-07-26 14:32:02,1690353122000000
"execute <unnamed>: SELECT DISTINCT ON(cls.relname) cls.oid, cls.relname as idxname, indrelid, indkey, indisclustered, indisvalid, indisunique, indisprimary, n.nspname,indnatts, cls.reltablespace AS spcoid, spcname, tab.relname as tabname, indclass, con.oid AS conoid, desp.description  AS description,pg_get_expr(indpred, indrelid, true) as indconstraint, contype, condeferrable, condeferred, amname, substring(array_to_string(cls.reloptions, ',') from 'fillfactor=([0-9]*)') AS fillfactor  FROM pg_index idx JOIN pg_class cls ON cls.oid=indexrelid JOIN pg_class tab ON tab.oid=indrelid LEFT OUTER JOIN pg_tablespace ta on ta.oid=cls.reltablespace JOIN pg_namespace n ON n.oid=tab.relnamespace JOIN pg_am am ON am.oid=cls.relam LEFT JOIN pg_depend dep ON (dep.classid = cls.tableoid AND dep.objid = cls.oid AND dep.refobjsubid = '0' AND dep.refclassid=(SELECT oid FROM pg_class WHERE relname='pg_constraint') AND dep.deptype='i') LEFT OUTER JOIN pg_constraint con ON (con.tableoid = dep.refclassid AND con.oid = dep.refobjid) LEFT OUTER JOIN pg_description desp ON (desp.objoid=con.oid AND desp.objsubid = 0 AND desp.classoid='pg_constraint'::regclass) WHERE n.nspname ='public' and tab.relname = 'range_range'  AND contype='u' ORDER BY cls.relname","test1111",24009,"polar_test","100.104.175.250","00000",3,0,35,2023-07-26 14:32:02,1690353122000000
"execute <unnamed>: select version()","test1111",24009,"polar_test","100.104.175.250","00000",0,0,31,2023-07-26 14:32:02,1690353122000000
"execute <unnamed>: SELECT 'TABLE' AS objectkind, c.oid, conname, relname, nspname, description, pg_get_expr(conbin, conrelid, true) as consrc , connoinherit, convalidated  FROM pg_constraint c  JOIN pg_class cl ON cl.oid=conrelid JOIN pg_namespace nl ON nl.oid=relnamespace LEFT OUTER JOIN pg_description des ON (des.objoid=c.oid AND des.classoid='pg_constraint'::regclass) WHERE contype = 'c' AND nspname = 'public' and relname = 'range_range' UNION SELECT 'DOMAIN' AS objectkind, c.oid, conname, typname as relname, nspname, description,      regexp_replace(pg_get_constraintdef(c.oid, true), E'CHECK \((.*)\).*', E'\1') as consrc, connoinherit, convalidated  FROM pg_constraint c  JOIN pg_type t ON t.oid=contypid  JOIN pg_namespace nl ON nl.oid=typnamespace  LEFT OUTER JOIN pg_description des ON (des.objoid=t.oid AND des.classoid='pg_constraint'::regclass) WHERE contype = 'c' AND nspname = 'public' and typname = 'range_range' ORDER BY conname","test1111",24009,"polar_test","100.104.175.250","00000",27,0,81,2023-07-26 14:32:02,1690353122000000
"execute <unnamed>: select pg_constraint.conname as pk_name,pg_attribute.attname as colname,pg_type.typname as typename from pg_constraint  inner join pg_class on pg_constraint.conrelid = pg_class.oid inner join pg_attribute on pg_attribute.attrelid = pg_class.oid  and  pg_attribute.attnum = pg_constraint.conkey[1] inner join pg_type on pg_type.oid = pg_attribute.atttypid where pg_class.oid = $$range_range$$::regclass::oid and pg_constraint.contype='p' and pg_table_is_visible(pg_class.oid)","test1111",24009,"polar_test","100.104.175.250","00000",0,0,39,2023-07-26 14:32:02,1690353122000000
"execute <unnamed>: select i.relname as indname,i.relowner as indowner,idx.indrelid::regclass,am.amname as indam,idx.indkey,ARRAY(SELECT pg_get_indexdef(idx.indexrelid, k + 1, true) FROM generate_subscripts(idx.indkey, 1) as k ORDER BY k) as indkey_names, idx.indexprs IS NOT NULL as indexprs,idx.indpred IS NOT NULL as indpred  from pg_index as idx JOIN pg_class as i ON i.oid = idx.indexrelid JOIN pg_am as am ON i.relam = am.oid where idx.indrelid::regclass = $$range_range$$::regclass and idx.indisprimary = false order by indname","test1111",24009,"polar_test","100.104.175.250","00000",0,0,59,2023-07-26 14:32:02,1690353122000000
"execute <unnamed>: SELECT current_database()","test1111",24009,"polar_test","100.104.175.250","00000",0,0,11,2023-07-26 14:32:02,1690353122000000
"execute <unnamed>: select version()","test1111",24041,"polar_test","100.104.175.252","00000",0,0,33,2023-07-26 14:32:04,1690353124000000
"execute <unnamed>: SELECT pg_catalog.set_config(name,boot_val,'f') FROM pg_catalog.pg_settings WHERE name = 'nls_date_format'","test1111",24041,"polar_test","100.104.175.252","00000",0,0,2315,2023-07-26 14:32:04,1690353124000000
"execute <unnamed>: SELECT pg_catalog.set_config(name,boot_val,'f') FROM pg_catalog.pg_settings WHERE name = 'nls_timestamp_format'","test1111",24041,"polar_test","100.104.175.252","00000",0,0,1457,2023-07-26 14:32:04,1690353124000000
"execute <unnamed>: SELECT pg_catalog.set_config(name,boot_val,'f') FROM pg_catalog.pg_settings WHERE name = 'nls_timestamp_tz_format'","test1111",24041,"polar_test","100.104.175.252","00000",0,0,1447,2023-07-26 14:32:04,1690353124000000
"execute <unnamed>: SET extra_float_digits = 3","test1111",24041,"polar_test","100.104.175.252","00000",0,0,16,2023-07-26 14:32:04,1690353124000000
"execute <unnamed>: SET application_name = 'PolarDB JDBC Driver'","test1111",24041,"polar_test","100.104.175.252","00000",0,0,13,2023-07-26 14:32:04,1690353124000000
"execute <unnamed>: SET extra_float_digits = 3","test1111",24054,"polar_test","100.104.175.10","00000",0,0,40,2023-07-26 14:32:04,1690353124000000
"execute <unnamed>: SELECT pg_catalog.set_config(name,'YYYY-MM-DD HH24:MI:SS','f') FROM pg_catalog.pg_settings WHERE name = 'nls_date_format'","test1111",24054,"polar_test","100.104.175.10","00000",0,0,2273,2023-07-26 14:32:04,1690353124000000
"execute <unnamed>: SELECT pg_catalog.set_config(name,'YYYY-MM-DD HH24:MI:SS.FF','f') FROM pg_catalog.pg_settings WHERE name = 'nls_timestamp_format'","test1111",24054,"polar_test","100.104.175.10","00000",0,0,1893,2023-07-26 14:32:04,1690353124000000
"execute <unnamed>: SELECT pg_catalog.set_config(name,'YYYY-MM-DD HH24:MI:SS.FFOF','f') FROM pg_catalog.pg_settings WHERE name = 'nls_timestamp_tz_format'","test1111",24054,"polar_test","100.104.175.10","00000",0,0,1876,2023-07-26 14:32:04,1690353124000000
"execute <unnamed>: SET application_name = 'PolarDB2 JDBC Driver'","test1111",24054,"polar_test","100.104.175.10","00000",0,0,13,2023-07-26 14:32:04,1690353124000000
"execute <unnamed>: select 1","test1111",24054,"polar_test","100.104.175.10","00000",0,0,13,2023-07-26 14:32:04,1690353124000000
"execute <unnamed>: set search_path = "public"","test1111",24054,"polar_test","100.104.175.10","00000",0,0,14,2023-07-26 14:32:04,1690353124000000
"execute <unnamed>: select  c.relname table_name, 
   nsp.nspname schema_name,        cmt.description as description,
       c.reltuples::bigint num_rows,
       pg_total_relation_size(c.oid) / 1048576 storeCapacity,
       coalesce(pg_stat_get_last_analyze_time(c.oid),
                pg_stat_get_last_autoanalyze_time(c.oid)) createTime,
       coalesce(pg_stat_get_last_vacuum_time(c.oid),
                pg_stat_get_last_autovacuum_time(c.oid)) last_ddl_time,
       current_setting('server_encoding')::varchar  as encoding,
       CASE WHEN c.relkind = 'f' THEN 'FOREIGN' ELSE 'NORMAL' END as tableType
  from pg_namespace nsp, pg_class c
  left join pg_description cmt
    on c.oid = cmt.objoid
   and cmt.objsubid = 0
 where c.relkind in ('r', 'p', 'f')
   and c.relnamespace = nsp.oid
   and nsp.nspname = 'public'
 and c.relname in ('range_hash')   order by c.relname","test1111",24054,"polar_test","100.104.175.10","00000",65,0,10810,2023-07-26 14:32:04,1690353124000000
"execute <unnamed>: SELECT c.oid, a.attnum, a.attname, c.relname, n.nspname, a.attnotnull OR (t.typtype = 'd' AND t.typnotnull), a.attidentity is not null OR pg_catalog.pg_get_expr(d.adbin, d.adrelid) LIKE '%nextval(%' FROM pg_catalog.pg_class c JOIN pg_catalog.pg_namespace n ON (c.relnamespace = n.oid) JOIN pg_catalog.pg_attribute a ON (c.oid = a.attrelid) JOIN pg_catalog.pg_type t ON (a.atttypid = t.oid) LEFT JOIN pg_catalog.pg_attrdef d ON (d.adrelid = a.attrelid AND d.adnum = a.attnum) JOIN (SELECT 1259 AS oid , 2 AS attnum UNION ALL SELECT 2615, 2 UNION ALL SELECT 2609, 4) vals ON (c.oid = vals.oid AND a.attnum = vals.attnum)","test1111",24054,"polar_test","100.104.175.10","00000",24,0,89,2023-07-26 14:32:04,1690353124000000
"execute <unnamed>: select schemaname,tablename,tableowner,tablespace from pg_tables where schemaname = 'public' and tablename = 'range_hash'","test1111",24054,"polar_test","100.104.175.10","00000",7,0,31,2023-07-26 14:32:04,1690353124000000
"execute <unnamed>: select version()","test1111",24054,"polar_test","100.104.175.10","00000",0,0,12,2023-07-26 14:32:04,1690353124000000
"execute <unnamed>: SELECT c.oid, c.relhasrules,c.relhastriggers,c.relpersistence,c.reloptions, com.description from pg_class c INNER JOIN pg_namespace n ON c.relnamespace = n.oid left join pg_description com on objsubid = 0 and com.objoid = c.oid where  n.nspname = 'public' and c.relname = 'range_hash'","test1111",24054,"polar_test","100.104.175.10","00000",5,0,39,2023-07-26 14:32:04,1690353124000000
"execute <unnamed>: select distinct ordinal_position,pg_catalog.col_description(b.oid,ordinal_position)  as column_comment,table_catalog,table_schema,table_name,column_name,attinhcount,data_type,udt_name,is_nullable,column_default,numeric_scale,numeric_precision,collation_schema,collation_name, format_type(a.atttypid, a.atttypmod) as view_type,indisprimary from information_schema.Columns c inner join  pg_attribute a ON (a.attname = c.column_name) left JOIN pg_class b ON (a.attrelid = b.oid and b.relname = c.table_name) left jOIN pg_namespace n ON (n.oid = b.relnamespace and n.nspname = c.table_schema) left join pg_index i on a.attnum = any(i.indkey) and i.indrelid = b.oid where table_schema = 'public' and table_name = 'range_hash' and attrelid = $$range_hash$$::regclass::oid order by ordinal_position","test1111",24054,"polar_test","100.104.175.10","00000",211,0,1320,2023-07-26 14:32:04,1690353124000000
"execute <unnamed>: select c.column_name from information_schema.table_constraints s left join  information_schema.constraint_column_usage c on s.constraint_name = c.constraint_name and s.constraint_schema = c.constraint_schema where s.table_schema = 'public' and s.table_name =  'range_hash' and s.constraint_type = 'PRIMARY KEY'","test1111",24054,"polar_test","100.104.175.10","00000",2,0,26,2023-07-26 14:32:04,1690353124000000
"execute <unnamed>: SELECT c1.relnamespace as childnamespaceoid,inh.inhrelid as childoid,n1.nspname as childnamespacename,c1.relname AS childname, c2.relnamespace as parentnamespaceoid,inh.inhparent as parentoid,n2.nspname as paretnamespacename,c2.relname AS parentname FROM pg_inherits inh JOIN pg_class c1 ON (inh.inhrelid=c1.oid) JOIN pg_class  c2 ON (inh.inhparent=c2.oid) join pg_namespace n1 on c1.relnamespace = n1.oid join pg_namespace n2 on c2.relnamespace = n2.oid where n1.nspname = 'public' and c1.relname = 'range_hash'","test1111",24054,"polar_test","100.104.175.10","00000",2,0,27,2023-07-26 14:32:04,1690353124000000
"execute <unnamed>: select version()","test1111",24054,"polar_test","100.104.175.10","00000",0,0,12,2023-07-26 14:32:04,1690353124000000
"execute <unnamed>: select con.conname as "constraint_name",con.nspname as "child_schema",con.relname as "child_table",att2.attname as "child_column",ns.nspname as "parent_schema",cl.relname as "parent_table",att.attname as "parent_column", con.confdeltype,con.confupdtype,con.condeferrable,con.condeferred,con.convalidated,con.confmatchtype,des.description from (select unnest(con1.conkey) as "parent",unnest(con1.confkey) as "child", con1.oid as "constranit_oid" ,con1.confdeltype,con1.confupdtype,con1.condeferrable,con1.condeferred,con1.convalidated,con1.confmatchtype,con1.confrelid,con1.conrelid,cl.relname,cl.relnamespace,ns.nspname,con1.conname from pg_class cl join pg_namespace ns on cl.relnamespace = ns.oid join pg_constraint con1 on con1.conrelid = cl.oid where ns.nspname = 'public' and cl.relname ='range_hash' and con1.contype = 'f') con join pg_attribute att on att.attrelid = con.confrelid and att.attnum = con.child join pg_class cl on cl.oid = con.confrelid join pg_namespace ns on cl.relnamespace = ns.oid join pg_attribute att2 on att2.attrelid = con.conrelid and att2.attnum = con.parent left join pg_description des on con.constranit_oid = des.objoid order by con.conname","test1111",24054,"polar_test","100.104.175.10","00000",5,0,38,2023-07-26 14:32:04,1690353124000000
"execute <unnamed>: SELECT DISTINCT ON(cls.relname) cls.oid, cls.relname as idxname, indrelid, indkey, indisclustered, indisvalid, indisunique, indisprimary, n.nspname,indnatts, cls.reltablespace AS spcoid, spcname, tab.relname as tabname, indclass, con.oid AS conoid,desp.description,pg_get_expr(indpred, indrelid, true) as indconstraint, contype, condeferrable, condeferred, amname, substring(array_to_string(cls.reloptions, ',') from 'fillfactor=([0-9]*)') AS fillfactor FROM pg_index idx JOIN pg_class cls ON cls.oid=indexrelid JOIN pg_class tab ON tab.oid=indrelid LEFT OUTER JOIN pg_tablespace ta on ta.oid=cls.reltablespace JOIN pg_namespace n ON n.oid=tab.relnamespace JOIN pg_am am ON am.oid=cls.relam LEFT JOIN pg_depend dep ON (dep.classid = cls.tableoid AND dep.objid = cls.oid AND dep.refobjsubid = '0' AND dep.refclassid=(SELECT oid FROM pg_class WHERE relname='pg_constraint') AND dep.deptype='i') LEFT OUTER JOIN pg_constraint con ON (con.tableoid = dep.refclassid AND con.oid = dep.refobjid) LEFT OUTER JOIN pg_description des ON (des.objoid=cls.oid AND des.classoid='pg_class'::regclass) LEFT OUTER JOIN pg_description desp ON (desp.objoid=con.oid AND desp.objsubid = 0 AND desp.classoid='pg_constraint'::regclass) WHERE n.nspname = 'public'  and tab.relname ='range_hash'  AND contype='x' ORDER BY cls.relname","test1111",24054,"polar_test","100.104.175.10","00000",2,0,37,2023-07-26 14:32:04,1690353124000000
"execute <unnamed>: SELECT DISTINCT ON(cls.relname) cls.oid, cls.relname as idxname, indrelid, indkey, indisclustered, indisvalid, indisunique, indisprimary, n.nspname,indnatts, cls.reltablespace AS spcoid, spcname, tab.relname as tabname, indclass, con.oid AS conoid, desp.description  AS description,pg_get_expr(indpred, indrelid, true) as indconstraint, contype, condeferrable, condeferred, amname, substring(array_to_string(cls.reloptions, ',') from 'fillfactor=([0-9]*)') AS fillfactor  FROM pg_index idx JOIN pg_class cls ON cls.oid=indexrelid JOIN pg_class tab ON tab.oid=indrelid LEFT OUTER JOIN pg_tablespace ta on ta.oid=cls.reltablespace JOIN pg_namespace n ON n.oid=tab.relnamespace JOIN pg_am am ON am.oid=cls.relam LEFT JOIN pg_depend dep ON (dep.classid = cls.tableoid AND dep.objid = cls.oid AND dep.refobjsubid = '0' AND dep.refclassid=(SELECT oid FROM pg_class WHERE relname='pg_constraint') AND dep.deptype='i') LEFT OUTER JOIN pg_constraint con ON (con.tableoid = dep.refclassid AND con.oid = dep.refobjid) LEFT OUTER JOIN pg_description desp ON (desp.objoid=con.oid AND desp.objsubid = 0 AND desp.classoid='pg_constraint'::regclass) WHERE n.nspname ='public' and tab.relname = 'range_hash'  AND contype='u' ORDER BY cls.relname","test1111",24054,"polar_test","100.104.175.10","00000",2,0,38,2023-07-26 14:32:04,1690353124000000
"execute <unnamed>: select version()","test1111",24054,"polar_test","100.104.175.10","00000",0,0,10,2023-07-26 14:32:04,1690353124000000
"execute <unnamed>: SELECT 'TABLE' AS objectkind, c.oid, conname, relname, nspname, description, pg_get_expr(conbin, conrelid, true) as consrc , connoinherit, convalidated  FROM pg_constraint c  JOIN pg_class cl ON cl.oid=conrelid JOIN pg_namespace nl ON nl.oid=relnamespace LEFT OUTER JOIN pg_description des ON (des.objoid=c.oid AND des.classoid='pg_constraint'::regclass) WHERE contype = 'c' AND nspname = 'public' and relname = 'range_hash' UNION SELECT 'DOMAIN' AS objectkind, c.oid, conname, typname as relname, nspname, description,      regexp_replace(pg_get_constraintdef(c.oid, true), E'CHECK \((.*)\).*', E'\1') as consrc, connoinherit, convalidated  FROM pg_constraint c  JOIN pg_type t ON t.oid=contypid  JOIN pg_namespace nl ON nl.oid=typnamespace  LEFT OUTER JOIN pg_description des ON (des.objoid=t.oid AND des.classoid='pg_constraint'::regclass) WHERE contype = 'c' AND nspname = 'public' and typname = 'range_hash' ORDER BY conname","test1111",24054,"polar_test","100.104.175.10","00000",26,0,98,2023-07-26 14:32:04,1690353124000000
"execute <unnamed>: select pg_constraint.conname as pk_name,pg_attribute.attname as colname,pg_type.typname as typename from pg_constraint  inner join pg_class on pg_constraint.conrelid = pg_class.oid inner join pg_attribute on pg_attribute.attrelid = pg_class.oid  and  pg_attribute.attnum = pg_constraint.conkey[1] inner join pg_type on pg_type.oid = pg_attribute.atttypid where pg_class.oid = $$range_hash$$::regclass::oid and pg_constraint.contype='p' and pg_table_is_visible(pg_class.oid)","test1111",24054,"polar_test","100.104.175.10","00000",0,0,61,2023-07-26 14:32:04,1690353124000000
"execute <unnamed>: select i.relname as indname,i.relowner as indowner,idx.indrelid::regclass,am.amname as indam,idx.indkey,ARRAY(SELECT pg_get_indexdef(idx.indexrelid, k + 1, true) FROM generate_subscripts(idx.indkey, 1) as k ORDER BY k) as indkey_names, idx.indexprs IS NOT NULL as indexprs,idx.indpred IS NOT NULL as indpred  from pg_index as idx JOIN pg_class as i ON i.oid = idx.indexrelid JOIN pg_am as am ON i.relam = am.oid where idx.indrelid::regclass = $$range_hash$$::regclass and idx.indisprimary = false order by indname","test1111",24054,"polar_test","100.104.175.10","00000",0,0,59,2023-07-26 14:32:04,1690353124000000
"execute <unnamed>: SELECT current_database()","test1111",24054,"polar_test","100.104.175.10","00000",0,0,12,2023-07-26 14:32:04,1690353124000000
"execute <unnamed>: select version()","test1111",24148,"polar_test","100.104.175.251","00000",0,0,33,2023-07-26 14:32:10,1690353130000000
"execute <unnamed>: SELECT pg_catalog.set_config(name,boot_val,'f') FROM pg_catalog.pg_settings WHERE name = 'nls_date_format'","test1111",24148,"polar_test","100.104.175.251","00000",0,0,1666,2023-07-26 14:32:10,1690353130000000
"execute <unnamed>: SELECT pg_catalog.set_config(name,boot_val,'f') FROM pg_catalog.pg_settings WHERE name = 'nls_timestamp_format'","test1111",24148,"polar_test","100.104.175.251","00000",0,0,1444,2023-07-26 14:32:10,1690353130000000
"execute <unnamed>: SELECT pg_catalog.set_config(name,boot_val,'f') FROM pg_catalog.pg_settings WHERE name = 'nls_timestamp_tz_format'","test1111",24148,"polar_test","100.104.175.251","00000",0,0,1461,2023-07-26 14:32:10,1690353130000000
"execute <unnamed>: SET extra_float_digits = 3","test1111",24148,"polar_test","100.104.175.251","00000",0,0,14,2023-07-26 14:32:10,1690353130000000
"execute <unnamed>: SET application_name = 'PolarDB JDBC Driver'","test1111",24148,"polar_test","100.104.175.251","00000",0,0,12,2023-07-26 14:32:10,1690353130000000
"execute <unnamed>: select version()","test1111",24085,"polar_test","100.104.175.252","00000",0,0,33,2023-07-26 14:32:06,1690353126000000
"execute <unnamed>: SELECT pg_catalog.set_config(name,boot_val,'f') FROM pg_catalog.pg_settings WHERE name = 'nls_date_format'","test1111",24085,"polar_test","100.104.175.252","00000",0,0,1813,2023-07-26 14:32:06,1690353126000000
"execute <unnamed>: SELECT pg_catalog.set_config(name,boot_val,'f') FROM pg_catalog.pg_settings WHERE name = 'nls_timestamp_format'","test1111",24085,"polar_test","100.104.175.252","00000",0,0,1682,2023-07-26 14:32:06,1690353126000000
"execute <unnamed>: SELECT pg_catalog.set_config(name,boot_val,'f') FROM pg_catalog.pg_settings WHERE name = 'nls_timestamp_tz_format'","test1111",24085,"polar_test","100.104.175.252","00000",0,0,1617,2023-07-26 14:32:06,1690353126000000
"execute <unnamed>: SET extra_float_digits = 3","test1111",24085,"polar_test","100.104.175.252","00000",0,0,20,2023-07-26 14:32:06,1690353126000000
"execute <unnamed>: SET application_name = 'PolarDB JDBC Driver'","test1111",24085,"polar_test","100.104.175.252","00000",0,0,21,2023-07-26 14:32:06,1690353126000000
"execute <unnamed>: SET extra_float_digits = 3","test1111",24089,"polar_test","100.104.175.10","00000",0,0,36,2023-07-26 14:32:07,1690353127000000
"execute <unnamed>: SELECT pg_catalog.set_config(name,'YYYY-MM-DD HH24:MI:SS','f') FROM pg_catalog.pg_settings WHERE name = 'nls_date_format'","test1111",24089,"polar_test","100.104.175.10","00000",0,0,2175,2023-07-26 14:32:07,1690353127000000
"execute <unnamed>: SELECT pg_catalog.set_config(name,'YYYY-MM-DD HH24:MI:SS.FF','f') FROM pg_catalog.pg_settings WHERE name = 'nls_timestamp_format'","test1111",24089,"polar_test","100.104.175.10","00000",0,0,1573,2023-07-26 14:32:07,1690353127000000
"execute <unnamed>: SELECT pg_catalog.set_config(name,'YYYY-MM-DD HH24:MI:SS.FFOF','f') FROM pg_catalog.pg_settings WHERE name = 'nls_timestamp_tz_format'","test1111",24089,"polar_test","100.104.175.10","00000",0,0,1601,2023-07-26 14:32:07,1690353127000000
"execute <unnamed>: SET application_name = 'PolarDB2 JDBC Driver'","test1111",24089,"polar_test","100.104.175.10","00000",0,0,14,2023-07-26 14:32:07,1690353127000000
"execute <unnamed>: select 1","test1111",24089,"polar_test","100.104.175.10","00000",0,0,12,2023-07-26 14:32:07,1690353127000000
"execute <unnamed>: set search_path = "public"","test1111",24089,"polar_test","100.104.175.10","00000",0,0,16,2023-07-26 14:32:07,1690353127000000
"execute <unnamed>: select  c.relname table_name, 
   nsp.nspname schema_name,        cmt.description as description,
       c.reltuples::bigint num_rows,
       pg_total_relation_size(c.oid) / 1048576 storeCapacity,
       coalesce(pg_stat_get_last_analyze_time(c.oid),
                pg_stat_get_last_autoanalyze_time(c.oid)) createTime,
       coalesce(pg_stat_get_last_vacuum_time(c.oid),
                pg_stat_get_last_autovacuum_time(c.oid)) last_ddl_time,
       current_setting('server_encoding')::varchar  as encoding,
       CASE WHEN c.relkind = 'f' THEN 'FOREIGN' ELSE 'NORMAL' END as tableType
  from pg_namespace nsp, pg_class c
  left join pg_description cmt
    on c.oid = cmt.objoid
   and cmt.objsubid = 0
 where c.relkind in ('r', 'p', 'f')
   and c.relnamespace = nsp.oid
   and nsp.nspname = 'public'
 and c.relname in ('list_hash')   order by c.relname","test1111",24089,"polar_test","100.104.175.10","00000",69,0,10723,2023-07-26 14:32:07,1690353127000000
"execute <unnamed>: SELECT c.oid, a.attnum, a.attname, c.relname, n.nspname, a.attnotnull OR (t.typtype = 'd' AND t.typnotnull), a.attidentity is not null OR pg_catalog.pg_get_expr(d.adbin, d.adrelid) LIKE '%nextval(%' FROM pg_catalog.pg_class c JOIN pg_catalog.pg_namespace n ON (c.relnamespace = n.oid) JOIN pg_catalog.pg_attribute a ON (c.oid = a.attrelid) JOIN pg_catalog.pg_type t ON (a.atttypid = t.oid) LEFT JOIN pg_catalog.pg_attrdef d ON (d.adrelid = a.attrelid AND d.adnum = a.attnum) JOIN (SELECT 1259 AS oid , 2 AS attnum UNION ALL SELECT 2615, 2 UNION ALL SELECT 2609, 4) vals ON (c.oid = vals.oid AND a.attnum = vals.attnum)","test1111",24089,"polar_test","100.104.175.10","00000",24,0,70,2023-07-26 14:32:07,1690353127000000
"execute <unnamed>: select schemaname,tablename,tableowner,tablespace from pg_tables where schemaname = 'public' and tablename = 'list_hash'","test1111",24089,"polar_test","100.104.175.10","00000",7,0,36,2023-07-26 14:32:07,1690353127000000
"execute <unnamed>: select version()","test1111",24089,"polar_test","100.104.175.10","00000",0,0,13,2023-07-26 14:32:07,1690353127000000
"execute <unnamed>: SELECT c.oid, c.relhasrules,c.relhastriggers,c.relpersistence,c.reloptions, com.description from pg_class c INNER JOIN pg_namespace n ON c.relnamespace = n.oid left join pg_description com on objsubid = 0 and com.objoid = c.oid where  n.nspname = 'public' and c.relname = 'list_hash'","test1111",24089,"polar_test","100.104.175.10","00000",5,0,37,2023-07-26 14:32:07,1690353127000000
"execute <unnamed>: select distinct ordinal_position,pg_catalog.col_description(b.oid,ordinal_position)  as column_comment,table_catalog,table_schema,table_name,column_name,attinhcount,data_type,udt_name,is_nullable,column_default,numeric_scale,numeric_precision,collation_schema,collation_name, format_type(a.atttypid, a.atttypmod) as view_type,indisprimary from information_schema.Columns c inner join  pg_attribute a ON (a.attname = c.column_name) left JOIN pg_class b ON (a.attrelid = b.oid and b.relname = c.table_name) left jOIN pg_namespace n ON (n.oid = b.relnamespace and n.nspname = c.table_schema) left join pg_index i on a.attnum = any(i.indkey) and i.indrelid = b.oid where table_schema = 'public' and table_name = 'list_hash' and attrelid = $$list_hash$$::regclass::oid order by ordinal_position","test1111",24089,"polar_test","100.104.175.10","00000",287,0,1081,2023-07-26 14:32:07,1690353127000000
"execute <unnamed>: select c.column_name from information_schema.table_constraints s left join  information_schema.constraint_column_usage c on s.constraint_name = c.constraint_name and s.constraint_schema = c.constraint_schema where s.table_schema = 'public' and s.table_name =  'list_hash' and s.constraint_type = 'PRIMARY KEY'","test1111",24089,"polar_test","100.104.175.10","00000",2,0,46,2023-07-26 14:32:07,1690353127000000
"execute <unnamed>: SELECT c1.relnamespace as childnamespaceoid,inh.inhrelid as childoid,n1.nspname as childnamespacename,c1.relname AS childname, c2.relnamespace as parentnamespaceoid,inh.inhparent as parentoid,n2.nspname as paretnamespacename,c2.relname AS parentname FROM pg_inherits inh JOIN pg_class c1 ON (inh.inhrelid=c1.oid) JOIN pg_class  c2 ON (inh.inhparent=c2.oid) join pg_namespace n1 on c1.relnamespace = n1.oid join pg_namespace n2 on c2.relnamespace = n2.oid where n1.nspname = 'public' and c1.relname = 'list_hash'","test1111",24089,"polar_test","100.104.175.10","00000",2,0,22,2023-07-26 14:32:07,1690353127000000
"execute <unnamed>: select version()","test1111",24089,"polar_test","100.104.175.10","00000",0,0,10,2023-07-26 14:32:07,1690353127000000
"execute <unnamed>: select con.conname as "constraint_name",con.nspname as "child_schema",con.relname as "child_table",att2.attname as "child_column",ns.nspname as "parent_schema",cl.relname as "parent_table",att.attname as "parent_column", con.confdeltype,con.confupdtype,con.condeferrable,con.condeferred,con.convalidated,con.confmatchtype,des.description from (select unnest(con1.conkey) as "parent",unnest(con1.confkey) as "child", con1.oid as "constranit_oid" ,con1.confdeltype,con1.confupdtype,con1.condeferrable,con1.condeferred,con1.convalidated,con1.confmatchtype,con1.confrelid,con1.conrelid,cl.relname,cl.relnamespace,ns.nspname,con1.conname from pg_class cl join pg_namespace ns on cl.relnamespace = ns.oid join pg_constraint con1 on con1.conrelid = cl.oid where ns.nspname = 'public' and cl.relname ='list_hash' and con1.contype = 'f') con join pg_attribute att on att.attrelid = con.confrelid and att.attnum = con.child join pg_class cl on cl.oid = con.confrelid join pg_namespace ns on cl.relnamespace = ns.oid join pg_attribute att2 on att2.attrelid = con.conrelid and att2.attnum = con.parent left join pg_description des on con.constranit_oid = des.objoid order by con.conname","test1111",24089,"polar_test","100.104.175.10","00000",5,0,36,2023-07-26 14:32:07,1690353127000000
"execute <unnamed>: SELECT DISTINCT ON(cls.relname) cls.oid, cls.relname as idxname, indrelid, indkey, indisclustered, indisvalid, indisunique, indisprimary, n.nspname,indnatts, cls.reltablespace AS spcoid, spcname, tab.relname as tabname, indclass, con.oid AS conoid,desp.description,pg_get_expr(indpred, indrelid, true) as indconstraint, contype, condeferrable, condeferred, amname, substring(array_to_string(cls.reloptions, ',') from 'fillfactor=([0-9]*)') AS fillfactor FROM pg_index idx JOIN pg_class cls ON cls.oid=indexrelid JOIN pg_class tab ON tab.oid=indrelid LEFT OUTER JOIN pg_tablespace ta on ta.oid=cls.reltablespace JOIN pg_namespace n ON n.oid=tab.relnamespace JOIN pg_am am ON am.oid=cls.relam LEFT JOIN pg_depend dep ON (dep.classid = cls.tableoid AND dep.objid = cls.oid AND dep.refobjsubid = '0' AND dep.refclassid=(SELECT oid FROM pg_class WHERE relname='pg_constraint') AND dep.deptype='i') LEFT OUTER JOIN pg_constraint con ON (con.tableoid = dep.refclassid AND con.oid = dep.refobjid) LEFT OUTER JOIN pg_description des ON (des.objoid=cls.oid AND des.classoid='pg_class'::regclass) LEFT OUTER JOIN pg_description desp ON (desp.objoid=con.oid AND desp.objsubid = 0 AND desp.classoid='pg_constraint'::regclass) WHERE n.nspname = 'public'  and tab.relname ='list_hash'  AND contype='x' ORDER BY cls.relname","test1111",24089,"polar_test","100.104.175.10","00000",2,0,29,2023-07-26 14:32:07,1690353127000000
"execute <unnamed>: SELECT DISTINCT ON(cls.relname) cls.oid, cls.relname as idxname, indrelid, indkey, indisclustered, indisvalid, indisunique, indisprimary, n.nspname,indnatts, cls.reltablespace AS spcoid, spcname, tab.relname as tabname, indclass, con.oid AS conoid, desp.description  AS description,pg_get_expr(indpred, indrelid, true) as indconstraint, contype, condeferrable, condeferred, amname, substring(array_to_string(cls.reloptions, ',') from 'fillfactor=([0-9]*)') AS fillfactor  FROM pg_index idx JOIN pg_class cls ON cls.oid=indexrelid JOIN pg_class tab ON tab.oid=indrelid LEFT OUTER JOIN pg_tablespace ta on ta.oid=cls.reltablespace JOIN pg_namespace n ON n.oid=tab.relnamespace JOIN pg_am am ON am.oid=cls.relam LEFT JOIN pg_depend dep ON (dep.classid = cls.tableoid AND dep.objid = cls.oid AND dep.refobjsubid = '0' AND dep.refclassid=(SELECT oid FROM pg_class WHERE relname='pg_constraint') AND dep.deptype='i') LEFT OUTER JOIN pg_constraint con ON (con.tableoid = dep.refclassid AND con.oid = dep.refobjid) LEFT OUTER JOIN pg_description desp ON (desp.objoid=con.oid AND desp.objsubid = 0 AND desp.classoid='pg_constraint'::regclass) WHERE n.nspname ='public' and tab.relname = 'list_hash'  AND contype='u' ORDER BY cls.relname","test1111",24089,"polar_test","100.104.175.10","00000",2,0,34,2023-07-26 14:32:07,1690353127000000
"execute <unnamed>: select version()","test1111",24089,"polar_test","100.104.175.10","00000",0,0,9,2023-07-26 14:32:07,1690353127000000
"execute <unnamed>: SELECT 'TABLE' AS objectkind, c.oid, conname, relname, nspname, description, pg_get_expr(conbin, conrelid, true) as consrc , connoinherit, convalidated  FROM pg_constraint c  JOIN pg_class cl ON cl.oid=conrelid JOIN pg_namespace nl ON nl.oid=relnamespace LEFT OUTER JOIN pg_description des ON (des.objoid=c.oid AND des.classoid='pg_constraint'::regclass) WHERE contype = 'c' AND nspname = 'public' and relname = 'list_hash' UNION SELECT 'DOMAIN' AS objectkind, c.oid, conname, typname as relname, nspname, description,      regexp_replace(pg_get_constraintdef(c.oid, true), E'CHECK \((.*)\).*', E'\1') as consrc, connoinherit, convalidated  FROM pg_constraint c  JOIN pg_type t ON t.oid=contypid  JOIN pg_namespace nl ON nl.oid=typnamespace  LEFT OUTER JOIN pg_description des ON (des.objoid=t.oid AND des.classoid='pg_constraint'::regclass) WHERE contype = 'c' AND nspname = 'public' and typname = 'list_hash' ORDER BY conname","test1111",24089,"polar_test","100.104.175.10","00000",26,0,114,2023-07-26 14:32:07,1690353127000000
"execute <unnamed>: select pg_constraint.conname as pk_name,pg_attribute.attname as colname,pg_type.typname as typename from pg_constraint  inner join pg_class on pg_constraint.conrelid = pg_class.oid inner join pg_attribute on pg_attribute.attrelid = pg_class.oid  and  pg_attribute.attnum = pg_constraint.conkey[1] inner join pg_type on pg_type.oid = pg_attribute.atttypid where pg_class.oid = $$list_hash$$::regclass::oid and pg_constraint.contype='p' and pg_table_is_visible(pg_class.oid)","test1111",24089,"polar_test","100.104.175.10","00000",0,0,42,2023-07-26 14:32:07,1690353127000000
"execute <unnamed>: select i.relname as indname,i.relowner as indowner,idx.indrelid::regclass,am.amname as indam,idx.indkey,ARRAY(SELECT pg_get_indexdef(idx.indexrelid, k + 1, true) FROM generate_subscripts(idx.indkey, 1) as k ORDER BY k) as indkey_names, idx.indexprs IS NOT NULL as indexprs,idx.indpred IS NOT NULL as indpred  from pg_index as idx JOIN pg_class as i ON i.oid = idx.indexrelid JOIN pg_am as am ON i.relam = am.oid where idx.indrelid::regclass = $$list_hash$$::regclass and idx.indisprimary = false order by indname","test1111",24089,"polar_test","100.104.175.10","00000",0,0,50,2023-07-26 14:32:07,1690353127000000
"execute <unnamed>: SELECT current_database()","test1111",24089,"polar_test","100.104.175.10","00000",0,0,12,2023-07-26 14:32:07,1690353127000000
"execute <unnamed>: SET extra_float_digits = 3","test1111",24149,"polar_test","100.104.175.250","00000",0,0,40,2023-07-26 14:32:10,1690353130000000
"execute <unnamed>: SELECT pg_catalog.set_config(name,'YYYY-MM-DD HH24:MI:SS','f') FROM pg_catalog.pg_settings WHERE name = 'nls_date_format'","test1111",24149,"polar_test","100.104.175.250","00000",0,0,1878,2023-07-26 14:32:10,1690353130000000
"execute <unnamed>: SELECT pg_catalog.set_config(name,'YYYY-MM-DD HH24:MI:SS.FF','f') FROM pg_catalog.pg_settings WHERE name = 'nls_timestamp_format'","test1111",24149,"polar_test","100.104.175.250","00000",0,0,1573,2023-07-26 14:32:10,1690353130000000
"execute <unnamed>: SELECT pg_catalog.set_config(name,'YYYY-MM-DD HH24:MI:SS.FFOF','f') FROM pg_catalog.pg_settings WHERE name = 'nls_timestamp_tz_format'","test1111",24149,"polar_test","100.104.175.250","00000",0,0,1545,2023-07-26 14:32:10,1690353130000000
"execute <unnamed>: SET application_name = 'PolarDB2 JDBC Driver'","test1111",24149,"polar_test","100.104.175.250","00000",0,0,11,2023-07-26 14:32:10,1690353130000000
"execute <unnamed>: select 1","test1111",24149,"polar_test","100.104.175.250","00000",0,0,13,2023-07-26 14:32:11,1690353131000000
"execute <unnamed>: set search_path = "public"","test1111",24149,"polar_test","100.104.175.250","00000",0,0,14,2023-07-26 14:32:11,1690353131000000
"execute <unnamed>: select  c.relname table_name, 
   nsp.nspname schema_name,        cmt.description as description,
       c.reltuples::bigint num_rows,
       pg_total_relation_size(c.oid) / 1048576 storeCapacity,
       coalesce(pg_stat_get_last_analyze_time(c.oid),
                pg_stat_get_last_autoanalyze_time(c.oid)) createTime,
       coalesce(pg_stat_get_last_vacuum_time(c.oid),
                pg_stat_get_last_autovacuum_time(c.oid)) last_ddl_time,
       current_setting('server_encoding')::varchar  as encoding,
       CASE WHEN c.relkind = 'f' THEN 'FOREIGN' ELSE 'NORMAL' END as tableType
  from pg_namespace nsp, pg_class c
  left join pg_description cmt
    on c.oid = cmt.objoid
   and cmt.objsubid = 0
 where c.relkind in ('r', 'p', 'f')
   and c.relnamespace = nsp.oid
   and nsp.nspname = 'public'
 and c.relname in ('list_list')   order by c.relname","test1111",24149,"polar_test","100.104.175.250","00000",69,0,10787,2023-07-26 14:32:11,1690353131000000
"execute <unnamed>: SELECT c.oid, a.attnum, a.attname, c.relname, n.nspname, a.attnotnull OR (t.typtype = 'd' AND t.typnotnull), a.attidentity is not null OR pg_catalog.pg_get_expr(d.adbin, d.adrelid) LIKE '%nextval(%' FROM pg_catalog.pg_class c JOIN pg_catalog.pg_namespace n ON (c.relnamespace = n.oid) JOIN pg_catalog.pg_attribute a ON (c.oid = a.attrelid) JOIN pg_catalog.pg_type t ON (a.atttypid = t.oid) LEFT JOIN pg_catalog.pg_attrdef d ON (d.adrelid = a.attrelid AND d.adnum = a.attnum) JOIN (SELECT 1259 AS oid , 2 AS attnum UNION ALL SELECT 2615, 2 UNION ALL SELECT 2609, 4) vals ON (c.oid = vals.oid AND a.attnum = vals.attnum)","test1111",24149,"polar_test","100.104.175.250","00000",24,0,65,2023-07-26 14:32:11,1690353131000000
"execute <unnamed>: select schemaname,tablename,tableowner,tablespace from pg_tables where schemaname = 'public' and tablename = 'list_list'","test1111",24149,"polar_test","100.104.175.250","00000",7,0,30,2023-07-26 14:32:11,1690353131000000
"execute <unnamed>: select version()","test1111",24149,"polar_test","100.104.175.250","00000",0,0,11,2023-07-26 14:32:11,1690353131000000
"execute <unnamed>: SELECT c.oid, c.relhasrules,c.relhastriggers,c.relpersistence,c.reloptions, com.description from pg_class c INNER JOIN pg_namespace n ON c.relnamespace = n.oid left join pg_description com on objsubid = 0 and com.objoid = c.oid where  n.nspname = 'public' and c.relname = 'list_list'","test1111",24149,"polar_test","100.104.175.250","00000",5,0,40,2023-07-26 14:32:11,1690353131000000
"execute <unnamed>: select distinct ordinal_position,pg_catalog.col_description(b.oid,ordinal_position)  as column_comment,table_catalog,table_schema,table_name,column_name,attinhcount,data_type,udt_name,is_nullable,column_default,numeric_scale,numeric_precision,collation_schema,collation_name, format_type(a.atttypid, a.atttypmod) as view_type,indisprimary from information_schema.Columns c inner join  pg_attribute a ON (a.attname = c.column_name) left JOIN pg_class b ON (a.attrelid = b.oid and b.relname = c.table_name) left jOIN pg_namespace n ON (n.oid = b.relnamespace and n.nspname = c.table_schema) left join pg_index i on a.attnum = any(i.indkey) and i.indrelid = b.oid where table_schema = 'public' and table_name = 'list_list' and attrelid = $$list_list$$::regclass::oid order by ordinal_position","test1111",24149,"polar_test","100.104.175.250","00000",287,0,1162,2023-07-26 14:32:11,1690353131000000
"execute <unnamed>: select c.column_name from information_schema.table_constraints s left join  information_schema.constraint_column_usage c on s.constraint_name = c.constraint_name and s.constraint_schema = c.constraint_schema where s.table_schema = 'public' and s.table_name =  'list_list' and s.constraint_type = 'PRIMARY KEY'","test1111",24149,"polar_test","100.104.175.250","00000",2,0,29,2023-07-26 14:32:11,1690353131000000
"execute <unnamed>: SELECT c1.relnamespace as childnamespaceoid,inh.inhrelid as childoid,n1.nspname as childnamespacename,c1.relname AS childname, c2.relnamespace as parentnamespaceoid,inh.inhparent as parentoid,n2.nspname as paretnamespacename,c2.relname AS parentname FROM pg_inherits inh JOIN pg_class c1 ON (inh.inhrelid=c1.oid) JOIN pg_class  c2 ON (inh.inhparent=c2.oid) join pg_namespace n1 on c1.relnamespace = n1.oid join pg_namespace n2 on c2.relnamespace = n2.oid where n1.nspname = 'public' and c1.relname = 'list_list'","test1111",24149,"polar_test","100.104.175.250","00000",2,0,19,2023-07-26 14:32:11,1690353131000000
"execute <unnamed>: select version()","test1111",24149,"polar_test","100.104.175.250","00000",0,0,10,2023-07-26 14:32:11,1690353131000000
"execute <unnamed>: select con.conname as "constraint_name",con.nspname as "child_schema",con.relname as "child_table",att2.attname as "child_column",ns.nspname as "parent_schema",cl.relname as "parent_table",att.attname as "parent_column", con.confdeltype,con.confupdtype,con.condeferrable,con.condeferred,con.convalidated,con.confmatchtype,des.description from (select unnest(con1.conkey) as "parent",unnest(con1.confkey) as "child", con1.oid as "constranit_oid" ,con1.confdeltype,con1.confupdtype,con1.condeferrable,con1.condeferred,con1.convalidated,con1.confmatchtype,con1.confrelid,con1.conrelid,cl.relname,cl.relnamespace,ns.nspname,con1.conname from pg_class cl join pg_namespace ns on cl.relnamespace = ns.oid join pg_constraint con1 on con1.conrelid = cl.oid where ns.nspname = 'public' and cl.relname ='list_list' and con1.contype = 'f') con join pg_attribute att on att.attrelid = con.confrelid and att.attnum = con.child join pg_class cl on cl.oid = con.confrelid join pg_namespace ns on cl.relnamespace = ns.oid join pg_attribute att2 on att2.attrelid = con.conrelid and att2.attnum = con.parent left join pg_description des on con.constranit_oid = des.objoid order by con.conname","test1111",24149,"polar_test","100.104.175.250","00000",5,0,42,2023-07-26 14:32:11,1690353131000000
"execute <unnamed>: SELECT DISTINCT ON(cls.relname) cls.oid, cls.relname as idxname, indrelid, indkey, indisclustered, indisvalid, indisunique, indisprimary, n.nspname,indnatts, cls.reltablespace AS spcoid, spcname, tab.relname as tabname, indclass, con.oid AS conoid,desp.description,pg_get_expr(indpred, indrelid, true) as indconstraint, contype, condeferrable, condeferred, amname, substring(array_to_string(cls.reloptions, ',') from 'fillfactor=([0-9]*)') AS fillfactor FROM pg_index idx JOIN pg_class cls ON cls.oid=indexrelid JOIN pg_class tab ON tab.oid=indrelid LEFT OUTER JOIN pg_tablespace ta on ta.oid=cls.reltablespace JOIN pg_namespace n ON n.oid=tab.relnamespace JOIN pg_am am ON am.oid=cls.relam LEFT JOIN pg_depend dep ON (dep.classid = cls.tableoid AND dep.objid = cls.oid AND dep.refobjsubid = '0' AND dep.refclassid=(SELECT oid FROM pg_class WHERE relname='pg_constraint') AND dep.deptype='i') LEFT OUTER JOIN pg_constraint con ON (con.tableoid = dep.refclassid AND con.oid = dep.refobjid) LEFT OUTER JOIN pg_description des ON (des.objoid=cls.oid AND des.classoid='pg_class'::regclass) LEFT OUTER JOIN pg_description desp ON (desp.objoid=con.oid AND desp.objsubid = 0 AND desp.classoid='pg_constraint'::regclass) WHERE n.nspname = 'public'  and tab.relname ='list_list'  AND contype='x' ORDER BY cls.relname","test1111",24149,"polar_test","100.104.175.250","00000",2,0,29,2023-07-26 14:32:11,1690353131000000
"execute <unnamed>: SELECT DISTINCT ON(cls.relname) cls.oid, cls.relname as idxname, indrelid, indkey, indisclustered, indisvalid, indisunique, indisprimary, n.nspname,indnatts, cls.reltablespace AS spcoid, spcname, tab.relname as tabname, indclass, con.oid AS conoid, desp.description  AS description,pg_get_expr(indpred, indrelid, true) as indconstraint, contype, condeferrable, condeferred, amname, substring(array_to_string(cls.reloptions, ',') from 'fillfactor=([0-9]*)') AS fillfactor  FROM pg_index idx JOIN pg_class cls ON cls.oid=indexrelid JOIN pg_class tab ON tab.oid=indrelid LEFT OUTER JOIN pg_tablespace ta on ta.oid=cls.reltablespace JOIN pg_namespace n ON n.oid=tab.relnamespace JOIN pg_am am ON am.oid=cls.relam LEFT JOIN pg_depend dep ON (dep.classid = cls.tableoid AND dep.objid = cls.oid AND dep.refobjsubid = '0' AND dep.refclassid=(SELECT oid FROM pg_class WHERE relname='pg_constraint') AND dep.deptype='i') LEFT OUTER JOIN pg_constraint con ON (con.tableoid = dep.refclassid AND con.oid = dep.refobjid) LEFT OUTER JOIN pg_description desp ON (desp.objoid=con.oid AND desp.objsubid = 0 AND desp.classoid='pg_constraint'::regclass) WHERE n.nspname ='public' and tab.relname = 'list_list'  AND contype='u' ORDER BY cls.relname","test1111",24149,"polar_test","100.104.175.250","00000",2,0,32,2023-07-26 14:32:11,1690353131000000
"execute <unnamed>: select version()","test1111",24149,"polar_test","100.104.175.250","00000",0,0,9,2023-07-26 14:32:11,1690353131000000
"execute <unnamed>: SELECT 'TABLE' AS objectkind, c.oid, conname, relname, nspname, description, pg_get_expr(conbin, conrelid, true) as consrc , connoinherit, convalidated  FROM pg_constraint c  JOIN pg_class cl ON cl.oid=conrelid JOIN pg_namespace nl ON nl.oid=relnamespace LEFT OUTER JOIN pg_description des ON (des.objoid=c.oid AND des.classoid='pg_constraint'::regclass) WHERE contype = 'c' AND nspname = 'public' and relname = 'list_list' UNION SELECT 'DOMAIN' AS objectkind, c.oid, conname, typname as relname, nspname, description,      regexp_replace(pg_get_constraintdef(c.oid, true), E'CHECK \((.*)\).*', E'\1') as consrc, connoinherit, convalidated  FROM pg_constraint c  JOIN pg_type t ON t.oid=contypid  JOIN pg_namespace nl ON nl.oid=typnamespace  LEFT OUTER JOIN pg_description des ON (des.objoid=t.oid AND des.classoid='pg_constraint'::regclass) WHERE contype = 'c' AND nspname = 'public' and typname = 'list_list' ORDER BY conname","test1111",24149,"polar_test","100.104.175.250","00000",26,0,88,2023-07-26 14:32:11,1690353131000000
"execute <unnamed>: select pg_constraint.conname as pk_name,pg_attribute.attname as colname,pg_type.typname as typename from pg_constraint  inner join pg_class on pg_constraint.conrelid = pg_class.oid inner join pg_attribute on pg_attribute.attrelid = pg_class.oid  and  pg_attribute.attnum = pg_constraint.conkey[1] inner join pg_type on pg_type.oid = pg_attribute.atttypid where pg_class.oid = $$list_list$$::regclass::oid and pg_constraint.contype='p' and pg_table_is_visible(pg_class.oid)","test1111",24149,"polar_test","100.104.175.250","00000",0,0,42,2023-07-26 14:32:11,1690353131000000
"execute <unnamed>: select i.relname as indname,i.relowner as indowner,idx.indrelid::regclass,am.amname as indam,idx.indkey,ARRAY(SELECT pg_get_indexdef(idx.indexrelid, k + 1, true) FROM generate_subscripts(idx.indkey, 1) as k ORDER BY k) as indkey_names, idx.indexprs IS NOT NULL as indexprs,idx.indpred IS NOT NULL as indpred  from pg_index as idx JOIN pg_class as i ON i.oid = idx.indexrelid JOIN pg_am as am ON i.relam = am.oid where idx.indrelid::regclass = $$list_list$$::regclass and idx.indisprimary = false order by indname","test1111",24149,"polar_test","100.104.175.250","00000",0,0,48,2023-07-26 14:32:11,1690353131000000
"execute <unnamed>: SELECT current_database()","test1111",24149,"polar_test","100.104.175.250","00000",0,0,13,2023-07-26 14:32:11,1690353131000000
"execute <unnamed>: select version()","test1111",24224,"polar_test","100.104.175.10","00000",0,0,35,2023-07-26 14:32:16,1690353136000000
"execute <unnamed>: SELECT pg_catalog.set_config(name,boot_val,'f') FROM pg_catalog.pg_settings WHERE name = 'nls_date_format'","test1111",24224,"polar_test","100.104.175.10","00000",0,0,1759,2023-07-26 14:32:16,1690353136000000
"execute <unnamed>: SELECT pg_catalog.set_config(name,boot_val,'f') FROM pg_catalog.pg_settings WHERE name = 'nls_timestamp_format'","test1111",24224,"polar_test","100.104.175.10","00000",0,0,1439,2023-07-26 14:32:16,1690353136000000
"execute <unnamed>: SELECT pg_catalog.set_config(name,boot_val,'f') FROM pg_catalog.pg_settings WHERE name = 'nls_timestamp_tz_format'","test1111",24224,"polar_test","100.104.175.10","00000",0,0,1454,2023-07-26 14:32:16,1690353136000000
"execute <unnamed>: SET extra_float_digits = 3","test1111",24224,"polar_test","100.104.175.10","00000",0,0,15,2023-07-26 14:32:16,1690353136000000
"execute <unnamed>: SET application_name = 'PolarDB JDBC Driver'","test1111",24224,"polar_test","100.104.175.10","00000",0,0,12,2023-07-26 14:32:16,1690353136000000
"execute <unnamed>: SET extra_float_digits = 3","test1111",24225,"polar_test","100.104.175.10","00000",0,0,32,2023-07-26 14:32:16,1690353136000000
"execute <unnamed>: SELECT pg_catalog.set_config(name,'YYYY-MM-DD HH24:MI:SS','f') FROM pg_catalog.pg_settings WHERE name = 'nls_date_format'","test1111",24225,"polar_test","100.104.175.10","00000",0,0,1736,2023-07-26 14:32:16,1690353136000000
"execute <unnamed>: SELECT pg_catalog.set_config(name,'YYYY-MM-DD HH24:MI:SS.FF','f') FROM pg_catalog.pg_settings WHERE name = 'nls_timestamp_format'","test1111",24225,"polar_test","100.104.175.10","00000",0,0,2249,2023-07-26 14:32:16,1690353136000000
"execute <unnamed>: SELECT pg_catalog.set_config(name,'YYYY-MM-DD HH24:MI:SS.FFOF','f') FROM pg_catalog.pg_settings WHERE name = 'nls_timestamp_tz_format'","test1111",24225,"polar_test","100.104.175.10","00000",0,0,1387,2023-07-26 14:32:16,1690353136000000
"execute <unnamed>: SET application_name = 'PolarDB2 JDBC Driver'","test1111",24225,"polar_test","100.104.175.10","00000",0,0,11,2023-07-26 14:32:16,1690353136000000
"execute <unnamed>: select 1","test1111",24225,"polar_test","100.104.175.10","00000",0,0,13,2023-07-26 14:32:16,1690353136000000
"execute <unnamed>: set search_path = "public"","test1111",24225,"polar_test","100.104.175.10","00000",0,0,13,2023-07-26 14:32:16,1690353136000000
"execute <unnamed>: select  c.relname table_name, 
   nsp.nspname schema_name,        cmt.description as description,
       c.reltuples::bigint num_rows,
       pg_total_relation_size(c.oid) / 1048576 storeCapacity,
       coalesce(pg_stat_get_last_analyze_time(c.oid),
                pg_stat_get_last_autoanalyze_time(c.oid)) createTime,
       coalesce(pg_stat_get_last_vacuum_time(c.oid),
                pg_stat_get_last_autovacuum_time(c.oid)) last_ddl_time,
       current_setting('server_encoding')::varchar  as encoding,
       CASE WHEN c.relkind = 'f' THEN 'FOREIGN' ELSE 'NORMAL' END as tableType
  from pg_namespace nsp, pg_class c
  left join pg_description cmt
    on c.oid = cmt.objoid
   and cmt.objsubid = 0
 where c.relkind in ('r', 'p', 'f')
   and c.relnamespace = nsp.oid
   and nsp.nspname = 'public'
 and c.relname in ('list_range')   order by c.relname","test1111",24225,"polar_test","100.104.175.10","00000",69,0,11246,2023-07-26 14:32:16,1690353136000000
"execute <unnamed>: SELECT c.oid, a.attnum, a.attname, c.relname, n.nspname, a.attnotnull OR (t.typtype = 'd' AND t.typnotnull), a.attidentity is not null OR pg_catalog.pg_get_expr(d.adbin, d.adrelid) LIKE '%nextval(%' FROM pg_catalog.pg_class c JOIN pg_catalog.pg_namespace n ON (c.relnamespace = n.oid) JOIN pg_catalog.pg_attribute a ON (c.oid = a.attrelid) JOIN pg_catalog.pg_type t ON (a.atttypid = t.oid) LEFT JOIN pg_catalog.pg_attrdef d ON (d.adrelid = a.attrelid AND d.adnum = a.attnum) JOIN (SELECT 1259 AS oid , 2 AS attnum UNION ALL SELECT 2615, 2 UNION ALL SELECT 2609, 4) vals ON (c.oid = vals.oid AND a.attnum = vals.attnum)","test1111",24225,"polar_test","100.104.175.10","00000",24,0,65,2023-07-26 14:32:16,1690353136000000
"execute <unnamed>: select schemaname,tablename,tableowner,tablespace from pg_tables where schemaname = 'public' and tablename = 'list_range'","test1111",24225,"polar_test","100.104.175.10","00000",7,0,41,2023-07-26 14:32:16,1690353136000000
"execute <unnamed>: select version()","test1111",24225,"polar_test","100.104.175.10","00000",0,0,12,2023-07-26 14:32:16,1690353136000000
"execute <unnamed>: SELECT c.oid, c.relhasrules,c.relhastriggers,c.relpersistence,c.reloptions, com.description from pg_class c INNER JOIN pg_namespace n ON c.relnamespace = n.oid left join pg_description com on objsubid = 0 and com.objoid = c.oid where  n.nspname = 'public' and c.relname = 'list_range'","test1111",24225,"polar_test","100.104.175.10","00000",5,0,43,2023-07-26 14:32:16,1690353136000000
"execute <unnamed>: select distinct ordinal_position,pg_catalog.col_description(b.oid,ordinal_position)  as column_comment,table_catalog,table_schema,table_name,column_name,attinhcount,data_type,udt_name,is_nullable,column_default,numeric_scale,numeric_precision,collation_schema,collation_name, format_type(a.atttypid, a.atttypmod) as view_type,indisprimary from information_schema.Columns c inner join  pg_attribute a ON (a.attname = c.column_name) left JOIN pg_class b ON (a.attrelid = b.oid and b.relname = c.table_name) left jOIN pg_namespace n ON (n.oid = b.relnamespace and n.nspname = c.table_schema) left join pg_index i on a.attnum = any(i.indkey) and i.indrelid = b.oid where table_schema = 'public' and table_name = 'list_range' and attrelid = $$list_range$$::regclass::oid order by ordinal_position","test1111",24225,"polar_test","100.104.175.10","00000",287,0,1000,2023-07-26 14:32:16,1690353136000000
"execute <unnamed>: select c.column_name from information_schema.table_constraints s left join  information_schema.constraint_column_usage c on s.constraint_name = c.constraint_name and s.constraint_schema = c.constraint_schema where s.table_schema = 'public' and s.table_name =  'list_range' and s.constraint_type = 'PRIMARY KEY'","test1111",24225,"polar_test","100.104.175.10","00000",2,0,27,2023-07-26 14:32:16,1690353136000000
"execute <unnamed>: SELECT c1.relnamespace as childnamespaceoid,inh.inhrelid as childoid,n1.nspname as childnamespacename,c1.relname AS childname, c2.relnamespace as parentnamespaceoid,inh.inhparent as parentoid,n2.nspname as paretnamespacename,c2.relname AS parentname FROM pg_inherits inh JOIN pg_class c1 ON (inh.inhrelid=c1.oid) JOIN pg_class  c2 ON (inh.inhparent=c2.oid) join pg_namespace n1 on c1.relnamespace = n1.oid join pg_namespace n2 on c2.relnamespace = n2.oid where n1.nspname = 'public' and c1.relname = 'list_range'","test1111",24225,"polar_test","100.104.175.10","00000",2,0,20,2023-07-26 14:32:16,1690353136000000
"execute <unnamed>: select version()","test1111",24225,"polar_test","100.104.175.10","00000",0,0,11,2023-07-26 14:32:16,1690353136000000
"execute <unnamed>: select con.conname as "constraint_name",con.nspname as "child_schema",con.relname as "child_table",att2.attname as "child_column",ns.nspname as "parent_schema",cl.relname as "parent_table",att.attname as "parent_column", con.confdeltype,con.confupdtype,con.condeferrable,con.condeferred,con.convalidated,con.confmatchtype,des.description from (select unnest(con1.conkey) as "parent",unnest(con1.confkey) as "child", con1.oid as "constranit_oid" ,con1.confdeltype,con1.confupdtype,con1.condeferrable,con1.condeferred,con1.convalidated,con1.confmatchtype,con1.confrelid,con1.conrelid,cl.relname,cl.relnamespace,ns.nspname,con1.conname from pg_class cl join pg_namespace ns on cl.relnamespace = ns.oid join pg_constraint con1 on con1.conrelid = cl.oid where ns.nspname = 'public' and cl.relname ='list_range' and con1.contype = 'f') con join pg_attribute att on att.attrelid = con.confrelid and att.attnum = con.child join pg_class cl on cl.oid = con.confrelid join pg_namespace ns on cl.relnamespace = ns.oid join pg_attribute att2 on att2.attrelid = con.conrelid and att2.attnum = con.parent left join pg_description des on con.constranit_oid = des.objoid order by con.conname","test1111",24225,"polar_test","100.104.175.10","00000",5,0,41,2023-07-26 14:32:16,1690353136000000
"execute <unnamed>: SELECT DISTINCT ON(cls.relname) cls.oid, cls.relname as idxname, indrelid, indkey, indisclustered, indisvalid, indisunique, indisprimary, n.nspname,indnatts, cls.reltablespace AS spcoid, spcname, tab.relname as tabname, indclass, con.oid AS conoid,desp.description,pg_get_expr(indpred, indrelid, true) as indconstraint, contype, condeferrable, condeferred, amname, substring(array_to_string(cls.reloptions, ',') from 'fillfactor=([0-9]*)') AS fillfactor FROM pg_index idx JOIN pg_class cls ON cls.oid=indexrelid JOIN pg_class tab ON tab.oid=indrelid LEFT OUTER JOIN pg_tablespace ta on ta.oid=cls.reltablespace JOIN pg_namespace n ON n.oid=tab.relnamespace JOIN pg_am am ON am.oid=cls.relam LEFT JOIN pg_depend dep ON (dep.classid = cls.tableoid AND dep.objid = cls.oid AND dep.refobjsubid = '0' AND dep.refclassid=(SELECT oid FROM pg_class WHERE relname='pg_constraint') AND dep.deptype='i') LEFT OUTER JOIN pg_constraint con ON (con.tableoid = dep.refclassid AND con.oid = dep.refobjid) LEFT OUTER JOIN pg_description des ON (des.objoid=cls.oid AND des.classoid='pg_class'::regclass) LEFT OUTER JOIN pg_description desp ON (desp.objoid=con.oid AND desp.objsubid = 0 AND desp.classoid='pg_constraint'::regclass) WHERE n.nspname = 'public'  and tab.relname ='list_range'  AND contype='x' ORDER BY cls.relname","test1111",24225,"polar_test","100.104.175.10","00000",2,0,35,2023-07-26 14:32:16,1690353136000000
"execute <unnamed>: SELECT DISTINCT ON(cls.relname) cls.oid, cls.relname as idxname, indrelid, indkey, indisclustered, indisvalid, indisunique, indisprimary, n.nspname,indnatts, cls.reltablespace AS spcoid, spcname, tab.relname as tabname, indclass, con.oid AS conoid, desp.description  AS description,pg_get_expr(indpred, indrelid, true) as indconstraint, contype, condeferrable, condeferred, amname, substring(array_to_string(cls.reloptions, ',') from 'fillfactor=([0-9]*)') AS fillfactor  FROM pg_index idx JOIN pg_class cls ON cls.oid=indexrelid JOIN pg_class tab ON tab.oid=indrelid LEFT OUTER JOIN pg_tablespace ta on ta.oid=cls.reltablespace JOIN pg_namespace n ON n.oid=tab.relnamespace JOIN pg_am am ON am.oid=cls.relam LEFT JOIN pg_depend dep ON (dep.classid = cls.tableoid AND dep.objid = cls.oid AND dep.refobjsubid = '0' AND dep.refclassid=(SELECT oid FROM pg_class WHERE relname='pg_constraint') AND dep.deptype='i') LEFT OUTER JOIN pg_constraint con ON (con.tableoid = dep.refclassid AND con.oid = dep.refobjid) LEFT OUTER JOIN pg_description desp ON (desp.objoid=con.oid AND desp.objsubid = 0 AND desp.classoid='pg_constraint'::regclass) WHERE n.nspname ='public' and tab.relname = 'list_range'  AND contype='u' ORDER BY cls.relname","test1111",24225,"polar_test","100.104.175.10","00000",2,0,33,2023-07-26 14:32:16,1690353136000000
"execute <unnamed>: select version()","test1111",24225,"polar_test","100.104.175.10","00000",0,0,10,2023-07-26 14:32:16,1690353136000000
"execute <unnamed>: SELECT 'TABLE' AS objectkind, c.oid, conname, relname, nspname, description, pg_get_expr(conbin, conrelid, true) as consrc , connoinherit, convalidated  FROM pg_constraint c  JOIN pg_class cl ON cl.oid=conrelid JOIN pg_namespace nl ON nl.oid=relnamespace LEFT OUTER JOIN pg_description des ON (des.objoid=c.oid AND des.classoid='pg_constraint'::regclass) WHERE contype = 'c' AND nspname = 'public' and relname = 'list_range' UNION SELECT 'DOMAIN' AS objectkind, c.oid, conname, typname as relname, nspname, description,      regexp_replace(pg_get_constraintdef(c.oid, true), E'CHECK \((.*)\).*', E'\1') as consrc, connoinherit, convalidated  FROM pg_constraint c  JOIN pg_type t ON t.oid=contypid  JOIN pg_namespace nl ON nl.oid=typnamespace  LEFT OUTER JOIN pg_description des ON (des.objoid=t.oid AND des.classoid='pg_constraint'::regclass) WHERE contype = 'c' AND nspname = 'public' and typname = 'list_range' ORDER BY conname","test1111",24225,"polar_test","100.104.175.10","00000",26,0,79,2023-07-26 14:32:16,1690353136000000
"execute <unnamed>: select pg_constraint.conname as pk_name,pg_attribute.attname as colname,pg_type.typname as typename from pg_constraint  inner join pg_class on pg_constraint.conrelid = pg_class.oid inner join pg_attribute on pg_attribute.attrelid = pg_class.oid  and  pg_attribute.attnum = pg_constraint.conkey[1] inner join pg_type on pg_type.oid = pg_attribute.atttypid where pg_class.oid = $$list_range$$::regclass::oid and pg_constraint.contype='p' and pg_table_is_visible(pg_class.oid)","test1111",24225,"polar_test","100.104.175.10","00000",0,0,38,2023-07-26 14:32:16,1690353136000000
"execute <unnamed>: select i.relname as indname,i.relowner as indowner,idx.indrelid::regclass,am.amname as indam,idx.indkey,ARRAY(SELECT pg_get_indexdef(idx.indexrelid, k + 1, true) FROM generate_subscripts(idx.indkey, 1) as k ORDER BY k) as indkey_names, idx.indexprs IS NOT NULL as indexprs,idx.indpred IS NOT NULL as indpred  from pg_index as idx JOIN pg_class as i ON i.oid = idx.indexrelid JOIN pg_am as am ON i.relam = am.oid where idx.indrelid::regclass = $$list_range$$::regclass and idx.indisprimary = false order by indname","test1111",24225,"polar_test","100.104.175.10","00000",0,0,40,2023-07-26 14:32:16,1690353136000000
"execute <unnamed>: SELECT current_database()","test1111",24225,"polar_test","100.104.175.10","00000",0,0,11,2023-07-26 14:32:16,1690353136000000
"execute <unnamed>: select 1","test1111",23239,"polar_test","100.104.175.251","00000",0,0,14,2023-07-26 14:31:49,1690353109000000
"execute <unnamed>: set search_path = "public"","test1111",23239,"polar_test","100.104.175.251","00000",0,0,19,2023-07-26 14:31:49,1690353109000000
"execute <unnamed>: /* Query from DMS-WEBSQL-0-Qid_9039393046019519b by user 1086270528945027 */ -- range_partitions
CREATE TABLE range_partitions_sales
  ( prod_id       NUMBER(6)
  , cust_id       NUMBER
  , time_id       DATE
  , channel_id    CHAR(1)
  , promo_id      NUMBER(6)
  , quantity_sold NUMBER(3)
  , amount_sold   NUMBER(10,2)
  )PARTITION BY RANGE (time_id)
 ( PARTITION sales_q1_2006 VALUES LESS THAN (TO_DATE('01-APR-2006','dd-MON-yyyy'))
 , PARTITION sales_q2_2006 VALUES LESS THAN (TO_DATE('01-JUL-2006','dd-MON-yyyy'))
 , PARTITION sales_q3_2006 VALUES LESS THAN (TO_DATE('01-OCT-2006','dd-MON-yyyy'))
 , PARTITION sales_q4_2006 VALUES LESS THAN (TO_DATE('01-JAN-2007','dd-MON-yyyy'))
 )","test1111",23239,"polar_test","100.104.175.251","00000",1551,0,2876588,2023-07-26 14:31:52,1690353112000000
"execute <unnamed>: select 1","test1111",23239,"polar_test","100.104.175.251","00000",0,0,15,2023-07-26 14:31:52,1690353112000000
"execute <unnamed>: set search_path = "public"","test1111",23239,"polar_test","100.104.175.251","00000",0,0,22,2023-07-26 14:31:52,1690353112000000
"statement: /* Query from DMS-WEBSQL-0-Qid_9039393046022472s by user 1086270528945027 */ -- show
\d+ range_partitions_sales
\d+ range_partitions_sales_sales_q1_2006
DROP TABLE range_partitions_sales","test1111",23239,"polar_test","100.104.175.251","42601",0,0,69,2023-07-26 14:31:52,1690353112000000
"execute <unnamed>: select 1","test1111",23239,"polar_test","100.104.175.251","00000",0,0,14,2023-07-26 14:31:52,1690353112000000
"execute <unnamed>: set search_path = "public"","test1111",23239,"polar_test","100.104.175.251","00000",0,0,18,2023-07-26 14:31:52,1690353112000000
"execute <unnamed>: /* Query from DMS-WEBSQL-0-Qid_9039393046022926j by user 1086270528945027 */ 

-- list_partitions
CREATE TABLE list_partitions_sales
    (deptno number, 
    deptname varchar2(20),
    quarterly_sales number(10, 2),
    state varchar2(2))
PARTITION BY LIST (state)
    (PARTITION q1_northwest VALUES ('OR', 'WA'),
    PARTITION q1_southwest VALUES ('AZ', 'UT', 'NM'),
    PARTITION q1_northeast VALUES  ('NY', 'VM', 'NJ'),
    PARTITION q1_southeast VALUES ('FL', 'GA'),
    PARTITION q1_northcentral VALUES ('SD', 'WI'),
    PARTITION q1_southcentral VALUES ('OK', 'TX'))","test1111",23239,"polar_test","100.104.175.251","00000",1603,0,1475089,2023-07-26 14:31:54,1690353114000000
"execute <unnamed>: select 1","test1111",23239,"polar_test","100.104.175.251","00000",0,0,12,2023-07-26 14:31:54,1690353114000000
"execute <unnamed>: set search_path = "public"","test1111",23239,"polar_test","100.104.175.251","00000",0,0,19,2023-07-26 14:31:54,1690353114000000
"statement: /* Query from DMS-WEBSQL-0-Qid_9039393046023279G by user 1086270528945027 */ -- show
\d+ list_partitions_sales
\d+ list_partitions_sales_q1_northwest
DROP TABLE list_partitions_sales","test1111",23239,"polar_test","100.104.175.251","42601",0,0,35,2023-07-26 14:31:54,1690353114000000
"execute <unnamed>: select 1","test1111",23239,"polar_test","100.104.175.251","00000",0,0,14,2023-07-26 14:31:54,1690353114000000
"execute <unnamed>: set search_path = "public"","test1111",23239,"polar_test","100.104.175.251","00000",0,0,19,2023-07-26 14:31:54,1690353114000000
"execute <unnamed>: /* Query from DMS-WEBSQL-0-Qid_9039393046023598u by user 1086270528945027 */ 

-- hash_partitions
CREATE TABLE hash_partitions_sales (deptno NUMBER, deptname VARCHAR(32))
     PARTITION BY HASH(deptno)
       (PARTITION p1 , PARTITION p2 ,
        PARTITION p3 , PARTITION p4 )","test1111",23239,"polar_test","100.104.175.251","00000",962,0,1690413,2023-07-26 14:31:55,1690353115000000
"execute <unnamed>: select 1","test1111",23239,"polar_test","100.104.175.251","00000",0,0,11,2023-07-26 14:31:55,1690353115000000
"execute <unnamed>: set search_path = "public"","test1111",23239,"polar_test","100.104.175.251","00000",0,0,20,2023-07-26 14:31:55,1690353115000000
"statement: /* Query from DMS-WEBSQL-0-Qid_9039393046023871j by user 1086270528945027 */ -- show
\d+ hash_partitions_sales
\d hash_partitions_sales_p1
DROP TABLE hash_partitions_sales","test1111",23239,"polar_test","100.104.175.251","42601",0,0,34,2023-07-26 14:31:56,1690353116000000
"execute <unnamed>: select 1","test1111",23239,"polar_test","100.104.175.251","00000",0,0,13,2023-07-26 14:31:56,1690353116000000
"execute <unnamed>: set search_path = "public"","test1111",23239,"polar_test","100.104.175.251","00000",0,0,23,2023-07-26 14:31:56,1690353116000000
"execute <unnamed>: /* Query from DMS-WEBSQL-0-Qid_9039393046024126F by user 1086270528945027 */ 

-- Composite Range-List Partitioned Tables
CREATE TABLE range_list
(
  dept_no     number,
  part_no     varchar2,
  country     varchar2(20),
  date        date,
  amount      number
)
PARTITION BY RANGE(date)
  SUBPARTITION BY LIST(country)
  (
    PARTITION q1_2012 
      VALUES LESS THAN('2012-Apr-01')
      (
        SUBPARTITION q1_europe VALUES ('FRANCE', 'ITALY'),
        SUBPARTITION q1_asia VALUES ('INDIA', 'PAKISTAN'),
        SUBPARTITION q1_americas VALUES ('US', 'CANADA')
       ),
  PARTITION q2_2012 
    VALUES LESS THAN('2012-Jul-01')
      (
        SUBPARTITION q2_europe VALUES ('FRANCE', 'ITALY'),
        SUBPARTITION q2_asia VALUES ('INDIA', 'PAKISTAN'),
        SUBPARTITION q2_americas VALUES ('US', 'CANADA')
       ),
  PARTITION q3_2012 
    VALUES LESS THAN('2012-Oct-01')
      (
        SUBPARTITION q3_europe VALUES ('FRANCE', 'ITALY'),
        SUBPARTITION q3_asia VALUES ('INDIA', 'PAKISTAN'),
        SUBPARTITION q3_americas VALUES ('US', 'CANADA')
       ),
  PARTITION q4_2012 
    VALUES LESS THAN('2013-Jan-01')      
      (
        SUBPARTITION q4_europe VALUES ('FRANCE', 'ITALY'),
        SUBPARTITION q4_asia VALUES ('INDIA', 'PAKISTAN'),
        SUBPARTITION q4_americas VALUES ('US', 'CANADA')
       )
)","test1111",23239,"polar_test","100.104.175.251","00000",4138,0,3747137,2023-07-26 14:31:59,1690353119000000
"execute <unnamed>: select 1","test1111",23239,"polar_test","100.104.175.251","00000",0,0,12,2023-07-26 14:31:59,1690353119000000
"execute <unnamed>: set search_path = "public"","test1111",23239,"polar_test","100.104.175.251","00000",0,0,17,2023-07-26 14:31:59,1690353119000000
"statement: /* Query from DMS-WEBSQL-0-Qid_9039393046024398z by user 1086270528945027 */ -- show
\d range_list
\d+ range_list_q1_2012
\d+ range_list_q3_europe
DROP TABLE range_list","test1111",23239,"polar_test","100.104.175.251","42601",0,0,30,2023-07-26 14:31:59,1690353119000000
"execute <unnamed>: select 1","test1111",23239,"polar_test","100.104.175.251","00000",0,0,12,2023-07-26 14:31:59,1690353119000000
"execute <unnamed>: set search_path = "public"","test1111",23239,"polar_test","100.104.175.251","00000",0,0,17,2023-07-26 14:31:59,1690353119000000
"execute <unnamed>: /* Query from DMS-WEBSQL-0-Qid_9039393046024663V by user 1086270528945027 */ 

-- Composite Range-Range Partitioned Tables
CREATE TABLE range_range
( order_id      NUMBER NOT NULL
, order_date    DATE NOT NULL
, delivery_date DATE NOT NULL
, customer_id   NUMBER NOT NULL
, sales_amount  NUMBER NOT NULL
)
PARTITION BY RANGE (order_date)
SUBPARTITION BY RANGE (delivery_date)
( PARTITION p_2006_jul VALUES LESS THAN (TO_DATE('01-AUG-2006','dd-MON-yyyy'))
  ( SUBPARTITION p06_jul_e VALUES LESS THAN (TO_DATE('15-AUG-2006','dd-MON-yyyy'))
  , SUBPARTITION p06_jul_a VALUES LESS THAN (TO_DATE('01-SEP-2006','dd-MON-yyyy'))
  , SUBPARTITION p06_jul_l VALUES LESS THAN (MAXVALUE)
  )
, PARTITION p_2006_aug VALUES LESS THAN (TO_DATE('01-SEP-2006','dd-MON-yyyy'))
  ( SUBPARTITION p06_aug_e VALUES LESS THAN (TO_DATE('15-SEP-2006','dd-MON-yyyy'))
  , SUBPARTITION p06_aug_a VALUES LESS THAN (TO_DATE('01-OCT-2006','dd-MON-yyyy'))
  , SUBPARTITION p06_aug_l VALUES LESS THAN (MAXVALUE)
  )
, PARTITION p_2006_sep VALUES LESS THAN (TO_DATE('01-OCT-2006','dd-MON-yyyy'))
  ( SUBPARTITION p06_sep_e VALUES LESS THAN (TO_DATE('15-OCT-2006','dd-MON-yyyy'))
  , SUBPARTITION p06_sep_a VALUES LESS THAN (TO_DATE('01-NOV-2006','dd-MON-yyyy'))
  , SUBPARTITION p06_sep_l VALUES LESS THAN (MAXVALUE)
  )
, PARTITION p_2006_oct VALUES LESS THAN (TO_DATE('01-NOV-2006','dd-MON-yyyy'))
  ( SUBPARTITION p06_oct_e VALUES LESS THAN (TO_DATE('15-NOV-2006','dd-MON-yyyy'))
  , SUBPARTITION p06_oct_a VALUES LESS THAN (TO_DATE('01-DEC-2006','dd-MON-yyyy'))
  , SUBPARTITION p06_oct_l VALUES LESS THAN (MAXVALUE)
  )
, PARTITION p_2006_nov VALUES LESS THAN (TO_DATE('01-DEC-2006','dd-MON-yyyy'))
  ( SUBPARTITION p06_nov_e VALUES LESS THAN (TO_DATE('15-DEC-2006','dd-MON-yyyy'))
  , SUBPARTITION p06_nov_a VALUES LESS THAN (TO_DATE('01-JAN-2007','dd-MON-yyyy'))
  , SUBPARTITION p06_nov_l VALUES LESS THAN (MAXVALUE)
  )
, PARTITION p_2006_dec VAL","test1111",23239,"polar_test","100.104.175.251","00000",6253,0,1545275,2023-07-26 14:32:01,1690353121000000
"execute <unnamed>: select 1","test1111",23239,"polar_test","100.104.175.251","00000",0,0,12,2023-07-26 14:32:01,1690353121000000
"execute <unnamed>: set search_path = "public"","test1111",23239,"polar_test","100.104.175.251","00000",0,0,16,2023-07-26 14:32:01,1690353121000000
"statement: /* Query from DMS-WEBSQL-0-Qid_9039393046024910O by user 1086270528945027 */ -- show
\d range_range
\d+ range_range_p_2006_jul
\d+ range_range_p06_dec_a
DROP TABLE range_range","test1111",23239,"polar_test","100.104.175.251","42601",0,0,30,2023-07-26 14:32:01,1690353121000000
"execute <unnamed>: select 1","test1111",23239,"polar_test","100.104.175.251","00000",0,0,15,2023-07-26 14:32:01,1690353121000000
"execute <unnamed>: set search_path = "public"","test1111",23239,"polar_test","100.104.175.251","00000",0,0,18,2023-07-26 14:32:01,1690353121000000
"execute <unnamed>: /* Query from DMS-WEBSQL-0-Qid_9039393046025134Q by user 1086270528945027 */ 

-- Composite Range-Hash Partitioned Tables
CREATE TABLE range_hash
(
  dept_no     number,
  part_no     varchar2,
  country     varchar2(20),
  date        date,
  amount      number
)
PARTITION BY RANGE(date)
  SUBPARTITION BY HASH(country)
  (
    PARTITION q1_2012 
      VALUES LESS THAN('2012-Apr-01')
      (
        SUBPARTITION q1_europe,
        SUBPARTITION q1_asia ,
        SUBPARTITION q1_americas
       ),
  PARTITION q2_2012 
    VALUES LESS THAN('2012-Jul-01')
      (
        SUBPARTITION q2_europe ,
        SUBPARTITION q2_asia,
        SUBPARTITION q2_americas
       ),
  PARTITION q3_2012 
    VALUES LESS THAN('2012-Oct-01')
      (
        SUBPARTITION q3_europe,
        SUBPARTITION q3_asia,
        SUBPARTITION q3_americas
       ),
  PARTITION q4_2012 
    VALUES LESS THAN('2013-Jan-01')      
      (
        SUBPARTITION q4_europe ,
        SUBPARTITION q4_asia ,
        SUBPARTITION q4_americas 
       )
)","test1111",23239,"polar_test","100.104.175.251","00000",4098,0,2207166,2023-07-26 14:32:03,1690353123000000
"execute <unnamed>: select 1","test1111",23239,"polar_test","100.104.175.251","00000",0,0,10,2023-07-26 14:32:03,1690353123000000
"execute <unnamed>: set search_path = "public"","test1111",23239,"polar_test","100.104.175.251","00000",0,0,18,2023-07-26 14:32:03,1690353123000000
"statement: /* Query from DMS-WEBSQL-0-Qid_9039393046025606r by user 1086270528945027 */ -- show
\d range_hash
\d+ range_hash_q1_2012
\d range_hash_q2_americas
DROP TABLE range_hash","test1111",23239,"polar_test","100.104.175.251","42601",0,0,33,2023-07-26 14:32:03,1690353123000000
"execute <unnamed>: select 1","test1111",23239,"polar_test","100.104.175.251","00000",0,0,10,2023-07-26 14:32:04,1690353124000000
"execute <unnamed>: set search_path = "public"","test1111",23239,"polar_test","100.104.175.251","00000",0,0,15,2023-07-26 14:32:04,1690353124000000
"execute <unnamed>: /* Query from DMS-WEBSQL-0-Qid_9039393046025924g by user 1086270528945027 */ 

-- Composite List-Hash Partitioned Tables
CREATE TABLE list_hash
( id             NUMBER
, account_number NUMBER
, customer_id    NUMBER
, balance        NUMBER
, branch_id      NUMBER
, region         VARCHAR(2)
, status         VARCHAR2(1)
)
PARTITION BY LIST (region)
SUBPARTITION BY HASH (customer_id) 
( PARTITION p_northwest VALUES ('OR', 'WA')
  ( SUBPARTITION p_nw_bad 
  , SUBPARTITION p_nw_average 
  , SUBPARTITION p_nw_good 
  )
, PARTITION p_southwest VALUES ('AZ', 'UT', 'NM')
  ( SUBPARTITION p_sw_bad 
  , SUBPARTITION p_sw_average
  , SUBPARTITION p_sw_good
  )
, PARTITION p_northeast VALUES ('NY', 'VM', 'NJ')
  ( SUBPARTITION p_ne_bad
  , SUBPARTITION p_ne_average 
  , SUBPARTITION p_ne_good 
  )
, PARTITION p_southeast VALUES ('FL', 'GA')
  ( SUBPARTITION p_se_bad 
  , SUBPARTITION p_se_average 
  , SUBPARTITION p_se_good 
  )
, PARTITION p_northcentral VALUES ('SD', 'WI')
  ( SUBPARTITION p_nc_bad 
  , SUBPARTITION p_nc_average 
  , SUBPARTITION p_nc_good
  )
, PARTITION p_southcentral VALUES ('OK', 'TX')
  ( SUBPARTITION p_sc_bad 
  , SUBPARTITION p_sc_average 
  , SUBPARTITION p_sc_good 
  )
)","test1111",23239,"polar_test","100.104.175.251","00000",7097,0,2713510,2023-07-26 14:32:06,1690353126000000
"execute <unnamed>: select 1","test1111",23239,"polar_test","100.104.175.251","00000",0,0,12,2023-07-26 14:32:06,1690353126000000
"execute <unnamed>: set search_path = "public"","test1111",23239,"polar_test","100.104.175.251","00000",0,0,20,2023-07-26 14:32:06,1690353126000000
"statement: /* Query from DMS-WEBSQL-0-Qid_9039393046026207G by user 1086270528945027 */ -- show
\d list_hash
\d+ list_hash_p_northwest
\d list_hash_p_se_average
DROP TABLE list_hash","test1111",23239,"polar_test","100.104.175.251","42601",0,0,38,2023-07-26 14:32:06,1690353126000000
"execute <unnamed>: select 1","test1111",23239,"polar_test","100.104.175.251","00000",0,0,13,2023-07-26 14:32:06,1690353126000000
"execute <unnamed>: set search_path = "public"","test1111",23239,"polar_test","100.104.175.251","00000",0,0,25,2023-07-26 14:32:06,1690353126000000
"execute <unnamed>: /* Query from DMS-WEBSQL-0-Qid_9039393046026519E by user 1086270528945027 */ 

-- Composite List-List Partitioned Tables
CREATE TABLE list_list
( id             NUMBER
, account_number NUMBER
, customer_id    NUMBER
, balance        NUMBER
, branch_id      NUMBER
, region         VARCHAR(2)
, status         VARCHAR2(1)
)
PARTITION BY LIST (region)
SUBPARTITION BY LIST (status)
( PARTITION p_northwest VALUES ('OR', 'WA')
  ( SUBPARTITION p_nw_bad VALUES ('B')
  , SUBPARTITION p_nw_average VALUES ('A')
  , SUBPARTITION p_nw_good VALUES ('G')
  )
, PARTITION p_southwest VALUES ('AZ', 'UT', 'NM')
  ( SUBPARTITION p_sw_bad VALUES ('B')
  , SUBPARTITION p_sw_average VALUES ('A')
  , SUBPARTITION p_sw_good VALUES ('G')
  )
, PARTITION p_northeast VALUES ('NY', 'VM', 'NJ')
  ( SUBPARTITION p_ne_bad VALUES ('B')
  , SUBPARTITION p_ne_average VALUES ('A')
  , SUBPARTITION p_ne_good VALUES ('G')
  )
, PARTITION p_southeast VALUES ('FL', 'GA')
  ( SUBPARTITION p_se_bad VALUES ('B')
  , SUBPARTITION p_se_average VALUES ('A')
  , SUBPARTITION p_se_good VALUES ('G')
  )
, PARTITION p_northcentral VALUES ('SD', 'WI')
  ( SUBPARTITION p_nc_bad VALUES ('B')
  , SUBPARTITION p_nc_average VALUES ('A')
  , SUBPARTITION p_nc_good VALUES ('G')
  )
, PARTITION p_southcentral VALUES ('OK', 'TX')
  ( SUBPARTITION p_sc_bad VALUES ('B')
  , SUBPARTITION p_sc_average VALUES ('A')
  , SUBPARTITION p_sc_good VALUES ('G')
  )
)","test1111",23239,"polar_test","100.104.175.251","00000",6828,0,3759945,2023-07-26 14:32:10,1690353130000000
"execute <unnamed>: select 1","test1111",23239,"polar_test","100.104.175.251","00000",0,0,13,2023-07-26 14:32:10,1690353130000000
"execute <unnamed>: set search_path = "public"","test1111",23239,"polar_test","100.104.175.251","00000",0,0,17,2023-07-26 14:32:10,1690353130000000
"statement: /* Query from DMS-WEBSQL-0-Qid_9039393046026741Q by user 1086270528945027 */ -- show
\d list_list
\d+ list_list_p_northwest
\d+ list_list_p_nc_average
DROP TABLE list_list","test1111",23239,"polar_test","100.104.175.251","42601",0,0,26,2023-07-26 14:32:10,1690353130000000
"execute <unnamed>: select 1","test1111",23239,"polar_test","100.104.175.251","00000",0,0,12,2023-07-26 14:32:10,1690353130000000
"execute <unnamed>: set search_path = "public"","test1111",23239,"polar_test","100.104.175.251","00000",0,0,14,2023-07-26 14:32:10,1690353130000000
"execute <unnamed>: /* Query from DMS-WEBSQL-0-Qid_9039393046026986R by user 1086270528945027 */ 

-- Composite List-Range Partitioned Tables
CREATE TABLE list_range
( id             NUMBER
, account_number NUMBER
, customer_id    NUMBER
, balance        NUMBER
, branch_id      NUMBER
, region         VARCHAR(2)
, status         VARCHAR2(1)
)
PARTITION BY LIST (region)
SUBPARTITION BY RANGE (balance)
( PARTITION p_northwest VALUES ('OR', 'WA')
  ( SUBPARTITION p_nw_low VALUES LESS THAN (1000)
  , SUBPARTITION p_nw_average VALUES LESS THAN (10000)
  , SUBPARTITION p_nw_high VALUES LESS THAN (100000)
  , SUBPARTITION p_nw_extraordinary VALUES LESS THAN (MAXVALUE)
  )
, PARTITION p_southwest VALUES ('AZ', 'UT', 'NM')
  ( SUBPARTITION p_sw_low VALUES LESS THAN (1000)
  , SUBPARTITION p_sw_average VALUES LESS THAN (10000)
  , SUBPARTITION p_sw_high VALUES LESS THAN (100000)
  , SUBPARTITION p_sw_extraordinary VALUES LESS THAN (MAXVALUE)
  )
, PARTITION p_northeast VALUES ('NY', 'VM', 'NJ')
  ( SUBPARTITION p_ne_low VALUES LESS THAN (1000)
  , SUBPARTITION p_ne_average VALUES LESS THAN (10000)
  , SUBPARTITION p_ne_high VALUES LESS THAN (100000)
  , SUBPARTITION p_ne_extraordinary VALUES LESS THAN (MAXVALUE)
  )
, PARTITION p_southeast VALUES ('FL', 'GA')
  ( SUBPARTITION p_se_low VALUES LESS THAN (1000)
  , SUBPARTITION p_se_average VALUES LESS THAN (10000)
  , SUBPARTITION p_se_high VALUES LESS THAN (100000)
  , SUBPARTITION p_se_extraordinary VALUES LESS THAN (MAXVALUE)
  )
, PARTITION p_northcentral VALUES ('SD', 'WI')
  ( SUBPARTITION p_nc_low VALUES LESS THAN (1000)
  , SUBPARTITION p_nc_average VALUES LESS THAN (10000)
  , SUBPARTITION p_nc_high VALUES LESS THAN (100000)
  , SUBPARTITION p_nc_extraordinary VALUES LESS THAN (MAXVALUE)
  )
, PARTITION p_southcentral VALUES ('OK', 'TX')
  ( SUBPARTITION p_sc_low VALUES LESS THAN (1000)
  , SUBPARTITION p_sc_average VALUES LESS THAN (10000)
  , SUBPARTITION p_sc","test1111",23239,"polar_test","100.104.175.251","00000",8916,0,5295830,2023-07-26 14:32:16,1690353136000000
"execute <unnamed>: select 1","test1111",23239,"polar_test","100.104.175.251","00000",0,0,20,2023-07-26 14:32:16,1690353136000000
"execute <unnamed>: set search_path = "public"","test1111",23239,"polar_test","100.104.175.251","00000",0,0,18,2023-07-26 14:32:16,1690353136000000
"statement: /* Query from DMS-WEBSQL-0-Qid_9039393046027294w by user 1086270528945027 */ -- show
\d list_range
\d list_range_p_northwest
\d list_range_p_nc_high
DROP TABLE list_range","test1111",23239,"polar_test","100.104.175.251","42601",0,0,29,2023-07-26 14:32:16,1690353136000000
"execute <unnamed>: select 1","test1111",23239,"polar_test","100.104.175.251","00000",0,0,12,2023-07-26 14:32:16,1690353136000000
"execute <unnamed>: set search_path = "public"","test1111",23239,"polar_test","100.104.175.251","00000",0,0,16,2023-07-26 14:32:16,1690353136000000
"execute <unnamed>: /* Query from DMS-WEBSQL-0-Qid_9039393046027626J by user 1086270528945027 */ 

-- composite_hash_partitions
CREATE TABLE hash_hash
( id             NUMBER
, account_number NUMBER
, customer_id    NUMBER
, balance        NUMBER
, branch_id      NUMBER
, region         VARCHAR(2)
, status         VARCHAR2(1)
)
PARTITION BY Hash (region)
SUBPARTITION BY HASH (customer_id) 
( PARTITION p_northwest
  ( SUBPARTITION p_nw_bad 
  , SUBPARTITION p_nw_average 
  , SUBPARTITION p_nw_good 
  )
, PARTITION p_southwest
  ( SUBPARTITION p_sw_bad 
  , SUBPARTITION p_sw_average
  , SUBPARTITION p_sw_good
  )
, PARTITION p_northeast 
  ( SUBPARTITION p_ne_bad
  , SUBPARTITION p_ne_average 
  , SUBPARTITION p_ne_good 
  )
, PARTITION p_southeast 
  ( SUBPARTITION p_se_bad 
  , SUBPARTITION p_se_average 
  , SUBPARTITION p_se_good 
  )
, PARTITION p_northcentral 
  ( SUBPARTITION p_nc_bad 
  , SUBPARTITION p_nc_average 
  , SUBPARTITION p_nc_good
  )
, PARTITION p_southcentral 
  ( SUBPARTITION p_sc_bad 
  , SUBPARTITION p_sc_average 
  , SUBPARTITION p_sc_good 
  )
)","test1111",23239,"polar_test","100.104.175.251","00000",7100,0,3377003,2023-07-26 14:32:19,1690353139000000
"execute <unnamed>: SET extra_float_digits = 3","test1111",24285,"polar_test","100.104.175.250","00000",0,0,39,2023-07-26 14:32:19,1690353139000000
"execute <unnamed>: SELECT pg_catalog.set_config(name,'YYYY-MM-DD HH24:MI:SS','f') FROM pg_catalog.pg_settings WHERE name = 'nls_date_format'","test1111",24285,"polar_test","100.104.175.250","00000",0,0,2032,2023-07-26 14:32:19,1690353139000000
"execute <unnamed>: SELECT pg_catalog.set_config(name,'YYYY-MM-DD HH24:MI:SS.FF','f') FROM pg_catalog.pg_settings WHERE name = 'nls_timestamp_format'","test1111",24285,"polar_test","100.104.175.250","00000",0,0,1705,2023-07-26 14:32:19,1690353139000000
"execute <unnamed>: SELECT pg_catalog.set_config(name,'YYYY-MM-DD HH24:MI:SS.FFOF','f') FROM pg_catalog.pg_settings WHERE name = 'nls_timestamp_tz_format'","test1111",24285,"polar_test","100.104.175.250","00000",0,0,1671,2023-07-26 14:32:19,1690353139000000
"execute <unnamed>: SET application_name = 'PolarDB2 JDBC Driver'","test1111",24285,"polar_test","100.104.175.250","00000",0,0,12,2023-07-26 14:32:19,1690353139000000
"execute <unnamed>: select 1","test1111",24285,"polar_test","100.104.175.250","00000",0,0,20,2023-07-26 14:32:19,1690353139000000
"execute <unnamed>: set search_path = "public"","test1111",24285,"polar_test","100.104.175.250","00000",0,0,15,2023-07-26 14:32:19,1690353139000000
"execute <unnamed>: select  c.relname table_name, 
   nsp.nspname schema_name,        cmt.description as description,
       c.reltuples::bigint num_rows,
       pg_total_relation_size(c.oid) / 1048576 storeCapacity,
       coalesce(pg_stat_get_last_analyze_time(c.oid),
                pg_stat_get_last_autoanalyze_time(c.oid)) createTime,
       coalesce(pg_stat_get_last_vacuum_time(c.oid),
                pg_stat_get_last_autovacuum_time(c.oid)) last_ddl_time,
       current_setting('server_encoding')::varchar  as encoding,
       CASE WHEN c.relkind = 'f' THEN 'FOREIGN' ELSE 'NORMAL' END as tableType
  from pg_namespace nsp, pg_class c
  left join pg_description cmt
    on c.oid = cmt.objoid
   and cmt.objsubid = 0
 where c.relkind in ('r', 'p', 'f')
   and c.relnamespace = nsp.oid
   and nsp.nspname = 'public'
 and c.relname in ('hash_hash')   order by c.relname","test1111",24285,"polar_test","100.104.175.250","00000",73,0,10887,2023-07-26 14:32:20,1690353140000000
"execute <unnamed>: SELECT c.oid, a.attnum, a.attname, c.relname, n.nspname, a.attnotnull OR (t.typtype = 'd' AND t.typnotnull), a.attidentity is not null OR pg_catalog.pg_get_expr(d.adbin, d.adrelid) LIKE '%nextval(%' FROM pg_catalog.pg_class c JOIN pg_catalog.pg_namespace n ON (c.relnamespace = n.oid) JOIN pg_catalog.pg_attribute a ON (c.oid = a.attrelid) JOIN pg_catalog.pg_type t ON (a.atttypid = t.oid) LEFT JOIN pg_catalog.pg_attrdef d ON (d.adrelid = a.attrelid AND d.adnum = a.attnum) JOIN (SELECT 1259 AS oid , 2 AS attnum UNION ALL SELECT 2615, 2 UNION ALL SELECT 2609, 4) vals ON (c.oid = vals.oid AND a.attnum = vals.attnum)","test1111",24285,"polar_test","100.104.175.250","00000",24,0,78,2023-07-26 14:32:20,1690353140000000
"execute <unnamed>: select schemaname,tablename,tableowner,tablespace from pg_tables where schemaname = 'public' and tablename = 'hash_hash'","test1111",24285,"polar_test","100.104.175.250","00000",8,0,135,2023-07-26 14:32:20,1690353140000000
"execute <unnamed>: select version()","test1111",24285,"polar_test","100.104.175.250","00000",0,0,13,2023-07-26 14:32:20,1690353140000000
"execute <unnamed>: SELECT c.oid, c.relhasrules,c.relhastriggers,c.relpersistence,c.reloptions, com.description from pg_class c INNER JOIN pg_namespace n ON c.relnamespace = n.oid left join pg_description com on objsubid = 0 and com.objoid = c.oid where  n.nspname = 'public' and c.relname = 'hash_hash'","test1111",24285,"polar_test","100.104.175.250","00000",6,0,36,2023-07-26 14:32:20,1690353140000000
"execute <unnamed>: select distinct ordinal_position,pg_catalog.col_description(b.oid,ordinal_position)  as column_comment,table_catalog,table_schema,table_name,column_name,attinhcount,data_type,udt_name,is_nullable,column_default,numeric_scale,numeric_precision,collation_schema,collation_name, format_type(a.atttypid, a.atttypmod) as view_type,indisprimary from information_schema.Columns c inner join  pg_attribute a ON (a.attname = c.column_name) left JOIN pg_class b ON (a.attrelid = b.oid and b.relname = c.table_name) left jOIN pg_namespace n ON (n.oid = b.relnamespace and n.nspname = c.table_schema) left join pg_index i on a.attnum = any(i.indkey) and i.indrelid = b.oid where table_schema = 'public' and table_name = 'hash_hash' and attrelid = $$hash_hash$$::regclass::oid order by ordinal_position","test1111",24285,"polar_test","100.104.175.250","00000",288,0,1298,2023-07-26 14:32:20,1690353140000000
"execute <unnamed>: select c.column_name from information_schema.table_constraints s left join  information_schema.constraint_column_usage c on s.constraint_name = c.constraint_name and s.constraint_schema = c.constraint_schema where s.table_schema = 'public' and s.table_name =  'hash_hash' and s.constraint_type = 'PRIMARY KEY'","test1111",24285,"polar_test","100.104.175.250","00000",3,0,34,2023-07-26 14:32:20,1690353140000000
"execute <unnamed>: SELECT c1.relnamespace as childnamespaceoid,inh.inhrelid as childoid,n1.nspname as childnamespacename,c1.relname AS childname, c2.relnamespace as parentnamespaceoid,inh.inhparent as parentoid,n2.nspname as paretnamespacename,c2.relname AS parentname FROM pg_inherits inh JOIN pg_class c1 ON (inh.inhrelid=c1.oid) JOIN pg_class  c2 ON (inh.inhparent=c2.oid) join pg_namespace n1 on c1.relnamespace = n1.oid join pg_namespace n2 on c2.relnamespace = n2.oid where n1.nspname = 'public' and c1.relname = 'hash_hash'","test1111",24285,"polar_test","100.104.175.250","00000",3,0,25,2023-07-26 14:32:20,1690353140000000
"execute <unnamed>: select version()","test1111",24285,"polar_test","100.104.175.250","00000",0,0,11,2023-07-26 14:32:20,1690353140000000
"execute <unnamed>: select con.conname as "constraint_name",con.nspname as "child_schema",con.relname as "child_table",att2.attname as "child_column",ns.nspname as "parent_schema",cl.relname as "parent_table",att.attname as "parent_column", con.confdeltype,con.confupdtype,con.condeferrable,con.condeferred,con.convalidated,con.confmatchtype,des.description from (select unnest(con1.conkey) as "parent",unnest(con1.confkey) as "child", con1.oid as "constranit_oid" ,con1.confdeltype,con1.confupdtype,con1.condeferrable,con1.condeferred,con1.convalidated,con1.confmatchtype,con1.confrelid,con1.conrelid,cl.relname,cl.relnamespace,ns.nspname,con1.conname from pg_class cl join pg_namespace ns on cl.relnamespace = ns.oid join pg_constraint con1 on con1.conrelid = cl.oid where ns.nspname = 'public' and cl.relname ='hash_hash' and con1.contype = 'f') con join pg_attribute att on att.attrelid = con.confrelid and att.attnum = con.child join pg_class cl on cl.oid = con.confrelid join pg_namespace ns on cl.relnamespace = ns.oid join pg_attribute att2 on att2.attrelid = con.conrelid and att2.attnum = con.parent left join pg_description des on con.constranit_oid = des.objoid order by con.conname","test1111",24285,"polar_test","100.104.175.250","00000",6,0,44,2023-07-26 14:32:20,1690353140000000
"execute <unnamed>: SELECT DISTINCT ON(cls.relname) cls.oid, cls.relname as idxname, indrelid, indkey, indisclustered, indisvalid, indisunique, indisprimary, n.nspname,indnatts, cls.reltablespace AS spcoid, spcname, tab.relname as tabname, indclass, con.oid AS conoid,desp.description,pg_get_expr(indpred, indrelid, true) as indconstraint, contype, condeferrable, condeferred, amname, substring(array_to_string(cls.reloptions, ',') from 'fillfactor=([0-9]*)') AS fillfactor FROM pg_index idx JOIN pg_class cls ON cls.oid=indexrelid JOIN pg_class tab ON tab.oid=indrelid LEFT OUTER JOIN pg_tablespace ta on ta.oid=cls.reltablespace JOIN pg_namespace n ON n.oid=tab.relnamespace JOIN pg_am am ON am.oid=cls.relam LEFT JOIN pg_depend dep ON (dep.classid = cls.tableoid AND dep.objid = cls.oid AND dep.refobjsubid = '0' AND dep.refclassid=(SELECT oid FROM pg_class WHERE relname='pg_constraint') AND dep.deptype='i') LEFT OUTER JOIN pg_constraint con ON (con.tableoid = dep.refclassid AND con.oid = dep.refobjid) LEFT OUTER JOIN pg_description des ON (des.objoid=cls.oid AND des.classoid='pg_class'::regclass) LEFT OUTER JOIN pg_description desp ON (desp.objoid=con.oid AND desp.objsubid = 0 AND desp.classoid='pg_constraint'::regclass) WHERE n.nspname = 'public'  and tab.relname ='hash_hash'  AND contype='x' ORDER BY cls.relname","test1111",24285,"polar_test","100.104.175.250","00000",3,0,34,2023-07-26 14:32:20,1690353140000000
"execute <unnamed>: SELECT DISTINCT ON(cls.relname) cls.oid, cls.relname as idxname, indrelid, indkey, indisclustered, indisvalid, indisunique, indisprimary, n.nspname,indnatts, cls.reltablespace AS spcoid, spcname, tab.relname as tabname, indclass, con.oid AS conoid, desp.description  AS description,pg_get_expr(indpred, indrelid, true) as indconstraint, contype, condeferrable, condeferred, amname, substring(array_to_string(cls.reloptions, ',') from 'fillfactor=([0-9]*)') AS fillfactor  FROM pg_index idx JOIN pg_class cls ON cls.oid=indexrelid JOIN pg_class tab ON tab.oid=indrelid LEFT OUTER JOIN pg_tablespace ta on ta.oid=cls.reltablespace JOIN pg_namespace n ON n.oid=tab.relnamespace JOIN pg_am am ON am.oid=cls.relam LEFT JOIN pg_depend dep ON (dep.classid = cls.tableoid AND dep.objid = cls.oid AND dep.refobjsubid = '0' AND dep.refclassid=(SELECT oid FROM pg_class WHERE relname='pg_constraint') AND dep.deptype='i') LEFT OUTER JOIN pg_constraint con ON (con.tableoid = dep.refclassid AND con.oid = dep.refobjid) LEFT OUTER JOIN pg_description desp ON (desp.objoid=con.oid AND desp.objsubid = 0 AND desp.classoid='pg_constraint'::regclass) WHERE n.nspname ='public' and tab.relname = 'hash_hash'  AND contype='u' ORDER BY cls.relname","test1111",24285,"polar_test","100.104.175.250","00000",3,0,34,2023-07-26 14:32:20,1690353140000000
"execute <unnamed>: select version()","test1111",24285,"polar_test","100.104.175.250","00000",0,0,13,2023-07-26 14:32:20,1690353140000000
"execute <unnamed>: SELECT 'TABLE' AS objectkind, c.oid, conname, relname, nspname, description, pg_get_expr(conbin, conrelid, true) as consrc , connoinherit, convalidated  FROM pg_constraint c  JOIN pg_class cl ON cl.oid=conrelid JOIN pg_namespace nl ON nl.oid=relnamespace LEFT OUTER JOIN pg_description des ON (des.objoid=c.oid AND des.classoid='pg_constraint'::regclass) WHERE contype = 'c' AND nspname = 'public' and relname = 'hash_hash' UNION SELECT 'DOMAIN' AS objectkind, c.oid, conname, typname as relname, nspname, description,      regexp_replace(pg_get_constraintdef(c.oid, true), E'CHECK \((.*)\).*', E'\1') as consrc, connoinherit, convalidated  FROM pg_constraint c  JOIN pg_type t ON t.oid=contypid  JOIN pg_namespace nl ON nl.oid=typnamespace  LEFT OUTER JOIN pg_description des ON (des.objoid=t.oid AND des.classoid='pg_constraint'::regclass) WHERE contype = 'c' AND nspname = 'public' and typname = 'hash_hash' ORDER BY conname","test1111",24285,"polar_test","100.104.175.250","00000",27,0,93,2023-07-26 14:32:20,1690353140000000
"execute <unnamed>: select pg_constraint.conname as pk_name,pg_attribute.attname as colname,pg_type.typname as typename from pg_constraint  inner join pg_class on pg_constraint.conrelid = pg_class.oid inner join pg_attribute on pg_attribute.attrelid = pg_class.oid  and  pg_attribute.attnum = pg_constraint.conkey[1] inner join pg_type on pg_type.oid = pg_attribute.atttypid where pg_class.oid = $$hash_hash$$::regclass::oid and pg_constraint.contype='p' and pg_table_is_visible(pg_class.oid)","test1111",24285,"polar_test","100.104.175.250","00000",0,0,52,2023-07-26 14:32:20,1690353140000000
"execute <unnamed>: select i.relname as indname,i.relowner as indowner,idx.indrelid::regclass,am.amname as indam,idx.indkey,ARRAY(SELECT pg_get_indexdef(idx.indexrelid, k + 1, true) FROM generate_subscripts(idx.indkey, 1) as k ORDER BY k) as indkey_names, idx.indexprs IS NOT NULL as indexprs,idx.indpred IS NOT NULL as indpred  from pg_index as idx JOIN pg_class as i ON i.oid = idx.indexrelid JOIN pg_am as am ON i.relam = am.oid where idx.indrelid::regclass = $$hash_hash$$::regclass and idx.indisprimary = false order by indname","test1111",24285,"polar_test","100.104.175.250","00000",0,0,55,2023-07-26 14:32:20,1690353140000000
"execute <unnamed>: SELECT current_database()","test1111",24285,"polar_test","100.104.175.250","00000",0,0,13,2023-07-26 14:32:20,1690353140000000
"execute <unnamed>: select version()","test1111",24284,"polar_test","100.104.175.10","00000",0,0,32,2023-07-26 14:32:19,1690353139000000
"execute <unnamed>: SELECT pg_catalog.set_config(name,boot_val,'f') FROM pg_catalog.pg_settings WHERE name = 'nls_date_format'","test1111",24284,"polar_test","100.104.175.10","00000",0,0,1697,2023-07-26 14:32:19,1690353139000000
"execute <unnamed>: SELECT pg_catalog.set_config(name,boot_val,'f') FROM pg_catalog.pg_settings WHERE name = 'nls_timestamp_format'","test1111",24284,"polar_test","100.104.175.10","00000",0,0,1498,2023-07-26 14:32:19,1690353139000000
"execute <unnamed>: SELECT pg_catalog.set_config(name,boot_val,'f') FROM pg_catalog.pg_settings WHERE name = 'nls_timestamp_tz_format'","test1111",24284,"polar_test","100.104.175.10","00000",0,0,1469,2023-07-26 14:32:19,1690353139000000
"execute <unnamed>: SET extra_float_digits = 3","test1111",24284,"polar_test","100.104.175.10","00000",0,0,16,2023-07-26 14:32:19,1690353139000000
"execute <unnamed>: SET application_name = 'PolarDB JDBC Driver'","test1111",24284,"polar_test","100.104.175.10","00000",0,0,16,2023-07-26 14:32:19,1690353139000000
"execute <unnamed>: select version()","test1111",24332,"polar_test","100.104.175.10","00000",0,0,38,2023-07-26 14:32:23,1690353143000000
"execute <unnamed>: SELECT pg_catalog.set_config(name,boot_val,'f') FROM pg_catalog.pg_settings WHERE name = 'nls_date_format'","test1111",24332,"polar_test","100.104.175.10","00000",0,0,2061,2023-07-26 14:32:23,1690353143000000
"execute <unnamed>: SELECT pg_catalog.set_config(name,boot_val,'f') FROM pg_catalog.pg_settings WHERE name = 'nls_timestamp_format'","test1111",24332,"polar_test","100.104.175.10","00000",0,0,1710,2023-07-26 14:32:23,1690353143000000
"execute <unnamed>: SELECT pg_catalog.set_config(name,boot_val,'f') FROM pg_catalog.pg_settings WHERE name = 'nls_timestamp_tz_format'","test1111",24332,"polar_test","100.104.175.10","00000",0,0,1680,2023-07-26 14:32:23,1690353143000000
"execute <unnamed>: SET extra_float_digits = 3","test1111",24332,"polar_test","100.104.175.10","00000",0,0,14,2023-07-26 14:32:23,1690353143000000
"execute <unnamed>: SET application_name = 'PolarDB JDBC Driver'","test1111",24332,"polar_test","100.104.175.10","00000",0,0,10,2023-07-26 14:32:23,1690353143000000
"execute <unnamed>: SET extra_float_digits = 3","test1111",24334,"polar_test","100.104.175.251","00000",0,0,36,2023-07-26 14:32:23,1690353143000000
"execute <unnamed>: SELECT pg_catalog.set_config(name,'YYYY-MM-DD HH24:MI:SS','f') FROM pg_catalog.pg_settings WHERE name = 'nls_date_format'","test1111",24334,"polar_test","100.104.175.251","00000",0,0,1694,2023-07-26 14:32:23,1690353143000000
"execute <unnamed>: SELECT pg_catalog.set_config(name,'YYYY-MM-DD HH24:MI:SS.FF','f') FROM pg_catalog.pg_settings WHERE name = 'nls_timestamp_format'","test1111",24334,"polar_test","100.104.175.251","00000",0,0,1591,2023-07-26 14:32:23,1690353143000000
"execute <unnamed>: SELECT pg_catalog.set_config(name,'YYYY-MM-DD HH24:MI:SS.FFOF','f') FROM pg_catalog.pg_settings WHERE name = 'nls_timestamp_tz_format'","test1111",24334,"polar_test","100.104.175.251","00000",0,0,1596,2023-07-26 14:32:23,1690353143000000
"execute <unnamed>: SET application_name = 'PolarDB2 JDBC Driver'","test1111",24334,"polar_test","100.104.175.251","00000",0,0,17,2023-07-26 14:32:23,1690353143000000
"execute <unnamed>: select 1","test1111",24334,"polar_test","100.104.175.251","00000",0,0,15,2023-07-26 14:32:23,1690353143000000
"execute <unnamed>: set search_path = "public"","test1111",24334,"polar_test","100.104.175.251","00000",0,0,22,2023-07-26 14:32:23,1690353143000000
"execute <unnamed>: select  c.relname table_name, 
   nsp.nspname schema_name,        cmt.description as description,
       c.reltuples::bigint num_rows,
       pg_total_relation_size(c.oid) / 1048576 storeCapacity,
       coalesce(pg_stat_get_last_analyze_time(c.oid),
                pg_stat_get_last_autoanalyze_time(c.oid)) createTime,
       coalesce(pg_stat_get_last_vacuum_time(c.oid),
                pg_stat_get_last_autovacuum_time(c.oid)) last_ddl_time,
       current_setting('server_encoding')::varchar  as encoding,
       CASE WHEN c.relkind = 'f' THEN 'FOREIGN' ELSE 'NORMAL' END as tableType
  from pg_namespace nsp, pg_class c
  left join pg_description cmt
    on c.oid = cmt.objoid
   and cmt.objsubid = 0
 where c.relkind in ('r', 'p', 'f')
   and c.relnamespace = nsp.oid
   and nsp.nspname = 'public'
 and c.relname in ('hash_list')   order by c.relname","test1111",24334,"polar_test","100.104.175.251","00000",69,0,10873,2023-07-26 14:32:23,1690353143000000
"execute <unnamed>: SELECT c.oid, a.attnum, a.attname, c.relname, n.nspname, a.attnotnull OR (t.typtype = 'd' AND t.typnotnull), a.attidentity is not null OR pg_catalog.pg_get_expr(d.adbin, d.adrelid) LIKE '%nextval(%' FROM pg_catalog.pg_class c JOIN pg_catalog.pg_namespace n ON (c.relnamespace = n.oid) JOIN pg_catalog.pg_attribute a ON (c.oid = a.attrelid) JOIN pg_catalog.pg_type t ON (a.atttypid = t.oid) LEFT JOIN pg_catalog.pg_attrdef d ON (d.adrelid = a.attrelid AND d.adnum = a.attnum) JOIN (SELECT 1259 AS oid , 2 AS attnum UNION ALL SELECT 2615, 2 UNION ALL SELECT 2609, 4) vals ON (c.oid = vals.oid AND a.attnum = vals.attnum)","test1111",24334,"polar_test","100.104.175.251","00000",24,0,75,2023-07-26 14:32:23,1690353143000000
"execute <unnamed>: select schemaname,tablename,tableowner,tablespace from pg_tables where schemaname = 'public' and tablename = 'hash_list'","test1111",24334,"polar_test","100.104.175.251","00000",7,0,83,2023-07-26 14:32:23,1690353143000000
"execute <unnamed>: select version()","test1111",24334,"polar_test","100.104.175.251","00000",0,0,11,2023-07-26 14:32:23,1690353143000000
"execute <unnamed>: SELECT c.oid, c.relhasrules,c.relhastriggers,c.relpersistence,c.reloptions, com.description from pg_class c INNER JOIN pg_namespace n ON c.relnamespace = n.oid left join pg_description com on objsubid = 0 and com.objoid = c.oid where  n.nspname = 'public' and c.relname = 'hash_list'","test1111",24334,"polar_test","100.104.175.251","00000",5,0,42,2023-07-26 14:32:23,1690353143000000
"execute <unnamed>: select distinct ordinal_position,pg_catalog.col_description(b.oid,ordinal_position)  as column_comment,table_catalog,table_schema,table_name,column_name,attinhcount,data_type,udt_name,is_nullable,column_default,numeric_scale,numeric_precision,collation_schema,collation_name, format_type(a.atttypid, a.atttypmod) as view_type,indisprimary from information_schema.Columns c inner join  pg_attribute a ON (a.attname = c.column_name) left JOIN pg_class b ON (a.attrelid = b.oid and b.relname = c.table_name) left jOIN pg_namespace n ON (n.oid = b.relnamespace and n.nspname = c.table_schema) left join pg_index i on a.attnum = any(i.indkey) and i.indrelid = b.oid where table_schema = 'public' and table_name = 'hash_list' and attrelid = $$hash_list$$::regclass::oid order by ordinal_position","test1111",24334,"polar_test","100.104.175.251","00000",269,0,967,2023-07-26 14:32:23,1690353143000000
"execute <unnamed>: select c.column_name from information_schema.table_constraints s left join  information_schema.constraint_column_usage c on s.constraint_name = c.constraint_name and s.constraint_schema = c.constraint_schema where s.table_schema = 'public' and s.table_name =  'hash_list' and s.constraint_type = 'PRIMARY KEY'","test1111",24334,"polar_test","100.104.175.251","00000",2,0,30,2023-07-26 14:32:23,1690353143000000
"execute <unnamed>: SELECT c1.relnamespace as childnamespaceoid,inh.inhrelid as childoid,n1.nspname as childnamespacename,c1.relname AS childname, c2.relnamespace as parentnamespaceoid,inh.inhparent as parentoid,n2.nspname as paretnamespacename,c2.relname AS parentname FROM pg_inherits inh JOIN pg_class c1 ON (inh.inhrelid=c1.oid) JOIN pg_class  c2 ON (inh.inhparent=c2.oid) join pg_namespace n1 on c1.relnamespace = n1.oid join pg_namespace n2 on c2.relnamespace = n2.oid where n1.nspname = 'public' and c1.relname = 'hash_list'","test1111",24334,"polar_test","100.104.175.251","00000",2,0,29,2023-07-26 14:32:23,1690353143000000
"execute <unnamed>: select version()","test1111",24334,"polar_test","100.104.175.251","00000",0,0,13,2023-07-26 14:32:23,1690353143000000
"execute <unnamed>: select con.conname as "constraint_name",con.nspname as "child_schema",con.relname as "child_table",att2.attname as "child_column",ns.nspname as "parent_schema",cl.relname as "parent_table",att.attname as "parent_column", con.confdeltype,con.confupdtype,con.condeferrable,con.condeferred,con.convalidated,con.confmatchtype,des.description from (select unnest(con1.conkey) as "parent",unnest(con1.confkey) as "child", con1.oid as "constranit_oid" ,con1.confdeltype,con1.confupdtype,con1.condeferrable,con1.condeferred,con1.convalidated,con1.confmatchtype,con1.confrelid,con1.conrelid,cl.relname,cl.relnamespace,ns.nspname,con1.conname from pg_class cl join pg_namespace ns on cl.relnamespace = ns.oid join pg_constraint con1 on con1.conrelid = cl.oid where ns.nspname = 'public' and cl.relname ='hash_list' and con1.contype = 'f') con join pg_attribute att on att.attrelid = con.confrelid and att.attnum = con.child join pg_class cl on cl.oid = con.confrelid join pg_namespace ns on cl.relnamespace = ns.oid join pg_attribute att2 on att2.attrelid = con.conrelid and att2.attnum = con.parent left join pg_description des on con.constranit_oid = des.objoid order by con.conname","test1111",24334,"polar_test","100.104.175.251","00000",5,0,49,2023-07-26 14:32:23,1690353143000000
"execute <unnamed>: SELECT DISTINCT ON(cls.relname) cls.oid, cls.relname as idxname, indrelid, indkey, indisclustered, indisvalid, indisunique, indisprimary, n.nspname,indnatts, cls.reltablespace AS spcoid, spcname, tab.relname as tabname, indclass, con.oid AS conoid,desp.description,pg_get_expr(indpred, indrelid, true) as indconstraint, contype, condeferrable, condeferred, amname, substring(array_to_string(cls.reloptions, ',') from 'fillfactor=([0-9]*)') AS fillfactor FROM pg_index idx JOIN pg_class cls ON cls.oid=indexrelid JOIN pg_class tab ON tab.oid=indrelid LEFT OUTER JOIN pg_tablespace ta on ta.oid=cls.reltablespace JOIN pg_namespace n ON n.oid=tab.relnamespace JOIN pg_am am ON am.oid=cls.relam LEFT JOIN pg_depend dep ON (dep.classid = cls.tableoid AND dep.objid = cls.oid AND dep.refobjsubid = '0' AND dep.refclassid=(SELECT oid FROM pg_class WHERE relname='pg_constraint') AND dep.deptype='i') LEFT OUTER JOIN pg_constraint con ON (con.tableoid = dep.refclassid AND con.oid = dep.refobjid) LEFT OUTER JOIN pg_description des ON (des.objoid=cls.oid AND des.classoid='pg_class'::regclass) LEFT OUTER JOIN pg_description desp ON (desp.objoid=con.oid AND desp.objsubid = 0 AND desp.classoid='pg_constraint'::regclass) WHERE n.nspname = 'public'  and tab.relname ='hash_list'  AND contype='x' ORDER BY cls.relname","test1111",24334,"polar_test","100.104.175.251","00000",2,0,38,2023-07-26 14:32:23,1690353143000000
"execute <unnamed>: SELECT DISTINCT ON(cls.relname) cls.oid, cls.relname as idxname, indrelid, indkey, indisclustered, indisvalid, indisunique, indisprimary, n.nspname,indnatts, cls.reltablespace AS spcoid, spcname, tab.relname as tabname, indclass, con.oid AS conoid, desp.description  AS description,pg_get_expr(indpred, indrelid, true) as indconstraint, contype, condeferrable, condeferred, amname, substring(array_to_string(cls.reloptions, ',') from 'fillfactor=([0-9]*)') AS fillfactor  FROM pg_index idx JOIN pg_class cls ON cls.oid=indexrelid JOIN pg_class tab ON tab.oid=indrelid LEFT OUTER JOIN pg_tablespace ta on ta.oid=cls.reltablespace JOIN pg_namespace n ON n.oid=tab.relnamespace JOIN pg_am am ON am.oid=cls.relam LEFT JOIN pg_depend dep ON (dep.classid = cls.tableoid AND dep.objid = cls.oid AND dep.refobjsubid = '0' AND dep.refclassid=(SELECT oid FROM pg_class WHERE relname='pg_constraint') AND dep.deptype='i') LEFT OUTER JOIN pg_constraint con ON (con.tableoid = dep.refclassid AND con.oid = dep.refobjid) LEFT OUTER JOIN pg_description desp ON (desp.objoid=con.oid AND desp.objsubid = 0 AND desp.classoid='pg_constraint'::regclass) WHERE n.nspname ='public' and tab.relname = 'hash_list'  AND contype='u' ORDER BY cls.relname","test1111",24334,"polar_test","100.104.175.251","00000",2,0,38,2023-07-26 14:32:23,1690353143000000
"execute <unnamed>: select version()","test1111",24334,"polar_test","100.104.175.251","00000",0,0,10,2023-07-26 14:32:23,1690353143000000
"execute <unnamed>: SELECT 'TABLE' AS objectkind, c.oid, conname, relname, nspname, description, pg_get_expr(conbin, conrelid, true) as consrc , connoinherit, convalidated  FROM pg_constraint c  JOIN pg_class cl ON cl.oid=conrelid JOIN pg_namespace nl ON nl.oid=relnamespace LEFT OUTER JOIN pg_description des ON (des.objoid=c.oid AND des.classoid='pg_constraint'::regclass) WHERE contype = 'c' AND nspname = 'public' and relname = 'hash_list' UNION SELECT 'DOMAIN' AS objectkind, c.oid, conname, typname as relname, nspname, description,      regexp_replace(pg_get_constraintdef(c.oid, true), E'CHECK \((.*)\).*', E'\1') as consrc, connoinherit, convalidated  FROM pg_constraint c  JOIN pg_type t ON t.oid=contypid  JOIN pg_namespace nl ON nl.oid=typnamespace  LEFT OUTER JOIN pg_description des ON (des.objoid=t.oid AND des.classoid='pg_constraint'::regclass) WHERE contype = 'c' AND nspname = 'public' and typname = 'hash_list' ORDER BY conname","test1111",24334,"polar_test","100.104.175.251","00000",26,0,99,2023-07-26 14:32:23,1690353143000000
"execute <unnamed>: select pg_constraint.conname as pk_name,pg_attribute.attname as colname,pg_type.typname as typename from pg_constraint  inner join pg_class on pg_constraint.conrelid = pg_class.oid inner join pg_attribute on pg_attribute.attrelid = pg_class.oid  and  pg_attribute.attnum = pg_constraint.conkey[1] inner join pg_type on pg_type.oid = pg_attribute.atttypid where pg_class.oid = $$hash_list$$::regclass::oid and pg_constraint.contype='p' and pg_table_is_visible(pg_class.oid)","test1111",24334,"polar_test","100.104.175.251","00000",0,0,36,2023-07-26 14:32:23,1690353143000000
"execute <unnamed>: select i.relname as indname,i.relowner as indowner,idx.indrelid::regclass,am.amname as indam,idx.indkey,ARRAY(SELECT pg_get_indexdef(idx.indexrelid, k + 1, true) FROM generate_subscripts(idx.indkey, 1) as k ORDER BY k) as indkey_names, idx.indexprs IS NOT NULL as indexprs,idx.indpred IS NOT NULL as indpred  from pg_index as idx JOIN pg_class as i ON i.oid = idx.indexrelid JOIN pg_am as am ON i.relam = am.oid where idx.indrelid::regclass = $$hash_list$$::regclass and idx.indisprimary = false order by indname","test1111",24334,"polar_test","100.104.175.251","00000",0,0,43,2023-07-26 14:32:23,1690353143000000
"execute <unnamed>: SELECT current_database()","test1111",24334,"polar_test","100.104.175.251","00000",0,0,16,2023-07-26 14:32:23,1690353143000000
"execute <unnamed>: select version()","test1111",24437,"polar_test","100.104.175.251","00000",0,0,34,2023-07-26 14:32:30,1690353150000000
"execute <unnamed>: SELECT pg_catalog.set_config(name,boot_val,'f') FROM pg_catalog.pg_settings WHERE name = 'nls_date_format'","test1111",24437,"polar_test","100.104.175.251","00000",0,0,1770,2023-07-26 14:32:30,1690353150000000
"execute <unnamed>: SELECT pg_catalog.set_config(name,boot_val,'f') FROM pg_catalog.pg_settings WHERE name = 'nls_timestamp_format'","test1111",24437,"polar_test","100.104.175.251","00000",0,0,1554,2023-07-26 14:32:30,1690353150000000
"execute <unnamed>: SELECT pg_catalog.set_config(name,boot_val,'f') FROM pg_catalog.pg_settings WHERE name = 'nls_timestamp_tz_format'","test1111",24437,"polar_test","100.104.175.251","00000",0,0,1491,2023-07-26 14:32:30,1690353150000000
"execute <unnamed>: SET extra_float_digits = 3","test1111",24437,"polar_test","100.104.175.251","00000",0,0,15,2023-07-26 14:32:30,1690353150000000
"execute <unnamed>: SET application_name = 'PolarDB JDBC Driver'","test1111",24437,"polar_test","100.104.175.251","00000",0,0,12,2023-07-26 14:32:30,1690353150000000
"execute <unnamed>: SET extra_float_digits = 3","test1111",24438,"polar_test","100.104.175.251","00000",0,0,36,2023-07-26 14:32:30,1690353150000000
"execute <unnamed>: SELECT pg_catalog.set_config(name,'YYYY-MM-DD HH24:MI:SS','f') FROM pg_catalog.pg_settings WHERE name = 'nls_date_format'","test1111",24438,"polar_test","100.104.175.251","00000",0,0,1893,2023-07-26 14:32:30,1690353150000000
"execute <unnamed>: SELECT pg_catalog.set_config(name,'YYYY-MM-DD HH24:MI:SS.FF','f') FROM pg_catalog.pg_settings WHERE name = 'nls_timestamp_format'","test1111",24438,"polar_test","100.104.175.251","00000",0,0,1560,2023-07-26 14:32:30,1690353150000000
"execute <unnamed>: SELECT pg_catalog.set_config(name,'YYYY-MM-DD HH24:MI:SS.FFOF','f') FROM pg_catalog.pg_settings WHERE name = 'nls_timestamp_tz_format'","test1111",24438,"polar_test","100.104.175.251","00000",0,0,1552,2023-07-26 14:32:30,1690353150000000
"execute <unnamed>: SET application_name = 'PolarDB2 JDBC Driver'","test1111",24438,"polar_test","100.104.175.251","00000",0,0,14,2023-07-26 14:32:30,1690353150000000
"execute <unnamed>: select 1","test1111",24438,"polar_test","100.104.175.251","00000",0,0,14,2023-07-26 14:32:30,1690353150000000
"execute <unnamed>: set search_path = "public"","test1111",24438,"polar_test","100.104.175.251","00000",0,0,14,2023-07-26 14:32:30,1690353150000000
"execute <unnamed>: select  c.relname table_name, 
   nsp.nspname schema_name,        cmt.description as description,
       c.reltuples::bigint num_rows,
       pg_total_relation_size(c.oid) / 1048576 storeCapacity,
       coalesce(pg_stat_get_last_analyze_time(c.oid),
                pg_stat_get_last_autoanalyze_time(c.oid)) createTime,
       coalesce(pg_stat_get_last_vacuum_time(c.oid),
                pg_stat_get_last_autovacuum_time(c.oid)) last_ddl_time,
       current_setting('server_encoding')::varchar  as encoding,
       CASE WHEN c.relkind = 'f' THEN 'FOREIGN' ELSE 'NORMAL' END as tableType
  from pg_namespace nsp, pg_class c
  left join pg_description cmt
    on c.oid = cmt.objoid
   and cmt.objsubid = 0
 where c.relkind in ('r', 'p', 'f')
   and c.relnamespace = nsp.oid
   and nsp.nspname = 'public'
 and c.relname in ('hash_range')   order by c.relname","test1111",24438,"polar_test","100.104.175.251","00000",72,0,11271,2023-07-26 14:32:30,1690353150000000
"execute <unnamed>: SELECT c.oid, a.attnum, a.attname, c.relname, n.nspname, a.attnotnull OR (t.typtype = 'd' AND t.typnotnull), a.attidentity is not null OR pg_catalog.pg_get_expr(d.adbin, d.adrelid) LIKE '%nextval(%' FROM pg_catalog.pg_class c JOIN pg_catalog.pg_namespace n ON (c.relnamespace = n.oid) JOIN pg_catalog.pg_attribute a ON (c.oid = a.attrelid) JOIN pg_catalog.pg_type t ON (a.atttypid = t.oid) LEFT JOIN pg_catalog.pg_attrdef d ON (d.adrelid = a.attrelid AND d.adnum = a.attnum) JOIN (SELECT 1259 AS oid , 2 AS attnum UNION ALL SELECT 2615, 2 UNION ALL SELECT 2609, 4) vals ON (c.oid = vals.oid AND a.attnum = vals.attnum)","test1111",24438,"polar_test","100.104.175.251","00000",24,0,71,2023-07-26 14:32:30,1690353150000000
"execute <unnamed>: select schemaname,tablename,tableowner,tablespace from pg_tables where schemaname = 'public' and tablename = 'hash_range'","test1111",24438,"polar_test","100.104.175.251","00000",8,0,29,2023-07-26 14:32:30,1690353150000000
"execute <unnamed>: select version()","test1111",24438,"polar_test","100.104.175.251","00000",0,0,12,2023-07-26 14:32:30,1690353150000000
"execute <unnamed>: SELECT c.oid, c.relhasrules,c.relhastriggers,c.relpersistence,c.reloptions, com.description from pg_class c INNER JOIN pg_namespace n ON c.relnamespace = n.oid left join pg_description com on objsubid = 0 and com.objoid = c.oid where  n.nspname = 'public' and c.relname = 'hash_range'","test1111",24438,"polar_test","100.104.175.251","00000",6,0,37,2023-07-26 14:32:30,1690353150000000
"execute <unnamed>: select distinct ordinal_position,pg_catalog.col_description(b.oid,ordinal_position)  as column_comment,table_catalog,table_schema,table_name,column_name,attinhcount,data_type,udt_name,is_nullable,column_default,numeric_scale,numeric_precision,collation_schema,collation_name, format_type(a.atttypid, a.atttypmod) as view_type,indisprimary from information_schema.Columns c inner join  pg_attribute a ON (a.attname = c.column_name) left JOIN pg_class b ON (a.attrelid = b.oid and b.relname = c.table_name) left jOIN pg_namespace n ON (n.oid = b.relnamespace and n.nspname = c.table_schema) left join pg_index i on a.attnum = any(i.indkey) and i.indrelid = b.oid where table_schema = 'public' and table_name = 'hash_range' and attrelid = $$hash_range$$::regclass::oid order by ordinal_position","test1111",24438,"polar_test","100.104.175.251","00000",277,0,1092,2023-07-26 14:32:30,1690353150000000
"execute <unnamed>: select c.column_name from information_schema.table_constraints s left join  information_schema.constraint_column_usage c on s.constraint_name = c.constraint_name and s.constraint_schema = c.constraint_schema where s.table_schema = 'public' and s.table_name =  'hash_range' and s.constraint_type = 'PRIMARY KEY'","test1111",24438,"polar_test","100.104.175.251","00000",3,0,28,2023-07-26 14:32:30,1690353150000000
"execute <unnamed>: SELECT c1.relnamespace as childnamespaceoid,inh.inhrelid as childoid,n1.nspname as childnamespacename,c1.relname AS childname, c2.relnamespace as parentnamespaceoid,inh.inhparent as parentoid,n2.nspname as paretnamespacename,c2.relname AS parentname FROM pg_inherits inh JOIN pg_class c1 ON (inh.inhrelid=c1.oid) JOIN pg_class  c2 ON (inh.inhparent=c2.oid) join pg_namespace n1 on c1.relnamespace = n1.oid join pg_namespace n2 on c2.relnamespace = n2.oid where n1.nspname = 'public' and c1.relname = 'hash_range'","test1111",24438,"polar_test","100.104.175.251","00000",3,0,23,2023-07-26 14:32:30,1690353150000000
"execute <unnamed>: select version()","test1111",24438,"polar_test","100.104.175.251","00000",0,0,11,2023-07-26 14:32:30,1690353150000000
"execute <unnamed>: select con.conname as "constraint_name",con.nspname as "child_schema",con.relname as "child_table",att2.attname as "child_column",ns.nspname as "parent_schema",cl.relname as "parent_table",att.attname as "parent_column", con.confdeltype,con.confupdtype,con.condeferrable,con.condeferred,con.convalidated,con.confmatchtype,des.description from (select unnest(con1.conkey) as "parent",unnest(con1.confkey) as "child", con1.oid as "constranit_oid" ,con1.confdeltype,con1.confupdtype,con1.condeferrable,con1.condeferred,con1.convalidated,con1.confmatchtype,con1.confrelid,con1.conrelid,cl.relname,cl.relnamespace,ns.nspname,con1.conname from pg_class cl join pg_namespace ns on cl.relnamespace = ns.oid join pg_constraint con1 on con1.conrelid = cl.oid where ns.nspname = 'public' and cl.relname ='hash_range' and con1.contype = 'f') con join pg_attribute att on att.attrelid = con.confrelid and att.attnum = con.child join pg_class cl on cl.oid = con.confrelid join pg_namespace ns on cl.relnamespace = ns.oid join pg_attribute att2 on att2.attrelid = con.conrelid and att2.attnum = con.parent left join pg_description des on con.constranit_oid = des.objoid order by con.conname","test1111",24438,"polar_test","100.104.175.251","00000",6,0,47,2023-07-26 14:32:30,1690353150000000
"execute <unnamed>: SELECT DISTINCT ON(cls.relname) cls.oid, cls.relname as idxname, indrelid, indkey, indisclustered, indisvalid, indisunique, indisprimary, n.nspname,indnatts, cls.reltablespace AS spcoid, spcname, tab.relname as tabname, indclass, con.oid AS conoid,desp.description,pg_get_expr(indpred, indrelid, true) as indconstraint, contype, condeferrable, condeferred, amname, substring(array_to_string(cls.reloptions, ',') from 'fillfactor=([0-9]*)') AS fillfactor FROM pg_index idx JOIN pg_class cls ON cls.oid=indexrelid JOIN pg_class tab ON tab.oid=indrelid LEFT OUTER JOIN pg_tablespace ta on ta.oid=cls.reltablespace JOIN pg_namespace n ON n.oid=tab.relnamespace JOIN pg_am am ON am.oid=cls.relam LEFT JOIN pg_depend dep ON (dep.classid = cls.tableoid AND dep.objid = cls.oid AND dep.refobjsubid = '0' AND dep.refclassid=(SELECT oid FROM pg_class WHERE relname='pg_constraint') AND dep.deptype='i') LEFT OUTER JOIN pg_constraint con ON (con.tableoid = dep.refclassid AND con.oid = dep.refobjid) LEFT OUTER JOIN pg_description des ON (des.objoid=cls.oid AND des.classoid='pg_class'::regclass) LEFT OUTER JOIN pg_description desp ON (desp.objoid=con.oid AND desp.objsubid = 0 AND desp.classoid='pg_constraint'::regclass) WHERE n.nspname = 'public'  and tab.relname ='hash_range'  AND contype='x' ORDER BY cls.relname","test1111",24438,"polar_test","100.104.175.251","00000",3,0,36,2023-07-26 14:32:30,1690353150000000
"execute <unnamed>: SELECT DISTINCT ON(cls.relname) cls.oid, cls.relname as idxname, indrelid, indkey, indisclustered, indisvalid, indisunique, indisprimary, n.nspname,indnatts, cls.reltablespace AS spcoid, spcname, tab.relname as tabname, indclass, con.oid AS conoid, desp.description  AS description,pg_get_expr(indpred, indrelid, true) as indconstraint, contype, condeferrable, condeferred, amname, substring(array_to_string(cls.reloptions, ',') from 'fillfactor=([0-9]*)') AS fillfactor  FROM pg_index idx JOIN pg_class cls ON cls.oid=indexrelid JOIN pg_class tab ON tab.oid=indrelid LEFT OUTER JOIN pg_tablespace ta on ta.oid=cls.reltablespace JOIN pg_namespace n ON n.oid=tab.relnamespace JOIN pg_am am ON am.oid=cls.relam LEFT JOIN pg_depend dep ON (dep.classid = cls.tableoid AND dep.objid = cls.oid AND dep.refobjsubid = '0' AND dep.refclassid=(SELECT oid FROM pg_class WHERE relname='pg_constraint') AND dep.deptype='i') LEFT OUTER JOIN pg_constraint con ON (con.tableoid = dep.refclassid AND con.oid = dep.refobjid) LEFT OUTER JOIN pg_description desp ON (desp.objoid=con.oid AND desp.objsubid = 0 AND desp.classoid='pg_constraint'::regclass) WHERE n.nspname ='public' and tab.relname = 'hash_range'  AND contype='u' ORDER BY cls.relname","test1111",24438,"polar_test","100.104.175.251","00000",3,0,31,2023-07-26 14:32:30,1690353150000000
"execute <unnamed>: select version()","test1111",24438,"polar_test","100.104.175.251","00000",0,0,10,2023-07-26 14:32:30,1690353150000000
"execute <unnamed>: SELECT 'TABLE' AS objectkind, c.oid, conname, relname, nspname, description, pg_get_expr(conbin, conrelid, true) as consrc , connoinherit, convalidated  FROM pg_constraint c  JOIN pg_class cl ON cl.oid=conrelid JOIN pg_namespace nl ON nl.oid=relnamespace LEFT OUTER JOIN pg_description des ON (des.objoid=c.oid AND des.classoid='pg_constraint'::regclass) WHERE contype = 'c' AND nspname = 'public' and relname = 'hash_range' UNION SELECT 'DOMAIN' AS objectkind, c.oid, conname, typname as relname, nspname, description,      regexp_replace(pg_get_constraintdef(c.oid, true), E'CHECK \((.*)\).*', E'\1') as consrc, connoinherit, convalidated  FROM pg_constraint c  JOIN pg_type t ON t.oid=contypid  JOIN pg_namespace nl ON nl.oid=typnamespace  LEFT OUTER JOIN pg_description des ON (des.objoid=t.oid AND des.classoid='pg_constraint'::regclass) WHERE contype = 'c' AND nspname = 'public' and typname = 'hash_range' ORDER BY conname","test1111",24438,"polar_test","100.104.175.251","00000",27,0,96,2023-07-26 14:32:30,1690353150000000
"execute <unnamed>: select pg_constraint.conname as pk_name,pg_attribute.attname as colname,pg_type.typname as typename from pg_constraint  inner join pg_class on pg_constraint.conrelid = pg_class.oid inner join pg_attribute on pg_attribute.attrelid = pg_class.oid  and  pg_attribute.attnum = pg_constraint.conkey[1] inner join pg_type on pg_type.oid = pg_attribute.atttypid where pg_class.oid = $$hash_range$$::regclass::oid and pg_constraint.contype='p' and pg_table_is_visible(pg_class.oid)","test1111",24438,"polar_test","100.104.175.251","00000",0,0,48,2023-07-26 14:32:30,1690353150000000
"execute <unnamed>: select i.relname as indname,i.relowner as indowner,idx.indrelid::regclass,am.amname as indam,idx.indkey,ARRAY(SELECT pg_get_indexdef(idx.indexrelid, k + 1, true) FROM generate_subscripts(idx.indkey, 1) as k ORDER BY k) as indkey_names, idx.indexprs IS NOT NULL as indexprs,idx.indpred IS NOT NULL as indpred  from pg_index as idx JOIN pg_class as i ON i.oid = idx.indexrelid JOIN pg_am as am ON i.relam = am.oid where idx.indrelid::regclass = $$hash_range$$::regclass and idx.indisprimary = false order by indname","test1111",24438,"polar_test","100.104.175.251","00000",0,0,50,2023-07-26 14:32:30,1690353150000000
"execute <unnamed>: SELECT current_database()","test1111",24438,"polar_test","100.104.175.251","00000",0,0,14,2023-07-26 14:32:30,1690353150000000
"execute <unnamed>: SET extra_float_digits = 3","test1111",23204,"polar_test","100.104.175.10","00000",0,0,31,2023-07-26 14:31:05,1690353065000000
"execute <unnamed>: SELECT pg_catalog.set_config(name,'YYYY-MM-DD HH24:MI:SS','f') FROM pg_catalog.pg_settings WHERE name = 'nls_date_format'","test1111",23204,"polar_test","100.104.175.10","00000",0,0,1795,2023-07-26 14:31:05,1690353065000000
"execute <unnamed>: SELECT pg_catalog.set_config(name,'YYYY-MM-DD HH24:MI:SS.FF','f') FROM pg_catalog.pg_settings WHERE name = 'nls_timestamp_format'","test1111",23204,"polar_test","100.104.175.10","00000",0,0,1538,2023-07-26 14:31:05,1690353065000000
"execute <unnamed>: SELECT pg_catalog.set_config(name,'YYYY-MM-DD HH24:MI:SS.FFOF','f') FROM pg_catalog.pg_settings WHERE name = 'nls_timestamp_tz_format'","test1111",23204,"polar_test","100.104.175.10","00000",0,0,1472,2023-07-26 14:31:05,1690353065000000
"execute <unnamed>: SET application_name = 'PolarDB2 JDBC Driver'","test1111",23204,"polar_test","100.104.175.10","00000",0,0,12,2023-07-26 14:31:05,1690353065000000
"execute <unnamed>: select 1","test1111",23204,"polar_test","100.104.175.10","00000",0,0,17,2023-07-26 14:31:05,1690353065000000
"execute <unnamed>: set search_path = "public"","test1111",23204,"polar_test","100.104.175.10","00000",0,0,22,2023-07-26 14:31:05,1690353065000000
"execute <unnamed>: select  c.relname table_name, 
   nsp.nspname schema_name,        cmt.description as description,
       c.reltuples::bigint num_rows,
       pg_total_relation_size(c.oid) / 1048576 storeCapacity,
       coalesce(pg_stat_get_last_analyze_time(c.oid),
                pg_stat_get_last_autoanalyze_time(c.oid)) createTime,
       coalesce(pg_stat_get_last_vacuum_time(c.oid),
                pg_stat_get_last_autovacuum_time(c.oid)) last_ddl_time,
       current_setting('server_encoding')::varchar  as encoding,
       CASE WHEN c.relkind = 'f' THEN 'FOREIGN' ELSE 'NORMAL' END as tableType
  from pg_namespace nsp, pg_class c
  left join pg_description cmt
    on c.oid = cmt.objoid
   and cmt.objsubid = 0
 where c.relkind in ('r', 'p', 'f')
   and c.relnamespace = nsp.oid
   and nsp.nspname = 'public'
   order by c.relname","test1111",23204,"polar_test","100.104.175.10","00000",595,0,169,2023-07-26 14:31:05,1690353065000000
"execute <unnamed>: SET extra_float_digits = 3","test1111",23189,"polar_test","100.104.175.251","00000",0,0,37,2023-07-26 14:31:05,1690353065000000
"execute <unnamed>: SELECT pg_catalog.set_config(name,'YYYY-MM-DD HH24:MI:SS','f') FROM pg_catalog.pg_settings WHERE name = 'nls_date_format'","test1111",23189,"polar_test","100.104.175.251","00000",0,0,3434,2023-07-26 14:31:05,1690353065000000
"execute <unnamed>: SELECT pg_catalog.set_config(name,'YYYY-MM-DD HH24:MI:SS.FF','f') FROM pg_catalog.pg_settings WHERE name = 'nls_timestamp_format'","test1111",23189,"polar_test","100.104.175.251","00000",0,0,1612,2023-07-26 14:31:05,1690353065000000
"execute <unnamed>: SELECT pg_catalog.set_config(name,'YYYY-MM-DD HH24:MI:SS.FFOF','f') FROM pg_catalog.pg_settings WHERE name = 'nls_timestamp_tz_format'","test1111",23189,"polar_test","100.104.175.251","00000",0,0,1647,2023-07-26 14:31:05,1690353065000000
"execute <unnamed>: SET application_name = 'PolarDB2 JDBC Driver'","test1111",23189,"polar_test","100.104.175.251","00000",0,0,13,2023-07-26 14:31:05,1690353065000000
"execute <unnamed>: select 1","test1111",23189,"polar_test","100.104.175.251","00000",0,0,14,2023-07-26 14:31:05,1690353065000000
"execute <unnamed>: set search_path = "public"","test1111",23189,"polar_test","100.104.175.251","00000",0,0,22,2023-07-26 14:31:05,1690353065000000
"execute <unnamed>: select  c.relname table_name, 
   nsp.nspname schema_name,        cmt.description as description,
       c.reltuples::bigint num_rows,
       pg_total_relation_size(c.oid) / 1048576 storeCapacity,
       coalesce(pg_stat_get_last_analyze_time(c.oid),
                pg_stat_get_last_autoanalyze_time(c.oid)) createTime,
       coalesce(pg_stat_get_last_vacuum_time(c.oid),
                pg_stat_get_last_autovacuum_time(c.oid)) last_ddl_time,
       current_setting('server_encoding')::varchar  as encoding,
       CASE WHEN c.relkind = 'f' THEN 'FOREIGN' ELSE 'NORMAL' END as tableType
  from pg_namespace nsp, pg_class c
  left join pg_description cmt
    on c.oid = cmt.objoid
   and cmt.objsubid = 0
 where c.relkind in ('r', 'p', 'f')
   and c.relnamespace = nsp.oid
   and nsp.nspname = 'public'
   order by c.relname","test1111",23189,"polar_test","100.104.175.251","00000",595,0,151,2023-07-26 14:31:05,1690353065000000
"execute <unnamed>: select 1","test1111",23239,"polar_test","100.104.175.251","00000",0,0,12,2023-07-26 14:32:19,1690353139000000
"execute <unnamed>: set search_path = "public"","test1111",23239,"polar_test","100.104.175.251","00000",0,0,15,2023-07-26 14:32:19,1690353139000000
"statement: /* Query from DMS-WEBSQL-0-Qid_9039393046027846z by user 1086270528945027 */ -- show
\d hash_hash
\d hash_hash_p_northcentral
\d hash_hash_p_sc_average
DROP TABLE hash_hash","test1111",23239,"polar_test","100.104.175.251","42601",0,0,31,2023-07-26 14:32:19,1690353139000000
"execute <unnamed>: select 1","test1111",23239,"polar_test","100.104.175.251","00000",0,0,20,2023-07-26 14:32:19,1690353139000000
"execute <unnamed>: set search_path = "public"","test1111",23239,"polar_test","100.104.175.251","00000",0,0,18,2023-07-26 14:32:19,1690353139000000
"execute <unnamed>: /* Query from DMS-WEBSQL-0-Qid_9039393046028100e by user 1086270528945027 */ 

-- Composite Hash-List Partitioned Tables
CREATE TABLE hash_list
( id             NUMBER
, account_number NUMBER
, customer_id    NUMBER
, balance        NUMBER
, branch_id      NUMBER
, region         VARCHAR(2)
, status         VARCHAR2(1)
)
PARTITION BY HASH (region)
SUBPARTITION BY LIST (status)
( PARTITION p_northwest
  ( SUBPARTITION p_nw_bad VALUES ('B')
  , SUBPARTITION p_nw_average VALUES ('A')
  , SUBPARTITION p_nw_good VALUES ('G')
  )
, PARTITION p_southwest 
  ( SUBPARTITION p_sw_bad VALUES ('B')
  , SUBPARTITION p_sw_average VALUES ('A')
  , SUBPARTITION p_sw_good VALUES ('G')
  )
, PARTITION p_northeast
  ( SUBPARTITION p_ne_bad VALUES ('B')
  , SUBPARTITION p_ne_average VALUES ('A')
  , SUBPARTITION p_ne_good VALUES ('G')
  )
, PARTITION p_southeast 
  ( SUBPARTITION p_se_bad VALUES ('B')
  , SUBPARTITION p_se_average VALUES ('A')
  , SUBPARTITION p_se_good VALUES ('G')
  )
, PARTITION p_northcentral 
  ( SUBPARTITION p_nc_bad VALUES ('B')
  , SUBPARTITION p_nc_average VALUES ('A')
  , SUBPARTITION p_nc_good VALUES ('G')
  )
, PARTITION p_southcentral
  ( SUBPARTITION p_sc_bad VALUES ('B')
  , SUBPARTITION p_sc_average VALUES ('A')
  , SUBPARTITION p_sc_good VALUES ('G')
  )
)","test1111",23239,"polar_test","100.104.175.251","00000",7327,0,3530462,2023-07-26 14:32:23,1690353143000000
"execute <unnamed>: select 1","test1111",23239,"polar_test","100.104.175.251","00000",0,0,12,2023-07-26 14:32:23,1690353143000000
"execute <unnamed>: set search_path = "public"","test1111",23239,"polar_test","100.104.175.251","00000",0,0,20,2023-07-26 14:32:23,1690353143000000
"statement: /* Query from DMS-WEBSQL-0-Qid_9039393046028434o by user 1086270528945027 */ -- show
\d hash_list
\d hash_list_p_southeast
\d hash_list_p_nc_good
DROP TABLE hash_list","test1111",23239,"polar_test","100.104.175.251","42601",0,0,43,2023-07-26 14:32:23,1690353143000000
"execute <unnamed>: select 1","test1111",23239,"polar_test","100.104.175.251","00000",0,0,13,2023-07-26 14:32:23,1690353143000000
"execute <unnamed>: set search_path = "public"","test1111",23239,"polar_test","100.104.175.251","00000",0,0,18,2023-07-26 14:32:23,1690353143000000
"execute <unnamed>: /* Query from DMS-WEBSQL-0-Qid_9039393046028746Y by user 1086270528945027 */ 


-- Composite Hash-Range Partitioned Tables
CREATE TABLE hash_range
( id             NUMBER
, account_number NUMBER
, customer_id    NUMBER
, balance        NUMBER
, branch_id      NUMBER
, region         VARCHAR(2)
, status         VARCHAR2(1)
)
PARTITION BY HASH (region)
SUBPARTITION BY RANGE (balance)
( PARTITION p_northwest 
  ( SUBPARTITION p_nw_low VALUES LESS THAN (1000)
  , SUBPARTITION p_nw_average VALUES LESS THAN (10000)
  , SUBPARTITION p_nw_high VALUES LESS THAN (100000)
  , SUBPARTITION p_nw_extraordinary VALUES LESS THAN (MAXVALUE)
  )
, PARTITION p_southwest 
  ( SUBPARTITION p_sw_low VALUES LESS THAN (1000)
  , SUBPARTITION p_sw_average VALUES LESS THAN (10000)
  , SUBPARTITION p_sw_high VALUES LESS THAN (100000)
  , SUBPARTITION p_sw_extraordinary VALUES LESS THAN (MAXVALUE)
  )
, PARTITION p_northeast 
  ( SUBPARTITION p_ne_low VALUES LESS THAN (1000)
  , SUBPARTITION p_ne_average VALUES LESS THAN (10000)
  , SUBPARTITION p_ne_high VALUES LESS THAN (100000)
  , SUBPARTITION p_ne_extraordinary VALUES LESS THAN (MAXVALUE)
  )
, PARTITION p_southeast 
  ( SUBPARTITION p_se_low VALUES LESS THAN (1000)
  , SUBPARTITION p_se_average VALUES LESS THAN (10000)
  , SUBPARTITION p_se_high VALUES LESS THAN (100000)
  , SUBPARTITION p_se_extraordinary VALUES LESS THAN (MAXVALUE)
  )
, PARTITION p_northcentral
  ( SUBPARTITION p_nc_low VALUES LESS THAN (1000)
  , SUBPARTITION p_nc_average VALUES LESS THAN (10000)
  , SUBPARTITION p_nc_high VALUES LESS THAN (100000)
  , SUBPARTITION p_nc_extraordinary VALUES LESS THAN (MAXVALUE)
  )
, PARTITION p_southcentral 
  ( SUBPARTITION p_sc_low VALUES LESS THAN (1000)
  , SUBPARTITION p_sc_average VALUES LESS THAN (10000)
  , SUBPARTITION p_sc_high VALUES LESS THAN (100000)
  , SUBPARTITION p_sc_extraordinary VALUES LESS THAN (MAXVALUE)
  )
)","test1111",23239,"polar_test","100.104.175.251","00000",9316,0,6588986,2023-07-26 14:32:30,1690353150000000
"execute <unnamed>: select 1","test1111",23239,"polar_test","100.104.175.251","00000",0,0,12,2023-07-26 14:32:30,1690353150000000
"execute <unnamed>: set search_path = "public"","test1111",23239,"polar_test","100.104.175.251","00000",0,0,15,2023-07-26 14:32:30,1690353150000000
"statement: /* Query from DMS-WEBSQL-0-Qid_9039393046028965B by user 1086270528945027 */ -- show
\d hash_range
\d hash_range_p_northeast
\d hash_range_p_se_high
DROP TABLE hash_range","test1111",23239,"polar_test","100.104.175.251","42601",0,0,30,2023-07-26 14:32:30,1690353150000000
"execute <unnamed>: select 1","test1111",23239,"polar_test","100.104.175.251","00000",0,0,11,2023-07-26 14:32:30,1690353150000000
"execute <unnamed>: set search_path = "public"","test1111",23239,"polar_test","100.104.175.251","00000",0,0,18,2023-07-26 14:32:30,1690353150000000
"statement: /* Query from DMS-WEBSQL-0-Qid_9039393046029189C by user 1086270528945027 */ 

-- error 
-- range_hash
CREATE TABLE range_partitions_sales
  ( prod_id       NUMBER(6)
  , cust_id       NUMBER
  , time_id       DATE
  , channel_id    CHAR(1)
  , promo_id      NUMBER(6)
  , quantity_sold NUMBER(3)
  , amount_sold   NUMBER(10,2)
  )PARTITION BY RANGE (time_id)
 ( PARTITION p1 , PARTITION p2 , PARTITION p3 , PARTITION p4)","test1111",23239,"polar_test","100.104.175.251","42P07",2,0,169,2023-07-26 14:32:30,1690353150000000
"execute <unnamed>: select 1","test1111",23239,"polar_test","100.104.175.251","00000",0,0,11,2023-07-26 14:32:30,1690353150000000
"execute <unnamed>: set search_path = "public"","test1111",23239,"polar_test","100.104.175.251","00000",0,0,16,2023-07-26 14:32:30,1690353150000000
"statement: /* Query from DMS-WEBSQL-0-Qid_9039393046029443q by user 1086270528945027 */ 

-- list_partitions
CREATE TABLE list_partitions_sales
    (deptno number, 
    deptname varchar2(20),
    quarterly_sales number(10, 2),
    state varchar2(2))
PARTITION BY LIST (state)
    (PARTITION sales_q1_2006 VALUES LESS THAN (TO_DATE('01-APR-2006','dd-MON-yyyy')),
    PARTITION sales_q2_2006 VALUES LESS THAN (TO_DATE('01-JUL-2006','dd-MON-yyyy')),
    PARTITION sales_q3_2006 VALUES LESS THAN (TO_DATE('01-OCT-2006','dd-MON-yyyy')),
    PARTITION sales_q4_2006 VALUES LESS THAN (TO_DATE('01-JAN-2007','dd-MON-yyyy')))","test1111",23239,"polar_test","100.104.175.251","42P07",2,0,145,2023-07-26 14:32:30,1690353150000000
"execute <unnamed>: select 1","test1111",23239,"polar_test","100.104.175.251","00000",0,0,12,2023-07-26 14:32:30,1690353150000000
"execute <unnamed>: set search_path = "public"","test1111",23239,"polar_test","100.104.175.251","00000",0,0,18,2023-07-26 14:32:30,1690353150000000
"statement: /* Query from DMS-WEBSQL-0-Qid_9039393046029698O by user 1086270528945027 */ 

-- hash_partitions
CREATE TABLE hash_partitions_sales (deptno NUMBER, deptname VARCHAR(32))
     PARTITION BY HASH(deptno)
       (PARTITION q1_northwest VALUES ('OR', 'WA'),
        PARTITION q1_southwest VALUES ('AZ', 'UT', 'NM'),
        PARTITION q1_northeast VALUES  ('NY', 'VM', 'NJ'),
        PARTITION q1_southeast VALUES ('FL', 'GA'),
        PARTITION q1_northcentral VALUES ('SD', 'WI'),
        PARTITION q1_southcentral VALUES ('OK', 'TX'))","test1111",23239,"polar_test","100.104.175.251","42P07",2,0,124,2023-07-26 14:32:30,1690353150000000
"execute <unnamed>: select 1","test1111",23204,"polar_test","100.104.175.10","00000",0,0,15,2023-07-26 14:32:36,1690353156000000
"execute <unnamed>: select 1","test1111",23189,"polar_test","100.104.175.251","00000",0,0,16,2023-07-26 14:32:57,1690353177000000
"execute <unnamed>: select 1","test1111",23239,"polar_test","100.104.175.251","00000",0,0,14,2023-07-26 14:33:25,1690353205000000
"execute <unnamed>: select 1","test1111",23204,"polar_test","100.104.175.10","00000",0,0,16,2023-07-26 14:33:54,1690353234000000
